{
	"id": "38fd2eadb0437bdb04abaf938b80bc09",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenSale.sol": {
				"content": "//SPDX-License-Identifier: None\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract TokenSale is Ownable{\r\n  using SafeERC20 for IERC20;\r\n  IERC20 private _tokenAddress;\r\n  uint256 private _saleStart;\r\n  uint256 private _saleEnd;\r\n  IERC20 public _usdcInstance;\r\n\r\n  \r\n  struct TokenRecord{\r\n    uint256 _amount;\r\n    address _buyerAddress;\r\n    string _tokenSymbol;\r\n  }\r\n  \r\n  mapping(address => TokenRecord) record;\r\n\r\n  constructor(address payable tokenAddress_,uint256 saleStart_,uint256 saleEnd_,address usdcAddress_){\r\n    _transferOwnership(tokenAddress_);\r\n    _usdcInstance = IERC20(usdcAddress_);\r\n    _tokenAddress = IERC20(tokenAddress_);\r\n    _saleStart = saleStart_;\r\n    _saleEnd = saleEnd_;\r\n  }  \r\n\r\n  function saleStart() public view virtual returns (uint256) {\r\n      return _saleStart;\r\n  }\r\n\r\n  function getOwner() public view returns(address){\r\n      return owner();\r\n  }\r\n  function bala(address add) public view virtual returns (uint256){\r\n    return _usdcInstance.balanceOf(add);\r\n  }\r\n\r\n  function saleEnd() public view virtual returns (uint256) {\r\n      return _saleEnd;\r\n  }\r\n\r\n  function getRecord(address _address) public virtual view returns(uint256){\r\n    return record[_address]._amount;\r\n  }\r\n\r\n  function purchase(uint256 _amount) public{\r\n      require(block.timestamp>=_saleStart,\"Sale hasn't started yet\");\r\n      require(block.timestamp<=_saleEnd,\"Sale has ended\");\r\n      // _usdcInstance.safeApprove(owner(),_amount);\r\n      _usdcInstance.safeTransferFrom(msg.sender,owner(), _amount);\r\n      // ERC20Interface(ERC20Address[_tokenSymbol]).approve(owner, _amount);\r\n      // (bool success, bytes memory result) = address(ERC20Address[_tokenSymbol]).delegatecall(abi.encodeWithSignature(\"approve(address,uint256)\", owner, _amount));\r\n      // ERC20Interface(ERC20Address[_tokenSymbol]).safeTransferFrom(msg.sender,owner, _amount);\r\n      // (bool success, bytes memory result) = address(ERC20Address[_tokenSymbol]).delegatecall(abi.encodeWithSignature(\"transferFrom(address,address,uint256)\", msg.sender, _amount));\r\n      // TokenRecord memory rec = TokenRecord(_amount * 10 ** _tokenAddress.decimals(),msg.sender,_tokenSymbol);\r\n      // record[msg.sender]= rec;\r\n  }\r\n\r\n  function purchases(uint256 _amount) public {\r\n      require(block.timestamp>=_saleStart,\"Sale hasn't started yet\");\r\n      require(block.timestamp<=_saleEnd,\"Sale has ended\");\r\n      // ERC20Interface(ERC20Address[_tokenSymbol]).approve(owner, _amount);\r\n      // (bool success, bytes memory result) = address(ERC20Address[_tokenSymbol]).delegatecall(abi.encodeWithSignature(\"approves(address,uint256)\", owner(), _amount));\r\n      _usdcInstance.safeTransferFrom(msg.sender,owner(), _amount);\r\n      // (bool success, bytes memory result) = address(ERC20Address[_tokenSymbol]).delegatecall(abi.encodeWithSignature(\"transferFrom(address,address,uint256)\", msg.sender, _amount));\r\n      // TokenRecord memory rec = TokenRecord(_amount * 10 ** _tokenAddress.decimals(),msg.sender,_tokenSymbol);\r\n      // record[msg.sender]= rec;\r\n  }\r\n\r\n  function withdraw(address _to) public virtual payable onlyOwner{\r\n      require(block.timestamp>_saleEnd,\"Sale hasn't ended\");\r\n      _usdcInstance.safeTransfer(_to, _usdcInstance.balanceOf(owner()));\r\n      _usdcInstance.safeTransfer(_to, _usdcInstance.balanceOf(owner()));\r\n  }\r\n\r\n  // function claim() public virtual onlyOwner{\r\n  //   require(block.timestamp>=_saleEnd,\"Sale hasn't ended\");\r\n  //   _tokenAddress.mint(msg.sender,record[msg.sender]._amount);\r\n  //   delete record[msg.sender];\r\n  // }\r\n\r\n  function Return(address payable _returnAddress) public payable onlyOwner returns(bool){\r\n    uint256 returnAmt = record[_returnAddress]._amount;\r\n    require(address(this).balance>=returnAmt,\"Not enough token to return\");\r\n    // _tokenAddress._balances[owner] += returnAmt;\r\n    _returnAddress.transfer(returnAmt);\r\n    return true;\r\n  }\r\n\r\n  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r\n      _saleStart = updatedSaleStartTime;\r\n  }\r\n  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r\n      _saleEnd = updatedSaleEndTime;\r\n  }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenSale.sol": {
				"TokenSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "tokenAddress_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "saleStart_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "saleEnd_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "usdcAddress_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_returnAddress",
									"type": "address"
								}
							],
							"name": "Return",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_usdcInstance",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "bala",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getRecord",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "purchase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "purchases",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleStart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updatedSaleEndTime",
									"type": "uint256"
								}
							],
							"name": "updateSaleEndTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updatedSaleStartTime",
									"type": "uint256"
								}
							],
							"name": "updateSaleStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenSale.sol\":241:4318  contract TokenSale is Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenSale.sol\":590:878  constructor(address payable tokenAddress_,uint256 saleStart_,uint256 saleEnd_,address usdcAddress_){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/TokenSale.sol\":696:729  _transferOwnership(tokenAddress_) */\n  tag_12\n    /* \"contracts/TokenSale.sol\":715:728  tokenAddress_ */\n  dup5\n    /* \"contracts/TokenSale.sol\":696:714  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/TokenSale.sol\":696:729  _transferOwnership(tokenAddress_) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/TokenSale.sol\":759:771  usdcAddress_ */\n  dup1\n    /* \"contracts/TokenSale.sol\":736:749  _usdcInstance */\n  0x04\n  0x00\n    /* \"contracts/TokenSale.sol\":736:772  _usdcInstance = IERC20(usdcAddress_) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":802:815  tokenAddress_ */\n  dup4\n    /* \"contracts/TokenSale.sol\":779:792  _tokenAddress */\n  0x01\n  0x00\n    /* \"contracts/TokenSale.sol\":779:816  _tokenAddress = IERC20(tokenAddress_) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":836:846  saleStart_ */\n  dup3\n    /* \"contracts/TokenSale.sol\":823:833  _saleStart */\n  0x02\n    /* \"contracts/TokenSale.sol\":823:846  _saleStart = saleStart_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":864:872  saleEnd_ */\n  dup2\n    /* \"contracts/TokenSale.sol\":853:861  _saleEnd */\n  0x03\n    /* \"contracts/TokenSale.sol\":853:872  _saleEnd = saleEnd_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":590:878  constructor(address payable tokenAddress_,uint256 saleStart_,uint256 saleEnd_,address usdcAddress_){\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/TokenSale.sol\":241:4318  contract TokenSale is Ownable{\r... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_17:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_19\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:315   */\ntag_21:\n    /* \"#utility.yul\":221:226   */\n  0x00\n    /* \"#utility.yul\":252:258   */\n  dup2\n    /* \"#utility.yul\":246:259   */\n  mload\n    /* \"#utility.yul\":237:259   */\n  swap1\n  pop\n    /* \"#utility.yul\":268:309   */\n  tag_23\n    /* \"#utility.yul\":303:308   */\n  dup2\n    /* \"#utility.yul\":268:309   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":156:315   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":321:464   */\ntag_25:\n    /* \"#utility.yul\":378:383   */\n  0x00\n    /* \"#utility.yul\":409:415   */\n  dup2\n    /* \"#utility.yul\":403:416   */\n  mload\n    /* \"#utility.yul\":394:416   */\n  swap1\n  pop\n    /* \"#utility.yul\":425:458   */\n  tag_27\n    /* \"#utility.yul\":452:457   */\n  dup2\n    /* \"#utility.yul\":425:458   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":321:464   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":470:1306   */\ntag_3:\n    /* \"#utility.yul\":575:581   */\n  0x00\n    /* \"#utility.yul\":583:589   */\n  dup1\n    /* \"#utility.yul\":591:597   */\n  0x00\n    /* \"#utility.yul\":599:605   */\n  dup1\n    /* \"#utility.yul\":648:651   */\n  0x80\n    /* \"#utility.yul\":636:645   */\n  dup6\n    /* \"#utility.yul\":627:634   */\n  dup8\n    /* \"#utility.yul\":623:646   */\n  sub\n    /* \"#utility.yul\":619:652   */\n  slt\n    /* \"#utility.yul\":616:736   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":655:734   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":616:736   */\ntag_30:\n    /* \"#utility.yul\":775:776   */\n  0x00\n    /* \"#utility.yul\":800:872   */\n  tag_33\n    /* \"#utility.yul\":864:871   */\n  dup8\n    /* \"#utility.yul\":855:861   */\n  dup3\n    /* \"#utility.yul\":844:853   */\n  dup9\n    /* \"#utility.yul\":840:862   */\n  add\n    /* \"#utility.yul\":800:872   */\n  tag_21\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":790:872   */\n  swap5\n  pop\n    /* \"#utility.yul\":746:882   */\n  pop\n    /* \"#utility.yul\":921:923   */\n  0x20\n    /* \"#utility.yul\":947:1011   */\n  tag_34\n    /* \"#utility.yul\":1003:1010   */\n  dup8\n    /* \"#utility.yul\":994:1000   */\n  dup3\n    /* \"#utility.yul\":983:992   */\n  dup9\n    /* \"#utility.yul\":979:1001   */\n  add\n    /* \"#utility.yul\":947:1011   */\n  tag_25\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":937:1011   */\n  swap4\n  pop\n    /* \"#utility.yul\":892:1021   */\n  pop\n    /* \"#utility.yul\":1060:1062   */\n  0x40\n    /* \"#utility.yul\":1086:1150   */\n  tag_35\n    /* \"#utility.yul\":1142:1149   */\n  dup8\n    /* \"#utility.yul\":1133:1139   */\n  dup3\n    /* \"#utility.yul\":1122:1131   */\n  dup9\n    /* \"#utility.yul\":1118:1140   */\n  add\n    /* \"#utility.yul\":1086:1150   */\n  tag_25\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1076:1150   */\n  swap3\n  pop\n    /* \"#utility.yul\":1031:1160   */\n  pop\n    /* \"#utility.yul\":1199:1201   */\n  0x60\n    /* \"#utility.yul\":1225:1289   */\n  tag_36\n    /* \"#utility.yul\":1281:1288   */\n  dup8\n    /* \"#utility.yul\":1272:1278   */\n  dup3\n    /* \"#utility.yul\":1261:1270   */\n  dup9\n    /* \"#utility.yul\":1257:1279   */\n  add\n    /* \"#utility.yul\":1225:1289   */\n  tag_17\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1215:1289   */\n  swap2\n  pop\n    /* \"#utility.yul\":1170:1299   */\n  pop\n    /* \"#utility.yul\":470:1306   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1393:1489   */\ntag_39:\n    /* \"#utility.yul\":1430:1437   */\n  0x00\n    /* \"#utility.yul\":1459:1483   */\n  tag_41\n    /* \"#utility.yul\":1477:1482   */\n  dup3\n    /* \"#utility.yul\":1459:1483   */\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1448:1483   */\n  swap1\n  pop\n    /* \"#utility.yul\":1393:1489   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1495:1599   */\ntag_43:\n    /* \"#utility.yul\":1540:1547   */\n  0x00\n    /* \"#utility.yul\":1569:1593   */\n  tag_45\n    /* \"#utility.yul\":1587:1592   */\n  dup3\n    /* \"#utility.yul\":1569:1593   */\n  tag_42\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1558:1593   */\n  swap1\n  pop\n    /* \"#utility.yul\":1495:1599   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1605:1731   */\ntag_42:\n    /* \"#utility.yul\":1642:1649   */\n  0x00\n    /* \"#utility.yul\":1682:1724   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1675:1680   */\n  dup3\n    /* \"#utility.yul\":1671:1725   */\n  and\n    /* \"#utility.yul\":1660:1725   */\n  swap1\n  pop\n    /* \"#utility.yul\":1605:1731   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1737:1814   */\ntag_47:\n    /* \"#utility.yul\":1774:1781   */\n  0x00\n    /* \"#utility.yul\":1803:1808   */\n  dup2\n    /* \"#utility.yul\":1792:1808   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1943:2060   */\ntag_32:\n    /* \"#utility.yul\":2052:2053   */\n  0x00\n    /* \"#utility.yul\":2049:2050   */\n  dup1\n    /* \"#utility.yul\":2042:2054   */\n  revert\n    /* \"#utility.yul\":2066:2188   */\ntag_20:\n    /* \"#utility.yul\":2139:2163   */\n  tag_53\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2139:2163   */\n  tag_39\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2132:2137   */\n  dup2\n    /* \"#utility.yul\":2129:2164   */\n  eq\n    /* \"#utility.yul\":2119:2182   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2178:2179   */\n  0x00\n    /* \"#utility.yul\":2175:2176   */\n  dup1\n    /* \"#utility.yul\":2168:2180   */\n  revert\n    /* \"#utility.yul\":2119:2182   */\ntag_54:\n    /* \"#utility.yul\":2066:2188   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2194:2332   */\ntag_24:\n    /* \"#utility.yul\":2275:2307   */\n  tag_56\n    /* \"#utility.yul\":2301:2306   */\n  dup2\n    /* \"#utility.yul\":2275:2307   */\n  tag_43\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2268:2273   */\n  dup2\n    /* \"#utility.yul\":2265:2308   */\n  eq\n    /* \"#utility.yul\":2255:2326   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2322:2323   */\n  0x00\n    /* \"#utility.yul\":2319:2320   */\n  dup1\n    /* \"#utility.yul\":2312:2324   */\n  revert\n    /* \"#utility.yul\":2255:2326   */\ntag_57:\n    /* \"#utility.yul\":2194:2332   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2338:2460   */\ntag_28:\n    /* \"#utility.yul\":2411:2435   */\n  tag_59\n    /* \"#utility.yul\":2429:2434   */\n  dup2\n    /* \"#utility.yul\":2411:2435   */\n  tag_47\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2404:2409   */\n  dup2\n    /* \"#utility.yul\":2401:2436   */\n  eq\n    /* \"#utility.yul\":2391:2454   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2450:2451   */\n  0x00\n    /* \"#utility.yul\":2447:2448   */\n  dup1\n    /* \"#utility.yul\":2440:2452   */\n  revert\n    /* \"#utility.yul\":2391:2454   */\ntag_60:\n    /* \"#utility.yul\":2338:2460   */\n  pop\n  jump\t// out\n    /* \"contracts/TokenSale.sol\":241:4318  contract TokenSale is Ownable{\r... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenSale.sol\":241:4318  contract TokenSale is Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8392fe31\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc10b9358\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc10b9358\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xde2d583a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xefef39a1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x8392fe31\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xab0bcc41\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x61778592\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x61778592\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x617fba04\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6f9c6149\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x24076451\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x295e4edf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenSale.sol\":1064:1176  function bala(address add) public view virtual returns (uint256){\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":4071:4194  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/TokenSale.sol\":3217:3496  function withdraw(address _to) public virtual payable onlyOwner{\r... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/TokenSale.sol\":399:426  IERC20 public _usdcInstance */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":1275:1392  function getRecord(address _address) public virtual view returns(uint256){\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":4198:4313  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/TokenSale.sol\":2381:3211  function purchases(uint256 _amount) public {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/TokenSale.sol\":983:1060  function getOwner() public view returns(address){\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":886:977  function saleStart() public view virtual returns (uint256) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":1182:1269  function saleEnd() public view virtual returns (uint256) {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":3727:4065  function Return(address payable _returnAddress) public payable onlyOwner returns(bool){\r... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":1398:2375  function purchase(uint256 _amount) public{\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/TokenSale.sol\":1064:1176  function bala(address add) public view virtual returns (uint256){\r... */\n    tag_24:\n        /* \"contracts/TokenSale.sol\":1120:1127  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":1142:1155  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1142:1165  _usdcInstance.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSale.sol\":1166:1169  add */\n      dup4\n        /* \"contracts/TokenSale.sol\":1142:1170  _usdcInstance.balanceOf(add) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_88:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/TokenSale.sol\":1135:1170  return _usdcInstance.balanceOf(add) */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":1064:1176  function bala(address add) public view virtual returns (uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":4071:4194  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/TokenSale.sol\":4168:4188  updatedSaleStartTime */\n      dup1\n        /* \"contracts/TokenSale.sol\":4155:4165  _saleStart */\n      0x02\n        /* \"contracts/TokenSale.sol\":4155:4188  _saleStart = updatedSaleStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":4071:4194  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":3217:3496  function withdraw(address _to) public virtual payable onlyOwner{\r... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_100\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/TokenSale.sol\":3313:3321  _saleEnd */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":3297:3312  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":3297:3321  block.timestamp>_saleEnd */\n      gt\n        /* \"contracts/TokenSale.sol\":3289:3342  require(block.timestamp>_saleEnd,\"Sale hasn't ended\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/TokenSale.sol\":3351:3416  _usdcInstance.safeTransfer(_to, _usdcInstance.balanceOf(owner())) */\n      tag_111\n        /* \"contracts/TokenSale.sol\":3378:3381  _to */\n      dup2\n        /* \"contracts/TokenSale.sol\":3383:3396  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":3383:3406  _usdcInstance.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSale.sol\":3407:3414  owner() */\n      tag_112\n        /* \"contracts/TokenSale.sol\":3407:3412  owner */\n      tag_63\n        /* \"contracts/TokenSale.sol\":3407:3414  owner() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/TokenSale.sol\":3383:3415  _usdcInstance.balanceOf(owner()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_117:\n        /* \"contracts/TokenSale.sol\":3351:3364  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":3351:3377  _usdcInstance.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_118\n      swap1\n        /* \"contracts/TokenSale.sol\":3351:3416  _usdcInstance.safeTransfer(_to, _usdcInstance.balanceOf(owner())) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"contracts/TokenSale.sol\":3425:3490  _usdcInstance.safeTransfer(_to, _usdcInstance.balanceOf(owner())) */\n      tag_119\n        /* \"contracts/TokenSale.sol\":3452:3455  _to */\n      dup2\n        /* \"contracts/TokenSale.sol\":3457:3470  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":3457:3480  _usdcInstance.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSale.sol\":3481:3488  owner() */\n      tag_120\n        /* \"contracts/TokenSale.sol\":3481:3486  owner */\n      tag_63\n        /* \"contracts/TokenSale.sol\":3481:3488  owner() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/TokenSale.sol\":3457:3489  _usdcInstance.balanceOf(owner()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_125:\n        /* \"contracts/TokenSale.sol\":3425:3438  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":3425:3451  _usdcInstance.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_118\n      swap1\n        /* \"contracts/TokenSale.sol\":3425:3490  _usdcInstance.safeTransfer(_to, _usdcInstance.balanceOf(owner())) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/TokenSale.sol\":3217:3496  function withdraw(address _to) public virtual payable onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":399:426  IERC20 public _usdcInstance */\n    tag_37:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":1275:1392  function getRecord(address _address) public virtual view returns(uint256){\r... */\n    tag_43:\n        /* \"contracts/TokenSale.sol\":1340:1347  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":1362:1368  record */\n      0x05\n        /* \"contracts/TokenSale.sol\":1362:1378  record[_address] */\n      0x00\n        /* \"contracts/TokenSale.sol\":1369:1377  _address */\n      dup4\n        /* \"contracts/TokenSale.sol\":1362:1378  record[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenSale.sol\":1362:1386  record[_address]._amount */\n      0x00\n      add\n      sload\n        /* \"contracts/TokenSale.sol\":1355:1386  return record[_address]._amount */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":1275:1392  function getRecord(address _address) public virtual view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":4198:4313  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_100\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/TokenSale.sol\":4289:4307  updatedSaleEndTime */\n      dup1\n        /* \"contracts/TokenSale.sol\":4278:4286  _saleEnd */\n      0x03\n        /* \"contracts/TokenSale.sol\":4278:4307  _saleEnd = updatedSaleEndTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":4198:4313  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_100\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":2381:3211  function purchases(uint256 _amount) public {\r... */\n    tag_55:\n        /* \"contracts/TokenSale.sol\":2458:2468  _saleStart */\n      sload(0x02)\n        /* \"contracts/TokenSale.sol\":2441:2456  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":2441:2468  block.timestamp>=_saleStart */\n      lt\n      iszero\n        /* \"contracts/TokenSale.sol\":2433:2495  require(block.timestamp>=_saleStart,\"Sale hasn't started yet\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/TokenSale.sol\":2529:2537  _saleEnd */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":2512:2527  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":2512:2537  block.timestamp<=_saleEnd */\n      gt\n      iszero\n        /* \"contracts/TokenSale.sol\":2504:2555  require(block.timestamp<=_saleEnd,\"Sale has ended\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/TokenSale.sol\":2812:2871  _usdcInstance.safeTransferFrom(msg.sender,owner(), _amount) */\n      tag_148\n        /* \"contracts/TokenSale.sol\":2843:2853  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":2854:2861  owner() */\n      tag_149\n        /* \"contracts/TokenSale.sol\":2854:2859  owner */\n      tag_63\n        /* \"contracts/TokenSale.sol\":2854:2861  owner() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/TokenSale.sol\":2863:2870  _amount */\n      dup4\n        /* \"contracts/TokenSale.sol\":2812:2825  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":2812:2842  _usdcInstance.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_150\n      swap1\n        /* \"contracts/TokenSale.sol\":2812:2871  _usdcInstance.safeTransferFrom(msg.sender,owner(), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/TokenSale.sol\":2381:3211  function purchases(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":983:1060  function getOwner() public view returns(address){\r... */\n    tag_58:\n        /* \"contracts/TokenSale.sol\":1023:1030  address */\n      0x00\n        /* \"contracts/TokenSale.sol\":1047:1054  owner() */\n      tag_152\n        /* \"contracts/TokenSale.sol\":1047:1052  owner */\n      tag_63\n        /* \"contracts/TokenSale.sol\":1047:1054  owner() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/TokenSale.sol\":1040:1054  return owner() */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":983:1060  function getOwner() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":886:977  function saleStart() public view virtual returns (uint256) {\r... */\n    tag_67:\n        /* \"contracts/TokenSale.sol\":936:943  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":961:971  _saleStart */\n      sload(0x02)\n        /* \"contracts/TokenSale.sol\":954:971  return _saleStart */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":886:977  function saleStart() public view virtual returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":1182:1269  function saleEnd() public view virtual returns (uint256) {\r... */\n    tag_71:\n        /* \"contracts/TokenSale.sol\":1230:1237  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":1255:1263  _saleEnd */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":1248:1263  return _saleEnd */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":1182:1269  function saleEnd() public view virtual returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":3727:4065  function Return(address payable _returnAddress) public payable onlyOwner returns(bool){\r... */\n    tag_76:\n        /* \"contracts/TokenSale.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_100\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/TokenSale.sol\":3820:3837  uint256 returnAmt */\n      0x00\n        /* \"contracts/TokenSale.sol\":3840:3846  record */\n      0x05\n        /* \"contracts/TokenSale.sol\":3840:3862  record[_returnAddress] */\n      0x00\n        /* \"contracts/TokenSale.sol\":3847:3861  _returnAddress */\n      dup5\n        /* \"contracts/TokenSale.sol\":3840:3862  record[_returnAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenSale.sol\":3840:3870  record[_returnAddress]._amount */\n      0x00\n      add\n      sload\n        /* \"contracts/TokenSale.sol\":3820:3870  uint256 returnAmt = record[_returnAddress]._amount */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":3908:3917  returnAmt */\n      dup1\n        /* \"contracts/TokenSale.sol\":3885:3906  address(this).balance */\n      selfbalance\n        /* \"contracts/TokenSale.sol\":3885:3917  address(this).balance>=returnAmt */\n      lt\n      iszero\n        /* \"contracts/TokenSale.sol\":3877:3947  require(address(this).balance>=returnAmt,\"Not enough token to return\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/TokenSale.sol\":4007:4021  _returnAddress */\n      dup3\n        /* \"contracts/TokenSale.sol\":4007:4030  _returnAddress.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":4007:4041  _returnAddress.transfer(returnAmt) */\n      0x08fc\n        /* \"contracts/TokenSale.sol\":4031:4040  returnAmt */\n      dup3\n        /* \"contracts/TokenSale.sol\":4007:4041  _returnAddress.transfer(returnAmt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n        /* \"contracts/TokenSale.sol\":4055:4059  true */\n      0x01\n        /* \"contracts/TokenSale.sol\":4048:4059  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/TokenSale.sol\":3727:4065  function Return(address payable _returnAddress) public payable onlyOwner returns(bool){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":1398:2375  function purchase(uint256 _amount) public{\r... */\n    tag_82:\n        /* \"contracts/TokenSale.sol\":1473:1483  _saleStart */\n      sload(0x02)\n        /* \"contracts/TokenSale.sol\":1456:1471  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":1456:1483  block.timestamp>=_saleStart */\n      lt\n      iszero\n        /* \"contracts/TokenSale.sol\":1448:1510  require(block.timestamp>=_saleStart,\"Sale hasn't started yet\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_144\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/TokenSale.sol\":1544:1552  _saleEnd */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":1527:1542  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":1527:1552  block.timestamp<=_saleEnd */\n      gt\n      iszero\n        /* \"contracts/TokenSale.sol\":1519:1570  require(block.timestamp<=_saleEnd,\"Sale has ended\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_147\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/TokenSale.sol\":1633:1692  _usdcInstance.safeTransferFrom(msg.sender,owner(), _amount) */\n      tag_172\n        /* \"contracts/TokenSale.sol\":1664:1674  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":1675:1682  owner() */\n      tag_173\n        /* \"contracts/TokenSale.sol\":1675:1680  owner */\n      tag_63\n        /* \"contracts/TokenSale.sol\":1675:1682  owner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/TokenSale.sol\":1684:1691  _amount */\n      dup4\n        /* \"contracts/TokenSale.sol\":1633:1646  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1633:1663  _usdcInstance.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_150\n      swap1\n        /* \"contracts/TokenSale.sol\":1633:1692  _usdcInstance.safeTransferFrom(msg.sender,owner(), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/TokenSale.sol\":1398:2375  function purchase(uint256 _amount) public{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_100\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_187\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1129:1133  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1135:1137  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1144  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_193\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_197\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_220\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_219)\n    tag_220:\n      0x60\n      swap2\n      pop\n    tag_219:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_221\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_224)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_224:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_232:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_234\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_236:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_238\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":152:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:450   */\n    tag_240:\n        /* \"#utility.yul\":367:372   */\n      0x00\n        /* \"#utility.yul\":398:404   */\n      dup2\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":383:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":414:444   */\n      tag_242\n        /* \"#utility.yul\":438:443   */\n      dup2\n        /* \"#utility.yul\":414:444   */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":313:450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":456:595   */\n    tag_244:\n        /* \"#utility.yul\":502:507   */\n      0x00\n        /* \"#utility.yul\":540:546   */\n      dup2\n        /* \"#utility.yul\":527:547   */\n      calldataload\n        /* \"#utility.yul\":518:547   */\n      swap1\n      pop\n        /* \"#utility.yul\":556:589   */\n      tag_246\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":556:589   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":456:595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":601:744   */\n    tag_248:\n        /* \"#utility.yul\":658:663   */\n      0x00\n        /* \"#utility.yul\":689:695   */\n      dup2\n        /* \"#utility.yul\":683:696   */\n      mload\n        /* \"#utility.yul\":674:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":705:738   */\n      tag_250\n        /* \"#utility.yul\":732:737   */\n      dup2\n        /* \"#utility.yul\":705:738   */\n      tag_247\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":601:744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":750:1079   */\n    tag_23:\n        /* \"#utility.yul\":809:815   */\n      0x00\n        /* \"#utility.yul\":858:860   */\n      0x20\n        /* \"#utility.yul\":846:855   */\n      dup3\n        /* \"#utility.yul\":837:844   */\n      dup5\n        /* \"#utility.yul\":833:856   */\n      sub\n        /* \"#utility.yul\":829:861   */\n      slt\n        /* \"#utility.yul\":826:945   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":864:943   */\n      tag_253\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":826:945   */\n    tag_252:\n        /* \"#utility.yul\":984:985   */\n      0x00\n        /* \"#utility.yul\":1009:1062   */\n      tag_255\n        /* \"#utility.yul\":1054:1061   */\n      dup5\n        /* \"#utility.yul\":1045:1051   */\n      dup3\n        /* \"#utility.yul\":1034:1043   */\n      dup6\n        /* \"#utility.yul\":1030:1052   */\n      add\n        /* \"#utility.yul\":1009:1062   */\n      tag_232\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":999:1062   */\n      swap2\n      pop\n        /* \"#utility.yul\":955:1072   */\n      pop\n        /* \"#utility.yul\":750:1079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1430   */\n    tag_75:\n        /* \"#utility.yul\":1152:1158   */\n      0x00\n        /* \"#utility.yul\":1201:1203   */\n      0x20\n        /* \"#utility.yul\":1189:1198   */\n      dup3\n        /* \"#utility.yul\":1180:1187   */\n      dup5\n        /* \"#utility.yul\":1176:1199   */\n      sub\n        /* \"#utility.yul\":1172:1204   */\n      slt\n        /* \"#utility.yul\":1169:1288   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":1207:1286   */\n      tag_258\n      tag_254\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1169:1288   */\n    tag_257:\n        /* \"#utility.yul\":1327:1328   */\n      0x00\n        /* \"#utility.yul\":1352:1413   */\n      tag_259\n        /* \"#utility.yul\":1405:1412   */\n      dup5\n        /* \"#utility.yul\":1396:1402   */\n      dup3\n        /* \"#utility.yul\":1385:1394   */\n      dup6\n        /* \"#utility.yul\":1381:1403   */\n      add\n        /* \"#utility.yul\":1352:1413   */\n      tag_236\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1342:1413   */\n      swap2\n      pop\n        /* \"#utility.yul\":1298:1423   */\n      pop\n        /* \"#utility.yul\":1085:1430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1436:1781   */\n    tag_200:\n        /* \"#utility.yul\":1503:1509   */\n      0x00\n        /* \"#utility.yul\":1552:1554   */\n      0x20\n        /* \"#utility.yul\":1540:1549   */\n      dup3\n        /* \"#utility.yul\":1531:1538   */\n      dup5\n        /* \"#utility.yul\":1527:1550   */\n      sub\n        /* \"#utility.yul\":1523:1555   */\n      slt\n        /* \"#utility.yul\":1520:1639   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":1558:1637   */\n      tag_262\n      tag_254\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1520:1639   */\n    tag_261:\n        /* \"#utility.yul\":1678:1679   */\n      0x00\n        /* \"#utility.yul\":1703:1764   */\n      tag_263\n        /* \"#utility.yul\":1756:1763   */\n      dup5\n        /* \"#utility.yul\":1747:1753   */\n      dup3\n        /* \"#utility.yul\":1736:1745   */\n      dup6\n        /* \"#utility.yul\":1732:1754   */\n      add\n        /* \"#utility.yul\":1703:1764   */\n      tag_240\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1693:1764   */\n      swap2\n      pop\n        /* \"#utility.yul\":1649:1774   */\n      pop\n        /* \"#utility.yul\":1436:1781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1787:2116   */\n    tag_30:\n        /* \"#utility.yul\":1846:1852   */\n      0x00\n        /* \"#utility.yul\":1895:1897   */\n      0x20\n        /* \"#utility.yul\":1883:1892   */\n      dup3\n        /* \"#utility.yul\":1874:1881   */\n      dup5\n        /* \"#utility.yul\":1870:1893   */\n      sub\n        /* \"#utility.yul\":1866:1898   */\n      slt\n        /* \"#utility.yul\":1863:1982   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1901:1980   */\n      tag_266\n      tag_254\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1863:1982   */\n    tag_265:\n        /* \"#utility.yul\":2021:2022   */\n      0x00\n        /* \"#utility.yul\":2046:2099   */\n      tag_267\n        /* \"#utility.yul\":2091:2098   */\n      dup5\n        /* \"#utility.yul\":2082:2088   */\n      dup3\n        /* \"#utility.yul\":2071:2080   */\n      dup6\n        /* \"#utility.yul\":2067:2089   */\n      add\n        /* \"#utility.yul\":2046:2099   */\n      tag_244\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2036:2099   */\n      swap2\n      pop\n        /* \"#utility.yul\":1992:2109   */\n      pop\n        /* \"#utility.yul\":1787:2116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2473   */\n    tag_93:\n        /* \"#utility.yul\":2192:2198   */\n      0x00\n        /* \"#utility.yul\":2241:2243   */\n      0x20\n        /* \"#utility.yul\":2229:2238   */\n      dup3\n        /* \"#utility.yul\":2220:2227   */\n      dup5\n        /* \"#utility.yul\":2216:2239   */\n      sub\n        /* \"#utility.yul\":2212:2244   */\n      slt\n        /* \"#utility.yul\":2209:2328   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2247:2326   */\n      tag_270\n      tag_254\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2209:2328   */\n    tag_269:\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2392:2456   */\n      tag_271\n        /* \"#utility.yul\":2448:2455   */\n      dup5\n        /* \"#utility.yul\":2439:2445   */\n      dup3\n        /* \"#utility.yul\":2428:2437   */\n      dup6\n        /* \"#utility.yul\":2424:2446   */\n      add\n        /* \"#utility.yul\":2392:2456   */\n      tag_248\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2382:2456   */\n      swap2\n      pop\n        /* \"#utility.yul\":2338:2466   */\n      pop\n        /* \"#utility.yul\":2122:2473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2479:2597   */\n    tag_272:\n        /* \"#utility.yul\":2566:2590   */\n      tag_274\n        /* \"#utility.yul\":2584:2589   */\n      dup2\n        /* \"#utility.yul\":2566:2590   */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2561:2564   */\n      dup3\n        /* \"#utility.yul\":2554:2591   */\n      mstore\n        /* \"#utility.yul\":2479:2597   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2603:2712   */\n    tag_276:\n        /* \"#utility.yul\":2684:2705   */\n      tag_278\n        /* \"#utility.yul\":2699:2704   */\n      dup2\n        /* \"#utility.yul\":2684:2705   */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2679:2682   */\n      dup3\n        /* \"#utility.yul\":2672:2706   */\n      mstore\n        /* \"#utility.yul\":2603:2712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2718:3091   */\n    tag_280:\n        /* \"#utility.yul\":2822:2825   */\n      0x00\n        /* \"#utility.yul\":2850:2888   */\n      tag_282\n        /* \"#utility.yul\":2882:2887   */\n      dup3\n        /* \"#utility.yul\":2850:2888   */\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2904:2992   */\n      tag_284\n        /* \"#utility.yul\":2985:2991   */\n      dup2\n        /* \"#utility.yul\":2980:2983   */\n      dup6\n        /* \"#utility.yul\":2904:2992   */\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2897:2992   */\n      swap4\n      pop\n        /* \"#utility.yul\":3001:3053   */\n      tag_286\n        /* \"#utility.yul\":3046:3052   */\n      dup2\n        /* \"#utility.yul\":3041:3044   */\n      dup6\n        /* \"#utility.yul\":3034:3038   */\n      0x20\n        /* \"#utility.yul\":3027:3032   */\n      dup7\n        /* \"#utility.yul\":3023:3039   */\n      add\n        /* \"#utility.yul\":3001:3053   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3078:3084   */\n      dup1\n        /* \"#utility.yul\":3073:3076   */\n      dup5\n        /* \"#utility.yul\":3069:3085   */\n      add\n        /* \"#utility.yul\":3062:3085   */\n      swap2\n      pop\n        /* \"#utility.yul\":2826:3091   */\n      pop\n        /* \"#utility.yul\":2718:3091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3097:3256   */\n    tag_288:\n        /* \"#utility.yul\":3198:3249   */\n      tag_290\n        /* \"#utility.yul\":3243:3248   */\n      dup2\n        /* \"#utility.yul\":3198:3249   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3250   */\n      mstore\n        /* \"#utility.yul\":3097:3256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3626   */\n    tag_292:\n        /* \"#utility.yul\":3350:3353   */\n      0x00\n        /* \"#utility.yul\":3378:3417   */\n      tag_294\n        /* \"#utility.yul\":3411:3416   */\n      dup3\n        /* \"#utility.yul\":3378:3417   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3433:3504   */\n      tag_296\n        /* \"#utility.yul\":3497:3503   */\n      dup2\n        /* \"#utility.yul\":3492:3495   */\n      dup6\n        /* \"#utility.yul\":3433:3504   */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3426:3504   */\n      swap4\n      pop\n        /* \"#utility.yul\":3513:3565   */\n      tag_298\n        /* \"#utility.yul\":3558:3564   */\n      dup2\n        /* \"#utility.yul\":3553:3556   */\n      dup6\n        /* \"#utility.yul\":3546:3550   */\n      0x20\n        /* \"#utility.yul\":3539:3544   */\n      dup7\n        /* \"#utility.yul\":3535:3551   */\n      add\n        /* \"#utility.yul\":3513:3565   */\n      tag_287\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3590:3619   */\n      tag_299\n        /* \"#utility.yul\":3612:3618   */\n      dup2\n        /* \"#utility.yul\":3590:3619   */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3585:3588   */\n      dup5\n        /* \"#utility.yul\":3581:3620   */\n      add\n        /* \"#utility.yul\":3574:3620   */\n      swap2\n      pop\n        /* \"#utility.yul\":3354:3626   */\n      pop\n        /* \"#utility.yul\":3262:3626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3632:3998   */\n    tag_301:\n        /* \"#utility.yul\":3774:3777   */\n      0x00\n        /* \"#utility.yul\":3795:3862   */\n      tag_303\n        /* \"#utility.yul\":3859:3861   */\n      0x26\n        /* \"#utility.yul\":3854:3857   */\n      dup4\n        /* \"#utility.yul\":3795:3862   */\n      tag_297\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3788:3862   */\n      swap2\n      pop\n        /* \"#utility.yul\":3871:3964   */\n      tag_304\n        /* \"#utility.yul\":3960:3963   */\n      dup3\n        /* \"#utility.yul\":3871:3964   */\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3989:3991   */\n      0x40\n        /* \"#utility.yul\":3984:3987   */\n      dup3\n        /* \"#utility.yul\":3980:3992   */\n      add\n        /* \"#utility.yul\":3973:3992   */\n      swap1\n      pop\n        /* \"#utility.yul\":3632:3998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4004:4370   */\n    tag_306:\n        /* \"#utility.yul\":4146:4149   */\n      0x00\n        /* \"#utility.yul\":4167:4234   */\n      tag_308\n        /* \"#utility.yul\":4231:4233   */\n      0x0e\n        /* \"#utility.yul\":4226:4229   */\n      dup4\n        /* \"#utility.yul\":4167:4234   */\n      tag_297\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4160:4234   */\n      swap2\n      pop\n        /* \"#utility.yul\":4243:4336   */\n      tag_309\n        /* \"#utility.yul\":4332:4335   */\n      dup3\n        /* \"#utility.yul\":4243:4336   */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4361:4363   */\n      0x20\n        /* \"#utility.yul\":4356:4359   */\n      dup3\n        /* \"#utility.yul\":4352:4364   */\n      add\n        /* \"#utility.yul\":4345:4364   */\n      swap1\n      pop\n        /* \"#utility.yul\":4004:4370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4376:4742   */\n    tag_311:\n        /* \"#utility.yul\":4518:4521   */\n      0x00\n        /* \"#utility.yul\":4539:4606   */\n      tag_313\n        /* \"#utility.yul\":4603:4605   */\n      0x26\n        /* \"#utility.yul\":4598:4601   */\n      dup4\n        /* \"#utility.yul\":4539:4606   */\n      tag_297\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4532:4606   */\n      swap2\n      pop\n        /* \"#utility.yul\":4615:4708   */\n      tag_314\n        /* \"#utility.yul\":4704:4707   */\n      dup3\n        /* \"#utility.yul\":4615:4708   */\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4733:4735   */\n      0x40\n        /* \"#utility.yul\":4728:4731   */\n      dup3\n        /* \"#utility.yul\":4724:4736   */\n      add\n        /* \"#utility.yul\":4717:4736   */\n      swap1\n      pop\n        /* \"#utility.yul\":4376:4742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4748:5114   */\n    tag_316:\n        /* \"#utility.yul\":4890:4893   */\n      0x00\n        /* \"#utility.yul\":4911:4978   */\n      tag_318\n        /* \"#utility.yul\":4975:4977   */\n      0x20\n        /* \"#utility.yul\":4970:4973   */\n      dup4\n        /* \"#utility.yul\":4911:4978   */\n      tag_297\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4904:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4987:5080   */\n      tag_319\n        /* \"#utility.yul\":5076:5079   */\n      dup3\n        /* \"#utility.yul\":4987:5080   */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5105:5107   */\n      0x20\n        /* \"#utility.yul\":5100:5103   */\n      dup3\n        /* \"#utility.yul\":5096:5108   */\n      add\n        /* \"#utility.yul\":5089:5108   */\n      swap1\n      pop\n        /* \"#utility.yul\":4748:5114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5120:5486   */\n    tag_321:\n        /* \"#utility.yul\":5262:5265   */\n      0x00\n        /* \"#utility.yul\":5283:5350   */\n      tag_323\n        /* \"#utility.yul\":5347:5349   */\n      0x17\n        /* \"#utility.yul\":5342:5345   */\n      dup4\n        /* \"#utility.yul\":5283:5350   */\n      tag_297\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5276:5350   */\n      swap2\n      pop\n        /* \"#utility.yul\":5359:5452   */\n      tag_324\n        /* \"#utility.yul\":5448:5451   */\n      dup3\n        /* \"#utility.yul\":5359:5452   */\n      tag_325\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5477:5479   */\n      0x20\n        /* \"#utility.yul\":5472:5475   */\n      dup3\n        /* \"#utility.yul\":5468:5480   */\n      add\n        /* \"#utility.yul\":5461:5480   */\n      swap1\n      pop\n        /* \"#utility.yul\":5120:5486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5492:5858   */\n    tag_326:\n        /* \"#utility.yul\":5634:5637   */\n      0x00\n        /* \"#utility.yul\":5655:5722   */\n      tag_328\n        /* \"#utility.yul\":5719:5721   */\n      0x11\n        /* \"#utility.yul\":5714:5717   */\n      dup4\n        /* \"#utility.yul\":5655:5722   */\n      tag_297\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5648:5722   */\n      swap2\n      pop\n        /* \"#utility.yul\":5731:5824   */\n      tag_329\n        /* \"#utility.yul\":5820:5823   */\n      dup3\n        /* \"#utility.yul\":5731:5824   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5849:5851   */\n      0x20\n        /* \"#utility.yul\":5844:5847   */\n      dup3\n        /* \"#utility.yul\":5840:5852   */\n      add\n        /* \"#utility.yul\":5833:5852   */\n      swap1\n      pop\n        /* \"#utility.yul\":5492:5858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5864:6230   */\n    tag_331:\n        /* \"#utility.yul\":6006:6009   */\n      0x00\n        /* \"#utility.yul\":6027:6094   */\n      tag_333\n        /* \"#utility.yul\":6091:6093   */\n      0x1d\n        /* \"#utility.yul\":6086:6089   */\n      dup4\n        /* \"#utility.yul\":6027:6094   */\n      tag_297\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6020:6094   */\n      swap2\n      pop\n        /* \"#utility.yul\":6103:6196   */\n      tag_334\n        /* \"#utility.yul\":6192:6195   */\n      dup3\n        /* \"#utility.yul\":6103:6196   */\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6221:6223   */\n      0x20\n        /* \"#utility.yul\":6216:6219   */\n      dup3\n        /* \"#utility.yul\":6212:6224   */\n      add\n        /* \"#utility.yul\":6205:6224   */\n      swap1\n      pop\n        /* \"#utility.yul\":5864:6230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6236:6602   */\n    tag_336:\n        /* \"#utility.yul\":6378:6381   */\n      0x00\n        /* \"#utility.yul\":6399:6466   */\n      tag_338\n        /* \"#utility.yul\":6463:6465   */\n      0x1a\n        /* \"#utility.yul\":6458:6461   */\n      dup4\n        /* \"#utility.yul\":6399:6466   */\n      tag_297\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6392:6466   */\n      swap2\n      pop\n        /* \"#utility.yul\":6475:6568   */\n      tag_339\n        /* \"#utility.yul\":6564:6567   */\n      dup3\n        /* \"#utility.yul\":6475:6568   */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6593:6595   */\n      0x20\n        /* \"#utility.yul\":6588:6591   */\n      dup3\n        /* \"#utility.yul\":6584:6596   */\n      add\n        /* \"#utility.yul\":6577:6596   */\n      swap1\n      pop\n        /* \"#utility.yul\":6236:6602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6608:6974   */\n    tag_341:\n        /* \"#utility.yul\":6750:6753   */\n      0x00\n        /* \"#utility.yul\":6771:6838   */\n      tag_343\n        /* \"#utility.yul\":6835:6837   */\n      0x2a\n        /* \"#utility.yul\":6830:6833   */\n      dup4\n        /* \"#utility.yul\":6771:6838   */\n      tag_297\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6764:6838   */\n      swap2\n      pop\n        /* \"#utility.yul\":6847:6940   */\n      tag_344\n        /* \"#utility.yul\":6936:6939   */\n      dup3\n        /* \"#utility.yul\":6847:6940   */\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6965:6967   */\n      0x40\n        /* \"#utility.yul\":6960:6963   */\n      dup3\n        /* \"#utility.yul\":6956:6968   */\n      add\n        /* \"#utility.yul\":6949:6968   */\n      swap1\n      pop\n        /* \"#utility.yul\":6608:6974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7098   */\n    tag_346:\n        /* \"#utility.yul\":7067:7091   */\n      tag_348\n        /* \"#utility.yul\":7085:7090   */\n      dup2\n        /* \"#utility.yul\":7067:7091   */\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7062:7065   */\n      dup3\n        /* \"#utility.yul\":7055:7092   */\n      mstore\n        /* \"#utility.yul\":6980:7098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7104:7375   */\n    tag_217:\n        /* \"#utility.yul\":7234:7237   */\n      0x00\n        /* \"#utility.yul\":7256:7349   */\n      tag_351\n        /* \"#utility.yul\":7345:7348   */\n      dup3\n        /* \"#utility.yul\":7336:7342   */\n      dup5\n        /* \"#utility.yul\":7256:7349   */\n      tag_280\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7249:7349   */\n      swap2\n      pop\n        /* \"#utility.yul\":7366:7369   */\n      dup2\n        /* \"#utility.yul\":7359:7369   */\n      swap1\n      pop\n        /* \"#utility.yul\":7104:7375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7381:7603   */\n    tag_60:\n        /* \"#utility.yul\":7474:7478   */\n      0x00\n        /* \"#utility.yul\":7512:7514   */\n      0x20\n        /* \"#utility.yul\":7501:7510   */\n      dup3\n        /* \"#utility.yul\":7497:7515   */\n      add\n        /* \"#utility.yul\":7489:7515   */\n      swap1\n      pop\n        /* \"#utility.yul\":7525:7596   */\n      tag_353\n        /* \"#utility.yul\":7593:7594   */\n      0x00\n        /* \"#utility.yul\":7582:7591   */\n      dup4\n        /* \"#utility.yul\":7578:7595   */\n      add\n        /* \"#utility.yul\":7569:7575   */\n      dup5\n        /* \"#utility.yul\":7525:7596   */\n      tag_272\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7381:7603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7609:8051   */\n    tag_194:\n        /* \"#utility.yul\":7758:7762   */\n      0x00\n        /* \"#utility.yul\":7796:7798   */\n      0x60\n        /* \"#utility.yul\":7785:7794   */\n      dup3\n        /* \"#utility.yul\":7781:7799   */\n      add\n        /* \"#utility.yul\":7773:7799   */\n      swap1\n      pop\n        /* \"#utility.yul\":7809:7880   */\n      tag_355\n        /* \"#utility.yul\":7877:7878   */\n      0x00\n        /* \"#utility.yul\":7866:7875   */\n      dup4\n        /* \"#utility.yul\":7862:7879   */\n      add\n        /* \"#utility.yul\":7853:7859   */\n      dup7\n        /* \"#utility.yul\":7809:7880   */\n      tag_272\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7890:7962   */\n      tag_356\n        /* \"#utility.yul\":7958:7960   */\n      0x20\n        /* \"#utility.yul\":7947:7956   */\n      dup4\n        /* \"#utility.yul\":7943:7961   */\n      add\n        /* \"#utility.yul\":7934:7940   */\n      dup6\n        /* \"#utility.yul\":7890:7962   */\n      tag_272\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7972:8044   */\n      tag_357\n        /* \"#utility.yul\":8040:8042   */\n      0x40\n        /* \"#utility.yul\":8029:8038   */\n      dup4\n        /* \"#utility.yul\":8025:8043   */\n      add\n        /* \"#utility.yul\":8016:8022   */\n      dup5\n        /* \"#utility.yul\":7972:8044   */\n      tag_346\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7609:8051   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8057:8389   */\n    tag_188:\n        /* \"#utility.yul\":8178:8182   */\n      0x00\n        /* \"#utility.yul\":8216:8218   */\n      0x40\n        /* \"#utility.yul\":8205:8214   */\n      dup3\n        /* \"#utility.yul\":8201:8219   */\n      add\n        /* \"#utility.yul\":8193:8219   */\n      swap1\n      pop\n        /* \"#utility.yul\":8229:8300   */\n      tag_359\n        /* \"#utility.yul\":8297:8298   */\n      0x00\n        /* \"#utility.yul\":8286:8295   */\n      dup4\n        /* \"#utility.yul\":8282:8299   */\n      add\n        /* \"#utility.yul\":8273:8279   */\n      dup6\n        /* \"#utility.yul\":8229:8300   */\n      tag_272\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8310:8382   */\n      tag_360\n        /* \"#utility.yul\":8378:8380   */\n      0x20\n        /* \"#utility.yul\":8367:8376   */\n      dup4\n        /* \"#utility.yul\":8363:8381   */\n      add\n        /* \"#utility.yul\":8354:8360   */\n      dup5\n        /* \"#utility.yul\":8310:8382   */\n      tag_346\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8057:8389   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8395:8605   */\n    tag_78:\n        /* \"#utility.yul\":8482:8486   */\n      0x00\n        /* \"#utility.yul\":8520:8522   */\n      0x20\n        /* \"#utility.yul\":8509:8518   */\n      dup3\n        /* \"#utility.yul\":8505:8523   */\n      add\n        /* \"#utility.yul\":8497:8523   */\n      swap1\n      pop\n        /* \"#utility.yul\":8533:8598   */\n      tag_362\n        /* \"#utility.yul\":8595:8596   */\n      0x00\n        /* \"#utility.yul\":8584:8593   */\n      dup4\n        /* \"#utility.yul\":8580:8597   */\n      add\n        /* \"#utility.yul\":8571:8577   */\n      dup5\n        /* \"#utility.yul\":8533:8598   */\n      tag_276\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8395:8605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8611:8861   */\n    tag_39:\n        /* \"#utility.yul\":8718:8722   */\n      0x00\n        /* \"#utility.yul\":8756:8758   */\n      0x20\n        /* \"#utility.yul\":8745:8754   */\n      dup3\n        /* \"#utility.yul\":8741:8759   */\n      add\n        /* \"#utility.yul\":8733:8759   */\n      swap1\n      pop\n        /* \"#utility.yul\":8769:8854   */\n      tag_364\n        /* \"#utility.yul\":8851:8852   */\n      0x00\n        /* \"#utility.yul\":8840:8849   */\n      dup4\n        /* \"#utility.yul\":8836:8853   */\n      add\n        /* \"#utility.yul\":8827:8833   */\n      dup5\n        /* \"#utility.yul\":8769:8854   */\n      tag_288\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8611:8861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8867:9180   */\n    tag_230:\n        /* \"#utility.yul\":8980:8984   */\n      0x00\n        /* \"#utility.yul\":9018:9020   */\n      0x20\n        /* \"#utility.yul\":9007:9016   */\n      dup3\n        /* \"#utility.yul\":9003:9021   */\n      add\n        /* \"#utility.yul\":8995:9021   */\n      swap1\n      pop\n        /* \"#utility.yul\":9067:9076   */\n      dup2\n        /* \"#utility.yul\":9061:9065   */\n      dup2\n        /* \"#utility.yul\":9057:9077   */\n      sub\n        /* \"#utility.yul\":9053:9054   */\n      0x00\n        /* \"#utility.yul\":9042:9051   */\n      dup4\n        /* \"#utility.yul\":9038:9055   */\n      add\n        /* \"#utility.yul\":9031:9078   */\n      mstore\n        /* \"#utility.yul\":9095:9173   */\n      tag_366\n        /* \"#utility.yul\":9168:9172   */\n      dup2\n        /* \"#utility.yul\":9159:9165   */\n      dup5\n        /* \"#utility.yul\":9095:9173   */\n      tag_292\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9087:9173   */\n      swap1\n      pop\n        /* \"#utility.yul\":8867:9180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9186:9605   */\n    tag_182:\n        /* \"#utility.yul\":9352:9356   */\n      0x00\n        /* \"#utility.yul\":9390:9392   */\n      0x20\n        /* \"#utility.yul\":9379:9388   */\n      dup3\n        /* \"#utility.yul\":9375:9393   */\n      add\n        /* \"#utility.yul\":9367:9393   */\n      swap1\n      pop\n        /* \"#utility.yul\":9439:9448   */\n      dup2\n        /* \"#utility.yul\":9433:9437   */\n      dup2\n        /* \"#utility.yul\":9429:9449   */\n      sub\n        /* \"#utility.yul\":9425:9426   */\n      0x00\n        /* \"#utility.yul\":9414:9423   */\n      dup4\n        /* \"#utility.yul\":9410:9427   */\n      add\n        /* \"#utility.yul\":9403:9450   */\n      mstore\n        /* \"#utility.yul\":9467:9598   */\n      tag_368\n        /* \"#utility.yul\":9593:9597   */\n      dup2\n        /* \"#utility.yul\":9467:9598   */\n      tag_301\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9459:9598   */\n      swap1\n      pop\n        /* \"#utility.yul\":9186:9605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9611:10030   */\n    tag_147:\n        /* \"#utility.yul\":9777:9781   */\n      0x00\n        /* \"#utility.yul\":9815:9817   */\n      0x20\n        /* \"#utility.yul\":9804:9813   */\n      dup3\n        /* \"#utility.yul\":9800:9818   */\n      add\n        /* \"#utility.yul\":9792:9818   */\n      swap1\n      pop\n        /* \"#utility.yul\":9864:9873   */\n      dup2\n        /* \"#utility.yul\":9858:9862   */\n      dup2\n        /* \"#utility.yul\":9854:9874   */\n      sub\n        /* \"#utility.yul\":9850:9851   */\n      0x00\n        /* \"#utility.yul\":9839:9848   */\n      dup4\n        /* \"#utility.yul\":9835:9852   */\n      add\n        /* \"#utility.yul\":9828:9875   */\n      mstore\n        /* \"#utility.yul\":9892:10023   */\n      tag_370\n        /* \"#utility.yul\":10018:10022   */\n      dup2\n        /* \"#utility.yul\":9892:10023   */\n      tag_306\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9884:10023   */\n      swap1\n      pop\n        /* \"#utility.yul\":9611:10030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10036:10455   */\n    tag_210:\n        /* \"#utility.yul\":10202:10206   */\n      0x00\n        /* \"#utility.yul\":10240:10242   */\n      0x20\n        /* \"#utility.yul\":10229:10238   */\n      dup3\n        /* \"#utility.yul\":10225:10243   */\n      add\n        /* \"#utility.yul\":10217:10243   */\n      swap1\n      pop\n        /* \"#utility.yul\":10289:10298   */\n      dup2\n        /* \"#utility.yul\":10283:10287   */\n      dup2\n        /* \"#utility.yul\":10279:10299   */\n      sub\n        /* \"#utility.yul\":10275:10276   */\n      0x00\n        /* \"#utility.yul\":10264:10273   */\n      dup4\n        /* \"#utility.yul\":10260:10277   */\n      add\n        /* \"#utility.yul\":10253:10300   */\n      mstore\n        /* \"#utility.yul\":10317:10448   */\n      tag_372\n        /* \"#utility.yul\":10443:10447   */\n      dup2\n        /* \"#utility.yul\":10317:10448   */\n      tag_311\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10309:10448   */\n      swap1\n      pop\n        /* \"#utility.yul\":10036:10455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10461:10880   */\n    tag_100:\n        /* \"#utility.yul\":10627:10631   */\n      0x00\n        /* \"#utility.yul\":10665:10667   */\n      0x20\n        /* \"#utility.yul\":10654:10663   */\n      dup3\n        /* \"#utility.yul\":10650:10668   */\n      add\n        /* \"#utility.yul\":10642:10668   */\n      swap1\n      pop\n        /* \"#utility.yul\":10714:10723   */\n      dup2\n        /* \"#utility.yul\":10708:10712   */\n      dup2\n        /* \"#utility.yul\":10704:10724   */\n      sub\n        /* \"#utility.yul\":10700:10701   */\n      0x00\n        /* \"#utility.yul\":10689:10698   */\n      dup4\n        /* \"#utility.yul\":10685:10702   */\n      add\n        /* \"#utility.yul\":10678:10725   */\n      mstore\n        /* \"#utility.yul\":10742:10873   */\n      tag_374\n        /* \"#utility.yul\":10868:10872   */\n      dup2\n        /* \"#utility.yul\":10742:10873   */\n      tag_316\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10734:10873   */\n      swap1\n      pop\n        /* \"#utility.yul\":10461:10880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10886:11305   */\n    tag_144:\n        /* \"#utility.yul\":11052:11056   */\n      0x00\n        /* \"#utility.yul\":11090:11092   */\n      0x20\n        /* \"#utility.yul\":11079:11088   */\n      dup3\n        /* \"#utility.yul\":11075:11093   */\n      add\n        /* \"#utility.yul\":11067:11093   */\n      swap1\n      pop\n        /* \"#utility.yul\":11139:11148   */\n      dup2\n        /* \"#utility.yul\":11133:11137   */\n      dup2\n        /* \"#utility.yul\":11129:11149   */\n      sub\n        /* \"#utility.yul\":11125:11126   */\n      0x00\n        /* \"#utility.yul\":11114:11123   */\n      dup4\n        /* \"#utility.yul\":11110:11127   */\n      add\n        /* \"#utility.yul\":11103:11150   */\n      mstore\n        /* \"#utility.yul\":11167:11298   */\n      tag_376\n        /* \"#utility.yul\":11293:11297   */\n      dup2\n        /* \"#utility.yul\":11167:11298   */\n      tag_321\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11159:11298   */\n      swap1\n      pop\n        /* \"#utility.yul\":10886:11305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11311:11730   */\n    tag_110:\n        /* \"#utility.yul\":11477:11481   */\n      0x00\n        /* \"#utility.yul\":11515:11517   */\n      0x20\n        /* \"#utility.yul\":11504:11513   */\n      dup3\n        /* \"#utility.yul\":11500:11518   */\n      add\n        /* \"#utility.yul\":11492:11518   */\n      swap1\n      pop\n        /* \"#utility.yul\":11564:11573   */\n      dup2\n        /* \"#utility.yul\":11558:11562   */\n      dup2\n        /* \"#utility.yul\":11554:11574   */\n      sub\n        /* \"#utility.yul\":11550:11551   */\n      0x00\n        /* \"#utility.yul\":11539:11548   */\n      dup4\n        /* \"#utility.yul\":11535:11552   */\n      add\n        /* \"#utility.yul\":11528:11575   */\n      mstore\n        /* \"#utility.yul\":11592:11723   */\n      tag_378\n        /* \"#utility.yul\":11718:11722   */\n      dup2\n        /* \"#utility.yul\":11592:11723   */\n      tag_326\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11584:11723   */\n      swap1\n      pop\n        /* \"#utility.yul\":11311:11730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11736:12155   */\n    tag_215:\n        /* \"#utility.yul\":11902:11906   */\n      0x00\n        /* \"#utility.yul\":11940:11942   */\n      0x20\n        /* \"#utility.yul\":11929:11938   */\n      dup3\n        /* \"#utility.yul\":11925:11943   */\n      add\n        /* \"#utility.yul\":11917:11943   */\n      swap1\n      pop\n        /* \"#utility.yul\":11989:11998   */\n      dup2\n        /* \"#utility.yul\":11983:11987   */\n      dup2\n        /* \"#utility.yul\":11979:11999   */\n      sub\n        /* \"#utility.yul\":11975:11976   */\n      0x00\n        /* \"#utility.yul\":11964:11973   */\n      dup4\n        /* \"#utility.yul\":11960:11977   */\n      add\n        /* \"#utility.yul\":11953:12000   */\n      mstore\n        /* \"#utility.yul\":12017:12148   */\n      tag_380\n        /* \"#utility.yul\":12143:12147   */\n      dup2\n        /* \"#utility.yul\":12017:12148   */\n      tag_331\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12009:12148   */\n      swap1\n      pop\n        /* \"#utility.yul\":11736:12155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12161:12580   */\n    tag_164:\n        /* \"#utility.yul\":12327:12331   */\n      0x00\n        /* \"#utility.yul\":12365:12367   */\n      0x20\n        /* \"#utility.yul\":12354:12363   */\n      dup3\n        /* \"#utility.yul\":12350:12368   */\n      add\n        /* \"#utility.yul\":12342:12368   */\n      swap1\n      pop\n        /* \"#utility.yul\":12414:12423   */\n      dup2\n        /* \"#utility.yul\":12408:12412   */\n      dup2\n        /* \"#utility.yul\":12404:12424   */\n      sub\n        /* \"#utility.yul\":12400:12401   */\n      0x00\n        /* \"#utility.yul\":12389:12398   */\n      dup4\n        /* \"#utility.yul\":12385:12402   */\n      add\n        /* \"#utility.yul\":12378:12425   */\n      mstore\n        /* \"#utility.yul\":12442:12573   */\n      tag_382\n        /* \"#utility.yul\":12568:12572   */\n      dup2\n        /* \"#utility.yul\":12442:12573   */\n      tag_336\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12434:12573   */\n      swap1\n      pop\n        /* \"#utility.yul\":12161:12580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12586:13005   */\n    tag_203:\n        /* \"#utility.yul\":12752:12756   */\n      0x00\n        /* \"#utility.yul\":12790:12792   */\n      0x20\n        /* \"#utility.yul\":12779:12788   */\n      dup3\n        /* \"#utility.yul\":12775:12793   */\n      add\n        /* \"#utility.yul\":12767:12793   */\n      swap1\n      pop\n        /* \"#utility.yul\":12839:12848   */\n      dup2\n        /* \"#utility.yul\":12833:12837   */\n      dup2\n        /* \"#utility.yul\":12829:12849   */\n      sub\n        /* \"#utility.yul\":12825:12826   */\n      0x00\n        /* \"#utility.yul\":12814:12823   */\n      dup4\n        /* \"#utility.yul\":12810:12827   */\n      add\n        /* \"#utility.yul\":12803:12850   */\n      mstore\n        /* \"#utility.yul\":12867:12998   */\n      tag_384\n        /* \"#utility.yul\":12993:12997   */\n      dup2\n        /* \"#utility.yul\":12867:12998   */\n      tag_341\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12859:12998   */\n      swap1\n      pop\n        /* \"#utility.yul\":12586:13005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13011:13233   */\n    tag_26:\n        /* \"#utility.yul\":13104:13108   */\n      0x00\n        /* \"#utility.yul\":13142:13144   */\n      0x20\n        /* \"#utility.yul\":13131:13140   */\n      dup3\n        /* \"#utility.yul\":13127:13145   */\n      add\n        /* \"#utility.yul\":13119:13145   */\n      swap1\n      pop\n        /* \"#utility.yul\":13155:13226   */\n      tag_386\n        /* \"#utility.yul\":13223:13224   */\n      0x00\n        /* \"#utility.yul\":13212:13221   */\n      dup4\n        /* \"#utility.yul\":13208:13225   */\n      add\n        /* \"#utility.yul\":13199:13205   */\n      dup5\n        /* \"#utility.yul\":13155:13226   */\n      tag_346\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13011:13233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13320:13418   */\n    tag_283:\n        /* \"#utility.yul\":13371:13377   */\n      0x00\n        /* \"#utility.yul\":13405:13410   */\n      dup2\n        /* \"#utility.yul\":13399:13411   */\n      mload\n        /* \"#utility.yul\":13389:13411   */\n      swap1\n      pop\n        /* \"#utility.yul\":13320:13418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13424:13523   */\n    tag_295:\n        /* \"#utility.yul\":13476:13482   */\n      0x00\n        /* \"#utility.yul\":13510:13515   */\n      dup2\n        /* \"#utility.yul\":13504:13516   */\n      mload\n        /* \"#utility.yul\":13494:13516   */\n      swap1\n      pop\n        /* \"#utility.yul\":13424:13523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13529:13676   */\n    tag_285:\n        /* \"#utility.yul\":13630:13641   */\n      0x00\n        /* \"#utility.yul\":13667:13670   */\n      dup2\n        /* \"#utility.yul\":13652:13670   */\n      swap1\n      pop\n        /* \"#utility.yul\":13529:13676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13682:13851   */\n    tag_297:\n        /* \"#utility.yul\":13766:13777   */\n      0x00\n        /* \"#utility.yul\":13800:13806   */\n      dup3\n        /* \"#utility.yul\":13795:13798   */\n      dup3\n        /* \"#utility.yul\":13788:13807   */\n      mstore\n        /* \"#utility.yul\":13840:13844   */\n      0x20\n        /* \"#utility.yul\":13835:13838   */\n      dup3\n        /* \"#utility.yul\":13831:13845   */\n      add\n        /* \"#utility.yul\":13816:13845   */\n      swap1\n      pop\n        /* \"#utility.yul\":13682:13851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13857:13953   */\n    tag_275:\n        /* \"#utility.yul\":13894:13901   */\n      0x00\n        /* \"#utility.yul\":13923:13947   */\n      tag_394\n        /* \"#utility.yul\":13941:13946   */\n      dup3\n        /* \"#utility.yul\":13923:13947   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13912:13947   */\n      swap1\n      pop\n        /* \"#utility.yul\":13857:13953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13959:14063   */\n    tag_396:\n        /* \"#utility.yul\":14004:14011   */\n      0x00\n        /* \"#utility.yul\":14033:14057   */\n      tag_398\n        /* \"#utility.yul\":14051:14056   */\n      dup3\n        /* \"#utility.yul\":14033:14057   */\n      tag_395\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14022:14057   */\n      swap1\n      pop\n        /* \"#utility.yul\":13959:14063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14069:14159   */\n    tag_279:\n        /* \"#utility.yul\":14103:14110   */\n      0x00\n        /* \"#utility.yul\":14146:14151   */\n      dup2\n        /* \"#utility.yul\":14139:14152   */\n      iszero\n        /* \"#utility.yul\":14132:14153   */\n      iszero\n        /* \"#utility.yul\":14121:14153   */\n      swap1\n      pop\n        /* \"#utility.yul\":14069:14159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14165:14291   */\n    tag_395:\n        /* \"#utility.yul\":14202:14209   */\n      0x00\n        /* \"#utility.yul\":14242:14284   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14235:14240   */\n      dup3\n        /* \"#utility.yul\":14231:14285   */\n      and\n        /* \"#utility.yul\":14220:14285   */\n      swap1\n      pop\n        /* \"#utility.yul\":14165:14291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14297:14374   */\n    tag_349:\n        /* \"#utility.yul\":14334:14341   */\n      0x00\n        /* \"#utility.yul\":14363:14368   */\n      dup2\n        /* \"#utility.yul\":14352:14368   */\n      swap1\n      pop\n        /* \"#utility.yul\":14297:14374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14380:14520   */\n    tag_291:\n        /* \"#utility.yul\":14444:14453   */\n      0x00\n        /* \"#utility.yul\":14477:14514   */\n      tag_403\n        /* \"#utility.yul\":14508:14513   */\n      dup3\n        /* \"#utility.yul\":14477:14514   */\n      tag_404\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14464:14514   */\n      swap1\n      pop\n        /* \"#utility.yul\":14380:14520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14526:14652   */\n    tag_404:\n        /* \"#utility.yul\":14576:14585   */\n      0x00\n        /* \"#utility.yul\":14609:14646   */\n      tag_406\n        /* \"#utility.yul\":14640:14645   */\n      dup3\n        /* \"#utility.yul\":14609:14646   */\n      tag_407\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":14596:14646   */\n      swap1\n      pop\n        /* \"#utility.yul\":14526:14652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14658:14771   */\n    tag_407:\n        /* \"#utility.yul\":14708:14717   */\n      0x00\n        /* \"#utility.yul\":14741:14765   */\n      tag_409\n        /* \"#utility.yul\":14759:14764   */\n      dup3\n        /* \"#utility.yul\":14741:14765   */\n      tag_395\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":14728:14765   */\n      swap1\n      pop\n        /* \"#utility.yul\":14658:14771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14777:15084   */\n    tag_287:\n        /* \"#utility.yul\":14845:14846   */\n      0x00\n        /* \"#utility.yul\":14855:14968   */\n    tag_411:\n        /* \"#utility.yul\":14869:14875   */\n      dup4\n        /* \"#utility.yul\":14866:14867   */\n      dup2\n        /* \"#utility.yul\":14863:14876   */\n      lt\n        /* \"#utility.yul\":14855:14968   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":14954:14955   */\n      dup1\n        /* \"#utility.yul\":14949:14952   */\n      dup3\n        /* \"#utility.yul\":14945:14956   */\n      add\n        /* \"#utility.yul\":14939:14957   */\n      mload\n        /* \"#utility.yul\":14935:14936   */\n      dup2\n        /* \"#utility.yul\":14930:14933   */\n      dup5\n        /* \"#utility.yul\":14926:14937   */\n      add\n        /* \"#utility.yul\":14919:14958   */\n      mstore\n        /* \"#utility.yul\":14891:14893   */\n      0x20\n        /* \"#utility.yul\":14888:14889   */\n      dup2\n        /* \"#utility.yul\":14884:14894   */\n      add\n        /* \"#utility.yul\":14879:14894   */\n      swap1\n      pop\n        /* \"#utility.yul\":14855:14968   */\n      jump(tag_411)\n    tag_413:\n        /* \"#utility.yul\":14986:14992   */\n      dup4\n        /* \"#utility.yul\":14983:14984   */\n      dup2\n        /* \"#utility.yul\":14980:14993   */\n      gt\n        /* \"#utility.yul\":14977:15078   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":15066:15067   */\n      0x00\n        /* \"#utility.yul\":15057:15063   */\n      dup5\n        /* \"#utility.yul\":15052:15055   */\n      dup5\n        /* \"#utility.yul\":15048:15064   */\n      add\n        /* \"#utility.yul\":15041:15068   */\n      mstore\n        /* \"#utility.yul\":14977:15078   */\n    tag_414:\n        /* \"#utility.yul\":14826:15084   */\n      pop\n        /* \"#utility.yul\":14777:15084   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15213:15330   */\n    tag_254:\n        /* \"#utility.yul\":15322:15323   */\n      0x00\n        /* \"#utility.yul\":15319:15320   */\n      dup1\n        /* \"#utility.yul\":15312:15324   */\n      revert\n        /* \"#utility.yul\":15336:15438   */\n    tag_300:\n        /* \"#utility.yul\":15377:15383   */\n      0x00\n        /* \"#utility.yul\":15428:15430   */\n      0x1f\n        /* \"#utility.yul\":15424:15431   */\n      not\n        /* \"#utility.yul\":15419:15421   */\n      0x1f\n        /* \"#utility.yul\":15412:15417   */\n      dup4\n        /* \"#utility.yul\":15408:15422   */\n      add\n        /* \"#utility.yul\":15404:15432   */\n      and\n        /* \"#utility.yul\":15394:15432   */\n      swap1\n      pop\n        /* \"#utility.yul\":15336:15438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15444:15669   */\n    tag_305:\n        /* \"#utility.yul\":15584:15618   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15580:15581   */\n      0x00\n        /* \"#utility.yul\":15572:15578   */\n      dup3\n        /* \"#utility.yul\":15568:15582   */\n      add\n        /* \"#utility.yul\":15561:15619   */\n      mstore\n        /* \"#utility.yul\":15653:15661   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15648:15650   */\n      0x20\n        /* \"#utility.yul\":15640:15646   */\n      dup3\n        /* \"#utility.yul\":15636:15651   */\n      add\n        /* \"#utility.yul\":15629:15662   */\n      mstore\n        /* \"#utility.yul\":15444:15669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:15839   */\n    tag_310:\n        /* \"#utility.yul\":15815:15831   */\n      0x53616c652068617320656e646564000000000000000000000000000000000000\n        /* \"#utility.yul\":15811:15812   */\n      0x00\n        /* \"#utility.yul\":15803:15809   */\n      dup3\n        /* \"#utility.yul\":15799:15813   */\n      add\n        /* \"#utility.yul\":15792:15832   */\n      mstore\n        /* \"#utility.yul\":15675:15839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15845:16070   */\n    tag_315:\n        /* \"#utility.yul\":15985:16019   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":15981:15982   */\n      0x00\n        /* \"#utility.yul\":15973:15979   */\n      dup3\n        /* \"#utility.yul\":15969:15983   */\n      add\n        /* \"#utility.yul\":15962:16020   */\n      mstore\n        /* \"#utility.yul\":16054:16062   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16049:16051   */\n      0x20\n        /* \"#utility.yul\":16041:16047   */\n      dup3\n        /* \"#utility.yul\":16037:16052   */\n      add\n        /* \"#utility.yul\":16030:16063   */\n      mstore\n        /* \"#utility.yul\":15845:16070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16076:16258   */\n    tag_320:\n        /* \"#utility.yul\":16216:16250   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16212:16213   */\n      0x00\n        /* \"#utility.yul\":16204:16210   */\n      dup3\n        /* \"#utility.yul\":16200:16214   */\n      add\n        /* \"#utility.yul\":16193:16251   */\n      mstore\n        /* \"#utility.yul\":16076:16258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16264:16437   */\n    tag_325:\n        /* \"#utility.yul\":16404:16429   */\n      0x53616c65206861736e2774207374617274656420796574000000000000000000\n        /* \"#utility.yul\":16400:16401   */\n      0x00\n        /* \"#utility.yul\":16392:16398   */\n      dup3\n        /* \"#utility.yul\":16388:16402   */\n      add\n        /* \"#utility.yul\":16381:16430   */\n      mstore\n        /* \"#utility.yul\":16264:16437   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16443:16610   */\n    tag_330:\n        /* \"#utility.yul\":16583:16602   */\n      0x53616c65206861736e277420656e646564000000000000000000000000000000\n        /* \"#utility.yul\":16579:16580   */\n      0x00\n        /* \"#utility.yul\":16571:16577   */\n      dup3\n        /* \"#utility.yul\":16567:16581   */\n      add\n        /* \"#utility.yul\":16560:16603   */\n      mstore\n        /* \"#utility.yul\":16443:16610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16616:16795   */\n    tag_335:\n        /* \"#utility.yul\":16756:16787   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":16752:16753   */\n      0x00\n        /* \"#utility.yul\":16744:16750   */\n      dup3\n        /* \"#utility.yul\":16740:16754   */\n      add\n        /* \"#utility.yul\":16733:16788   */\n      mstore\n        /* \"#utility.yul\":16616:16795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16801:16977   */\n    tag_340:\n        /* \"#utility.yul\":16941:16969   */\n      0x4e6f7420656e6f75676820746f6b656e20746f2072657475726e000000000000\n        /* \"#utility.yul\":16937:16938   */\n      0x00\n        /* \"#utility.yul\":16929:16935   */\n      dup3\n        /* \"#utility.yul\":16925:16939   */\n      add\n        /* \"#utility.yul\":16918:16970   */\n      mstore\n        /* \"#utility.yul\":16801:16977   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16983:17212   */\n    tag_345:\n        /* \"#utility.yul\":17123:17157   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":17119:17120   */\n      0x00\n        /* \"#utility.yul\":17111:17117   */\n      dup3\n        /* \"#utility.yul\":17107:17121   */\n      add\n        /* \"#utility.yul\":17100:17158   */\n      mstore\n        /* \"#utility.yul\":17192:17204   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17187:17189   */\n      0x20\n        /* \"#utility.yul\":17179:17185   */\n      dup3\n        /* \"#utility.yul\":17175:17190   */\n      add\n        /* \"#utility.yul\":17168:17205   */\n      mstore\n        /* \"#utility.yul\":16983:17212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17218:17340   */\n    tag_235:\n        /* \"#utility.yul\":17291:17315   */\n      tag_429\n        /* \"#utility.yul\":17309:17314   */\n      dup2\n        /* \"#utility.yul\":17291:17315   */\n      tag_275\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":17284:17289   */\n      dup2\n        /* \"#utility.yul\":17281:17316   */\n      eq\n        /* \"#utility.yul\":17271:17334   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":17330:17331   */\n      0x00\n        /* \"#utility.yul\":17327:17328   */\n      dup1\n        /* \"#utility.yul\":17320:17332   */\n      revert\n        /* \"#utility.yul\":17271:17334   */\n    tag_430:\n        /* \"#utility.yul\":17218:17340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17346:17484   */\n    tag_239:\n        /* \"#utility.yul\":17427:17459   */\n      tag_432\n        /* \"#utility.yul\":17453:17458   */\n      dup2\n        /* \"#utility.yul\":17427:17459   */\n      tag_396\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":17420:17425   */\n      dup2\n        /* \"#utility.yul\":17417:17460   */\n      eq\n        /* \"#utility.yul\":17407:17478   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":17474:17475   */\n      0x00\n        /* \"#utility.yul\":17471:17472   */\n      dup1\n        /* \"#utility.yul\":17464:17476   */\n      revert\n        /* \"#utility.yul\":17407:17478   */\n    tag_433:\n        /* \"#utility.yul\":17346:17484   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17490:17606   */\n    tag_243:\n        /* \"#utility.yul\":17560:17581   */\n      tag_435\n        /* \"#utility.yul\":17575:17580   */\n      dup2\n        /* \"#utility.yul\":17560:17581   */\n      tag_279\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":17553:17558   */\n      dup2\n        /* \"#utility.yul\":17550:17582   */\n      eq\n        /* \"#utility.yul\":17540:17600   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":17596:17597   */\n      0x00\n        /* \"#utility.yul\":17593:17594   */\n      dup1\n        /* \"#utility.yul\":17586:17598   */\n      revert\n        /* \"#utility.yul\":17540:17600   */\n    tag_436:\n        /* \"#utility.yul\":17490:17606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17612:17734   */\n    tag_247:\n        /* \"#utility.yul\":17685:17709   */\n      tag_438\n        /* \"#utility.yul\":17703:17708   */\n      dup2\n        /* \"#utility.yul\":17685:17709   */\n      tag_349\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":17678:17683   */\n      dup2\n        /* \"#utility.yul\":17675:17710   */\n      eq\n        /* \"#utility.yul\":17665:17728   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":17724:17725   */\n      0x00\n        /* \"#utility.yul\":17721:17722   */\n      dup1\n        /* \"#utility.yul\":17714:17726   */\n      revert\n        /* \"#utility.yul\":17665:17728   */\n    tag_439:\n        /* \"#utility.yul\":17612:17734   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e23b9dc5ac899499218e68db67fa981d0dae4dfc58bdb1cd8793b0063f8421b264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_792": {
									"entryPoint": null,
									"id": 792,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_713": {
									"entryPoint": 258,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 266,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2463:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "227:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "237:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "246:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "237:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "303:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "268:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "268:41:6"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "205:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "213:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "221:5:6",
														"type": ""
													}
												],
												"src": "156:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "384:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "394:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "403:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "394:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "452:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "425:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "425:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "362:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "370:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "378:5:6",
														"type": ""
													}
												],
												"src": "321:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:700:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "655:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "655:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "655:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "627:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "636:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "648:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "619:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:33:6"
															},
															"nodeType": "YulIf",
															"src": "616:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "746:136:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "761:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "775:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "765:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "790:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "844:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "855:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "840:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "840:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "864:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "800:39:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "800:72:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "790:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "892:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "907:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "921:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "911:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "937:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "983:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "994:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "979:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "979:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1003:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "947:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1031:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1046:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1050:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1076:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1122:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1133:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1118:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1118:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1142:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1086:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1076:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1170:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1185:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1199:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1189:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1215:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1261:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1272:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1257:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1257:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1281:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1225:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1225:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1215:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "552:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "563:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "583:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "591:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "599:6:6",
														"type": ""
													}
												],
												"src": "470:836:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1352:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1362:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1378:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1372:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1345:6:6",
														"type": ""
													}
												],
												"src": "1312:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1438:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1448:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1477:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1459:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1448:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1420:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1430:7:6",
														"type": ""
													}
												],
												"src": "1393:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1548:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1558:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1587:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1569:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1558:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1530:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1540:7:6",
														"type": ""
													}
												],
												"src": "1495:104:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1660:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1675:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1660:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1632:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1642:7:6",
														"type": ""
													}
												],
												"src": "1605:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1792:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1803:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1792:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1764:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1774:7:6",
														"type": ""
													}
												],
												"src": "1737:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1909:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1926:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1929:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1919:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1919:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1820:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2049:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2052:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1943:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2109:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2166:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2175:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2168:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2168:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2132:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2157:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2139:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2139:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2129:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:43:6"
															},
															"nodeType": "YulIf",
															"src": "2119:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2102:5:6",
														"type": ""
													}
												],
												"src": "2066:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2245:87:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2310:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2319:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2312:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2312:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2312:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2268:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2301:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2275:25:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2275:32:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2265:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2265:43:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:51:6"
															},
															"nodeType": "YulIf",
															"src": "2255:71:6"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2238:5:6",
														"type": ""
													}
												],
												"src": "2194:138:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2381:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2447:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2450:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2440:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2404:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2429:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2411:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2411:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2401:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2401:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:43:6"
															},
															"nodeType": "YulIf",
															"src": "2391:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2374:5:6",
														"type": ""
													}
												],
												"src": "2338:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001dac38038062001dac833981810160405281019062000037919062000213565b620000576200004b6200010260201b60201c565b6200010a60201b60201c565b62000068846200010a60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555081600381905550505050506200032a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001df81620002dc565b92915050565b600081519050620001f681620002f6565b92915050565b6000815190506200020d8162000310565b92915050565b6000806000806080858703121562000230576200022f620002d7565b5b60006200024087828801620001e5565b94505060206200025387828801620001fc565b93505060406200026687828801620001fc565b92505060606200027987828801620001ce565b91505092959194509250565b60006200029282620002ad565b9050919050565b6000620002a682620002ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b620002e78162000285565b8114620002f357600080fd5b50565b620003018162000299565b81146200030d57600080fd5b50565b6200031b81620002cd565b81146200032757600080fd5b50565b611a72806200033a6000396000f3fe6080604052600436106100e85760003560e01c80638392fe311161008a578063c10b935811610059578063c10b9358146102c1578063de2d583a146102ec578063efef39a11461031c578063f2fde38b14610345576100e8565b80638392fe3114610217578063893d20e8146102405780638da5cb5b1461026b578063ab0bcc4114610296576100e8565b806361778592116100c6578063617785921461016f578063617fba041461019a5780636f9c6149146101d7578063715018a614610200576100e8565b806324076451146100ed578063295e4edf1461012a57806351cff8d914610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f919061120b565b61036e565b60405161012191906116d7565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190611292565b610422565b005b61016d6004803603810190610168919061120b565b6104a8565b005b34801561017b57600080fd5b50610184610767565b604051610191919061157a565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc919061120b565b61078d565b6040516101ce91906116d7565b60405180910390f35b3480156101e357600080fd5b506101fe60048036038101906101f99190611292565b6107d9565b005b34801561020c57600080fd5b5061021561085f565b005b34801561022357600080fd5b5061023e60048036038101906102399190611292565b6108e7565b005b34801561024c57600080fd5b506102556109ca565b60405161026291906114e4565b60405180910390f35b34801561027757600080fd5b506102806109d9565b60405161028d91906114e4565b60405180910390f35b3480156102a257600080fd5b506102ab610a02565b6040516102b891906116d7565b60405180910390f35b3480156102cd57600080fd5b506102d6610a0c565b6040516102e391906116d7565b60405180910390f35b61030660048036038101906103019190611238565b610a16565b604051610313919061155f565b60405180910390f35b34801561032857600080fd5b50610343600480360381019061033e9190611292565b610b6f565b005b34801561035157600080fd5b5061036c6004803603810190610367919061120b565b610c52565b005b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103cb91906114e4565b60206040518083038186803b1580156103e357600080fd5b505afa1580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b91906112bf565b9050919050565b61042a610d4a565b73ffffffffffffffffffffffffffffffffffffffff166104486109d9565b73ffffffffffffffffffffffffffffffffffffffff161461049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590611617565b60405180910390fd5b8060028190555050565b6104b0610d4a565b73ffffffffffffffffffffffffffffffffffffffff166104ce6109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611617565b60405180910390fd5b6003544211610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90611657565b60405180910390fd5b61066681600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316105b26109d9565b6040518263ffffffff1660e01b81526004016105ce91906114e4565b60206040518083038186803b1580156105e657600080fd5b505afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e91906112bf565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d529092919063ffffffff16565b61076481600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316106b06109d9565b6040518263ffffffff1660e01b81526004016106cc91906114e4565b60206040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c91906112bf565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d529092919063ffffffff16565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6107e1610d4a565b73ffffffffffffffffffffffffffffffffffffffff166107ff6109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c90611617565b60405180910390fd5b8060038190555050565b610867610d4a565b73ffffffffffffffffffffffffffffffffffffffff166108856109d9565b73ffffffffffffffffffffffffffffffffffffffff16146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d290611617565b60405180910390fd5b6108e56000610dd8565b565b60025442101561092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390611637565b60405180910390fd5b600354421115610971576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610968906115d7565b60405180910390fd5b6109c73361097d6109d9565b83600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b50565b60006109d46109d9565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600254905090565b6000600354905090565b6000610a20610d4a565b73ffffffffffffffffffffffffffffffffffffffff16610a3e6109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611617565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905080471015610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611697565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b64573d6000803e3d6000fd5b506001915050919050565b600254421015610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90611637565b60405180910390fd5b600354421115610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf0906115d7565b60405180910390fd5b610c4f33610c056109d9565b83600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b50565b610c5a610d4a565b73ffffffffffffffffffffffffffffffffffffffff16610c786109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610cce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc590611617565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d35906115b7565b60405180910390fd5b610d4781610dd8565b50565b600033905090565b610dd38363a9059cbb60e01b8484604051602401610d71929190611536565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f25565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f1f846323b872dd60e01b858585604051602401610ebd939291906114ff565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f25565b50505050565b6000610f87826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610fec9092919063ffffffff16565b9050600081511115610fe75780806020019051810190610fa79190611265565b610fe6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdd906116b7565b60405180910390fd5b5b505050565b6060610ffb8484600085611004565b90509392505050565b606082471015611049576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611040906115f7565b60405180910390fd5b61105285611118565b611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108890611677565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110ba91906114cd565b60006040518083038185875af1925050503d80600081146110f7576040519150601f19603f3d011682016040523d82523d6000602084013e6110fc565b606091505b509150915061110c82828661113b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561114b5782905061119b565b60008351111561115e5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111929190611595565b60405180910390fd5b9392505050565b6000813590506111b1816119e0565b92915050565b6000813590506111c6816119f7565b92915050565b6000815190506111db81611a0e565b92915050565b6000813590506111f081611a25565b92915050565b60008151905061120581611a25565b92915050565b600060208284031215611221576112206117e7565b5b600061122f848285016111a2565b91505092915050565b60006020828403121561124e5761124d6117e7565b5b600061125c848285016111b7565b91505092915050565b60006020828403121561127b5761127a6117e7565b5b6000611289848285016111cc565b91505092915050565b6000602082840312156112a8576112a76117e7565b5b60006112b6848285016111e1565b91505092915050565b6000602082840312156112d5576112d46117e7565b5b60006112e3848285016111f6565b91505092915050565b6112f581611724565b82525050565b61130481611748565b82525050565b6000611315826116f2565b61131f8185611708565b935061132f8185602086016117b4565b80840191505092915050565b6113448161177e565b82525050565b6000611355826116fd565b61135f8185611713565b935061136f8185602086016117b4565b611378816117ec565b840191505092915050565b6000611390602683611713565b915061139b826117fd565b604082019050919050565b60006113b3600e83611713565b91506113be8261184c565b602082019050919050565b60006113d6602683611713565b91506113e182611875565b604082019050919050565b60006113f9602083611713565b9150611404826118c4565b602082019050919050565b600061141c601783611713565b9150611427826118ed565b602082019050919050565b600061143f601183611713565b915061144a82611916565b602082019050919050565b6000611462601d83611713565b915061146d8261193f565b602082019050919050565b6000611485601a83611713565b915061149082611968565b602082019050919050565b60006114a8602a83611713565b91506114b382611991565b604082019050919050565b6114c781611774565b82525050565b60006114d9828461130a565b915081905092915050565b60006020820190506114f960008301846112ec565b92915050565b600060608201905061151460008301866112ec565b61152160208301856112ec565b61152e60408301846114be565b949350505050565b600060408201905061154b60008301856112ec565b61155860208301846114be565b9392505050565b600060208201905061157460008301846112fb565b92915050565b600060208201905061158f600083018461133b565b92915050565b600060208201905081810360008301526115af818461134a565b905092915050565b600060208201905081810360008301526115d081611383565b9050919050565b600060208201905081810360008301526115f0816113a6565b9050919050565b60006020820190508181036000830152611610816113c9565b9050919050565b60006020820190508181036000830152611630816113ec565b9050919050565b600060208201905081810360008301526116508161140f565b9050919050565b6000602082019050818103600083015261167081611432565b9050919050565b6000602082019050818103600083015261169081611455565b9050919050565b600060208201905081810360008301526116b081611478565b9050919050565b600060208201905081810360008301526116d08161149b565b9050919050565b60006020820190506116ec60008301846114be565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061172f82611754565b9050919050565b600061174182611754565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061178982611790565b9050919050565b600061179b826117a2565b9050919050565b60006117ad82611754565b9050919050565b60005b838110156117d25780820151818401526020810190506117b7565b838111156117e1576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53616c652068617320656e646564000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53616c65206861736e2774207374617274656420796574000000000000000000600082015250565b7f53616c65206861736e277420656e646564000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4e6f7420656e6f75676820746f6b656e20746f2072657475726e000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6119e981611724565b81146119f457600080fd5b50565b611a0081611736565b8114611a0b57600080fd5b50565b611a1781611748565b8114611a2257600080fd5b50565b611a2e81611774565b8114611a3957600080fd5b5056fea2646970667358221220e23b9dc5ac899499218e68db67fa981d0dae4dfc58bdb1cd8793b0063f8421b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DAC CODESIZE SUB DUP1 PUSH3 0x1DAC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x213 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x102 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x68 DUP5 PUSH3 0x10A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x32A JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1DF DUP2 PUSH3 0x2DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F6 DUP2 PUSH3 0x2F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x20D DUP2 PUSH3 0x310 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x230 JUMPI PUSH3 0x22F PUSH3 0x2D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x240 DUP8 DUP3 DUP9 ADD PUSH3 0x1E5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x253 DUP8 DUP3 DUP9 ADD PUSH3 0x1FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x266 DUP8 DUP3 DUP9 ADD PUSH3 0x1FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x279 DUP8 DUP3 DUP9 ADD PUSH3 0x1CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x292 DUP3 PUSH3 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A6 DUP3 PUSH3 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2E7 DUP2 PUSH3 0x285 JUMP JUMPDEST DUP2 EQ PUSH3 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x301 DUP2 PUSH3 0x299 JUMP JUMPDEST DUP2 EQ PUSH3 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x31B DUP2 PUSH3 0x2CD JUMP JUMPDEST DUP2 EQ PUSH3 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A72 DUP1 PUSH3 0x33A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8392FE31 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC10B9358 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC10B9358 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xDE2D583A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xEFEF39A1 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8392FE31 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xAB0BCC41 EQ PUSH2 0x296 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x61778592 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x61778592 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x617FBA04 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x6F9C6149 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x200 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x24076451 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x295E4EDF EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x157A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0xB6F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x448 PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CE PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x666 DUP2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x5B2 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x764 DUP2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x6B0 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E1 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7FF PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x867 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x885 PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 PUSH1 0x0 PUSH2 0xDD8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C7 CALLER PUSH2 0x97D PUSH2 0x9D9 JUMP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D4 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA20 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA3E PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4F CALLER PUSH2 0xC05 PUSH2 0x9D9 JUMP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC5A PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC78 PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC5 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD35 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD47 DUP2 PUSH2 0xDD8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD3 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD71 SWAP3 SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF1F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEBD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xFE7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDD SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFFB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1049 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1040 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1052 DUP6 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1088 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x10BA SWAP2 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x110C DUP3 DUP3 DUP7 PUSH2 0x113B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x114B JUMPI DUP3 SWAP1 POP PUSH2 0x119B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x115E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B1 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11C6 DUP2 PUSH2 0x19F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11DB DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F0 DUP2 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1205 DUP2 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1221 JUMPI PUSH2 0x1220 PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122F DUP5 DUP3 DUP6 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124E JUMPI PUSH2 0x124D PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x125C DUP5 DUP3 DUP6 ADD PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127A PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1289 DUP5 DUP3 DUP6 ADD PUSH2 0x11CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B6 DUP5 DUP3 DUP6 ADD PUSH2 0x11E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E3 DUP5 DUP3 DUP6 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F5 DUP2 PUSH2 0x1724 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1304 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1315 DUP3 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x131F DUP2 DUP6 PUSH2 0x1708 JUMP JUMPDEST SWAP4 POP PUSH2 0x132F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1344 DUP2 PUSH2 0x177E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x135F DUP2 DUP6 PUSH2 0x1713 JUMP JUMPDEST SWAP4 POP PUSH2 0x136F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x1378 DUP2 PUSH2 0x17EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1390 PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x139B DUP3 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B3 PUSH1 0xE DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x13BE DUP3 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D6 PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E1 DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F9 PUSH1 0x20 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP3 PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141C PUSH1 0x17 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1427 DUP3 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F PUSH1 0x11 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x144A DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1462 PUSH1 0x1D DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x146D DUP3 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1485 PUSH1 0x1A DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1490 DUP3 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A8 PUSH1 0x2A DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B3 DUP3 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C7 DUP2 PUSH2 0x1774 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D9 DUP3 DUP5 PUSH2 0x130A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1514 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1521 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x152E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x154B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1574 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x158F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AF DUP2 DUP5 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D0 DUP2 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F0 DUP2 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1610 DUP2 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1630 DUP2 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1650 DUP2 PUSH2 0x140F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1670 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1690 DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B0 DUP2 PUSH2 0x1478 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D0 DUP2 PUSH2 0x149B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172F DUP3 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1741 DUP3 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1789 DUP3 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179B DUP3 PUSH2 0x17A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AD DUP3 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C652068617320656E646564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E2774207374617274656420796574000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E277420656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E20746F2072657475726E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x19E9 DUP2 PUSH2 0x1724 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A17 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x1774 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 EXTCODESIZE SWAP14 0xC5 0xAC DUP10 SWAP5 SWAP10 0x21 DUP15 PUSH9 0xDB67FA981D0DAE4DFC PC 0xBD 0xB1 0xCD DUP8 SWAP4 0xB0 MOD EXTCODEHASH DUP5 0x21 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:4077:5:-:0;;;590:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;696:33:5;715:13;696:18;;;:33;;:::i;:::-;759:12;736:13;;:36;;;;;;;;;;;;;;;;;;802:13;779;;:37;;;;;;;;;;;;;;;;;;836:10;823;:23;;;;864:8;853;:19;;;;590:288;;;;241:4077;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:143:6:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:159::-;221:5;252:6;246:13;237:22;;268:41;303:5;268:41;:::i;:::-;156:159;;;;:::o;321:143::-;378:5;409:6;403:13;394:22;;425:33;452:5;425:33;:::i;:::-;321:143;;;;:::o;470:836::-;575:6;583;591;599;648:3;636:9;627:7;623:23;619:33;616:120;;;655:79;;:::i;:::-;616:120;775:1;800:72;864:7;855:6;844:9;840:22;800:72;:::i;:::-;790:82;;746:136;921:2;947:64;1003:7;994:6;983:9;979:22;947:64;:::i;:::-;937:74;;892:129;1060:2;1086:64;1142:7;1133:6;1122:9;1118:22;1086:64;:::i;:::-;1076:74;;1031:129;1199:2;1225:64;1281:7;1272:6;1261:9;1257:22;1225:64;:::i;:::-;1215:74;;1170:129;470:836;;;;;;;:::o;1393:96::-;1430:7;1459:24;1477:5;1459:24;:::i;:::-;1448:35;;1393:96;;;:::o;1495:104::-;1540:7;1569:24;1587:5;1569:24;:::i;:::-;1558:35;;1495:104;;;:::o;1605:126::-;1642:7;1682:42;1675:5;1671:54;1660:65;;1605:126;;;:::o;1737:77::-;1774:7;1803:5;1792:16;;1737:77;;;:::o;1943:117::-;2052:1;2049;2042:12;2066:122;2139:24;2157:5;2139:24;:::i;:::-;2132:5;2129:35;2119:63;;2178:1;2175;2168:12;2119:63;2066:122;:::o;2194:138::-;2275:32;2301:5;2275:32;:::i;:::-;2268:5;2265:43;2255:71;;2322:1;2319;2312:12;2255:71;2194:138;:::o;2338:122::-;2411:24;2429:5;2411:24;:::i;:::-;2404:5;2401:35;2391:63;;2450:1;2447;2440:12;2391:63;2338:122;:::o;241:4077:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Return_981": {
									"entryPoint": 2582,
									"id": 981,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_callOptionalReturn_405": {
									"entryPoint": 3877,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_713": {
									"entryPoint": 3402,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3544,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_usdcInstance_744": {
									"entryPoint": 1895,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bala_822": {
									"entryPoint": 878,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_565": {
									"entryPoint": 4100,
									"id": 565,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_495": {
									"entryPoint": 4076,
									"id": 495,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getOwner_809": {
									"entryPoint": 2506,
									"id": 809,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRecord_843": {
									"entryPoint": 1933,
									"id": 843,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_424": {
									"entryPoint": 4376,
									"id": 424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 2521,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@purchase_875": {
									"entryPoint": 2927,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@purchases_907": {
									"entryPoint": 2279,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 2143,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_239": {
									"entryPoint": 3740,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_213": {
									"entryPoint": 3410,
									"id": 213,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@saleEnd_830": {
									"entryPoint": 2572,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@saleStart_800": {
									"entryPoint": 2562,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 3154,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateSaleEndTime_1005": {
									"entryPoint": 2009,
									"id": 1005,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateSaleStartTime_993": {
									"entryPoint": 1058,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResult_700": {
									"entryPoint": 4411,
									"id": 700,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_945": {
									"entryPoint": 1192,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 4664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed": {
									"entryPoint": 5498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$182_to_t_address": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d": {
									"entryPoint": 6220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 6261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17737:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:6"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:155:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "383:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "383:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "438:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "414:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "351:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "359:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "367:5:6",
														"type": ""
													}
												],
												"src": "313:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "518:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "540:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "527:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "518:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "583:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "556:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "486:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "494:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "502:5:6",
														"type": ""
													}
												],
												"src": "456:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "664:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "674:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "689:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "683:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "674:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "732:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "705:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "705:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "642:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "650:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:6",
														"type": ""
													}
												],
												"src": "601:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "816:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "862:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "864:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "864:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "864:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "837:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "846:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "833:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "833:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "858:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:32:6"
															},
															"nodeType": "YulIf",
															"src": "826:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "955:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "970:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "984:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "974:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "999:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1034:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1045:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1030:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1030:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1054:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1009:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1009:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "999:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "786:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "797:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "809:6:6",
														"type": ""
													}
												],
												"src": "750:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1159:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1205:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1207:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1207:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1207:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1180:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1189:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1176:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1176:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:32:6"
															},
															"nodeType": "YulIf",
															"src": "1169:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1298:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1313:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1327:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1317:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1342:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1385:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1396:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1381:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1381:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1405:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1352:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1352:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1342:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1129:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1140:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1152:6:6",
														"type": ""
													}
												],
												"src": "1085:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1510:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1556:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1558:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1558:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1558:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1531:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1540:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:32:6"
															},
															"nodeType": "YulIf",
															"src": "1520:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1649:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1664:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1678:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1668:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1693:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1736:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1747:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1732:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1732:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1756:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1703:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1693:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1480:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1491:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1503:6:6",
														"type": ""
													}
												],
												"src": "1436:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1899:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1901:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1901:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1901:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1874:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1883:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1870:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1870:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1895:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:32:6"
															},
															"nodeType": "YulIf",
															"src": "1863:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1992:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2007:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2011:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2036:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2071:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2082:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2067:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2067:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2091:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2046:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2036:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1823:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1834:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1846:6:6",
														"type": ""
													}
												],
												"src": "1787:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2199:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2245:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2247:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2247:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2247:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2220:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2229:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2216:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2216:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2241:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2212:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:32:6"
															},
															"nodeType": "YulIf",
															"src": "2209:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2338:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2353:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2367:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2357:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2382:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2428:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2439:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2424:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2424:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2448:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2392:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2382:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2169:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2180:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2192:6:6",
														"type": ""
													}
												],
												"src": "2122:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2561:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2584:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2566:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2532:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2539:3:6",
														"type": ""
													}
												],
												"src": "2479:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2679:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2699:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2684:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2684:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2672:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2650:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2657:3:6",
														"type": ""
													}
												],
												"src": "2603:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2826:265:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2836:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2882:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2850:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2840:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2897:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2980:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2985:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2904:75:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2897:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3027:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3034:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3041:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3001:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3001:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3062:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3073:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3078:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2807:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2814:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2822:3:6",
														"type": ""
													}
												],
												"src": "2718:373:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3176:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3243:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$182_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3198:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3198:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3186:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3164:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3171:3:6",
														"type": ""
													}
												],
												"src": "3097:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:272:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3364:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3411:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3378:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3368:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3426:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3492:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3497:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3433:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3539:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3546:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3535:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3553:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3558:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3513:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3513:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3574:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3585:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3612:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3590:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3581:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3581:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3574:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3335:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3342:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3350:3:6",
														"type": ""
													}
												],
												"src": "3262:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3778:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3788:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3854:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3795:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3788:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3871:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3973:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3984:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3980:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3980:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3973:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3766:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3774:3:6",
														"type": ""
													}
												],
												"src": "3632:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4150:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4160:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4226:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4231:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4167:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4167:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4160:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4332:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																	"nodeType": "YulIdentifier",
																	"src": "4243:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4243:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4243:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4345:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4356:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4352:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4345:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4138:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4146:3:6",
														"type": ""
													}
												],
												"src": "4004:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4522:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4532:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4598:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4603:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4539:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4704:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "4615:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4615:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4728:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4733:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4724:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4717:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4510:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4518:3:6",
														"type": ""
													}
												],
												"src": "4376:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4894:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4904:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4970:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4975:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4911:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4904:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5076:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4987:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4987:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5089:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5100:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5105:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5096:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5089:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4882:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4890:3:6",
														"type": ""
													}
												],
												"src": "4748:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5266:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5276:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5342:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5347:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5283:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5283:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5276:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5448:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																	"nodeType": "YulIdentifier",
																	"src": "5359:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5359:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5359:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5461:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5472:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5477:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5461:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5254:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5262:3:6",
														"type": ""
													}
												],
												"src": "5120:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5638:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5648:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5714:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5719:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5655:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5648:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5820:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
																	"nodeType": "YulIdentifier",
																	"src": "5731:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5731:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5731:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5833:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5844:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5849:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5833:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5626:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5634:3:6",
														"type": ""
													}
												],
												"src": "5492:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6010:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6020:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6086:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6091:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6027:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6020:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6192:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "6103:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6103:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6205:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6216:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6212:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6205:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5998:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6006:3:6",
														"type": ""
													}
												],
												"src": "5864:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6382:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6392:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6458:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6463:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6399:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6564:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
																	"nodeType": "YulIdentifier",
																	"src": "6475:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6475:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6577:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6588:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6593:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6584:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6577:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6370:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6378:3:6",
														"type": ""
													}
												],
												"src": "6236:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6754:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6764:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6830:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6771:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6764:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6936:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "6847:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6949:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6960:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6965:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6742:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6750:3:6",
														"type": ""
													}
												],
												"src": "6608:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7045:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7062:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7085:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7067:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7067:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7055:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7055:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7033:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7040:3:6",
														"type": ""
													}
												],
												"src": "6980:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7238:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7249:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7336:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7345:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7256:79:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7256:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7359:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7366:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7359:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7217:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7223:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7234:3:6",
														"type": ""
													}
												],
												"src": "7104:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7479:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7489:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7501:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7512:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7497:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7497:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7489:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7569:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7582:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7593:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7578:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7578:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7525:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7525:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7525:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7451:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7463:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7474:4:6",
														"type": ""
													}
												],
												"src": "7381:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7763:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7773:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7785:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7796:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7781:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7853:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7866:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7877:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7862:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7862:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7809:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7809:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7947:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7958:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7890:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7890:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8016:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8029:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8040:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8025:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8025:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7972:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7972:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7719:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7731:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7739:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7747:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7758:4:6",
														"type": ""
													}
												],
												"src": "7609:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8183:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8193:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8205:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8216:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8201:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8201:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8193:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8273:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8286:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8297:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8282:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8282:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8229:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8229:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8229:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8354:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8367:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8378:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8363:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8363:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8310:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8310:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8147:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8159:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8167:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8178:4:6",
														"type": ""
													}
												],
												"src": "8057:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8487:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8497:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8509:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8520:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8505:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8505:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8497:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8584:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8580:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8533:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8459:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8471:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8482:4:6",
														"type": ""
													}
												],
												"src": "8395:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8723:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8733:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8745:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8756:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8741:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8733:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8827:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8840:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8851:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8836:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8836:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8769:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8769:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8695:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8707:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8718:4:6",
														"type": ""
													}
												],
												"src": "8611:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8985:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8995:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9007:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9018:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9003:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9003:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8995:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9042:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9053:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9038:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9061:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9067:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9031:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9087:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9159:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9168:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9095:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9095:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9087:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8957:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8969:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8980:4:6",
														"type": ""
													}
												],
												"src": "8867:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9357:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9367:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9379:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9390:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9375:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9375:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9367:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9414:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9425:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9410:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9410:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9433:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9439:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9429:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9429:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9403:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9403:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9403:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9459:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9593:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9467:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9467:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9459:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9337:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9352:4:6",
														"type": ""
													}
												],
												"src": "9186:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9782:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9792:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9804:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9815:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9800:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9800:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9792:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9839:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9850:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9835:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9835:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9858:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9864:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9854:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9854:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9828:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9828:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9884:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10018:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9892:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9892:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9884:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9762:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9777:4:6",
														"type": ""
													}
												],
												"src": "9611:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10207:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10217:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10229:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10240:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10225:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10217:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10264:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10275:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10260:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10283:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10289:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10279:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10253:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10253:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10253:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10309:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10443:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10317:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10317:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10309:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10187:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10202:4:6",
														"type": ""
													}
												],
												"src": "10036:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10632:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10642:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10654:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10665:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10650:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10650:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10642:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10689:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10700:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10685:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10685:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10708:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10714:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10704:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10704:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10678:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10678:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10678:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10734:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10868:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10742:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10742:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10734:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10612:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10627:4:6",
														"type": ""
													}
												],
												"src": "10461:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11057:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11067:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11079:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11090:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11075:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11075:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11067:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11114:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11125:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11133:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11139:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11129:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11103:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11103:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11159:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11293:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11167:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11167:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11159:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11037:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11052:4:6",
														"type": ""
													}
												],
												"src": "10886:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11482:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11492:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11504:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11515:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11500:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11500:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11492:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11539:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11550:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11535:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11535:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11558:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11564:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11554:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11554:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11528:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11528:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11528:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11584:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11718:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11592:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11592:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11584:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11477:4:6",
														"type": ""
													}
												],
												"src": "11311:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11907:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11917:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11929:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11940:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11925:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11917:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11964:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11960:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11983:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11989:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11979:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11979:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11953:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11953:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12009:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12143:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12017:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12017:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12009:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11887:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11902:4:6",
														"type": ""
													}
												],
												"src": "11736:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12332:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12342:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12354:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12350:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12342:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12389:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12400:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12385:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12385:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12408:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12414:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12404:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12404:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12378:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12378:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12378:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12434:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12568:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12442:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12442:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12434:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12312:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12327:4:6",
														"type": ""
													}
												],
												"src": "12161:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12757:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12767:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12779:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12790:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12775:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12775:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12767:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12814:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12825:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12810:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12810:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12833:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12839:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12829:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12829:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12803:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12859:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12993:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12867:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12867:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12859:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12737:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12752:4:6",
														"type": ""
													}
												],
												"src": "12586:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13109:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13119:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13131:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13142:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13127:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13127:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13119:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13199:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13212:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13223:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13208:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13208:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13155:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13155:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13155:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13081:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13093:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13104:4:6",
														"type": ""
													}
												],
												"src": "13011:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13279:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13289:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13305:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13299:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13299:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "13289:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13272:6:6",
														"type": ""
													}
												],
												"src": "13239:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13378:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13389:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13405:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13399:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13399:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13389:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13371:6:6",
														"type": ""
													}
												],
												"src": "13320:98:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13483:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13494:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13510:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13504:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13504:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13466:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13476:6:6",
														"type": ""
													}
												],
												"src": "13424:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13642:34:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13652:18:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13667:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13652:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13614:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13619:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13630:11:6",
														"type": ""
													}
												],
												"src": "13529:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13778:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13795:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13800:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13788:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13788:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13788:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13816:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13835:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13840:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13831:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13831:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13816:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13750:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13755:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13766:11:6",
														"type": ""
													}
												],
												"src": "13682:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13902:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13912:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13941:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13923:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13923:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13912:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13884:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13894:7:6",
														"type": ""
													}
												],
												"src": "13857:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14012:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14022:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14051:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14033:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14033:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14022:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13994:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14004:7:6",
														"type": ""
													}
												],
												"src": "13959:104:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14111:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14121:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14146:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14139:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14139:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14132:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14132:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14121:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14093:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14103:7:6",
														"type": ""
													}
												],
												"src": "14069:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14210:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14220:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14235:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14242:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14231:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14231:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14220:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14192:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14202:7:6",
														"type": ""
													}
												],
												"src": "14165:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14342:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14352:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14363:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14352:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14324:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14334:7:6",
														"type": ""
													}
												],
												"src": "14297:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14454:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14464:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14508:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14477:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14477:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14464:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$182_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14434:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14444:9:6",
														"type": ""
													}
												],
												"src": "14380:140:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14586:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14596:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14640:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14609:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14609:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14596:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14566:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14576:9:6",
														"type": ""
													}
												],
												"src": "14526:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14718:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14728:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14759:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14741:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14741:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14728:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14698:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14708:9:6",
														"type": ""
													}
												],
												"src": "14658:113:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14826:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14836:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14845:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14840:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14905:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14930:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14935:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14926:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14926:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14949:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14954:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14945:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14945:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14939:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14939:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14919:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14919:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14919:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14866:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14869:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14863:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14863:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14877:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14879:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14888:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14891:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14884:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14884:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14879:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14859:3:6",
																"statements": []
															},
															"src": "14855:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15002:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15052:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15057:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15048:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15048:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15066:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15041:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15041:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15041:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14983:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14986:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14980:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14980:13:6"
															},
															"nodeType": "YulIf",
															"src": "14977:101:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14808:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14813:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14818:6:6",
														"type": ""
													}
												],
												"src": "14777:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15179:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15196:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15199:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15189:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15189:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15189:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "15090:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15302:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15319:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15322:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15312:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15312:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15312:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15213:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15384:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15394:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15412:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15419:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15408:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15408:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15428:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15424:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15424:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15404:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15404:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15394:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15367:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15377:6:6",
														"type": ""
													}
												],
												"src": "15336:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15550:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15572:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15580:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15568:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15568:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15584:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15561:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15561:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15561:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15640:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15648:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15636:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15636:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15653:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15629:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15629:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15629:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15542:6:6",
														"type": ""
													}
												],
												"src": "15444:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15781:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15803:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15811:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15799:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15799:14:6"
																	},
																	{
																		"hexValue": "53616c652068617320656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15815:16:6",
																		"type": "",
																		"value": "Sale has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15792:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15792:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15792:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15773:6:6",
														"type": ""
													}
												],
												"src": "15675:164:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15951:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15973:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15981:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15969:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15969:14:6"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15985:34:6",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15962:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15962:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15962:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16041:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16049:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16037:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16037:15:6"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16054:8:6",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16030:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16030:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16030:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15943:6:6",
														"type": ""
													}
												],
												"src": "15845:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16182:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16204:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16212:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16200:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16200:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16216:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16193:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16193:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16193:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16174:6:6",
														"type": ""
													}
												],
												"src": "16076:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16370:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16392:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16400:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16388:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16388:14:6"
																	},
																	{
																		"hexValue": "53616c65206861736e2774207374617274656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16404:25:6",
																		"type": "",
																		"value": "Sale hasn't started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16381:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16381:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16381:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16362:6:6",
														"type": ""
													}
												],
												"src": "16264:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16549:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16571:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16579:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16567:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16567:14:6"
																	},
																	{
																		"hexValue": "53616c65206861736e277420656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16583:19:6",
																		"type": "",
																		"value": "Sale hasn't ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16560:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16560:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16541:6:6",
														"type": ""
													}
												],
												"src": "16443:167:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16722:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16744:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16752:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16740:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16740:14:6"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16756:31:6",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16733:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16733:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16733:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16714:6:6",
														"type": ""
													}
												],
												"src": "16616:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16907:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16929:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16937:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16925:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16925:14:6"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e20746f2072657475726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16941:28:6",
																		"type": "",
																		"value": "Not enough token to return"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16918:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16918:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16918:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16899:6:6",
														"type": ""
													}
												],
												"src": "16801:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17089:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17111:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17119:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17107:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17107:14:6"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17123:34:6",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17100:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17100:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17100:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17179:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17187:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17175:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17175:15:6"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17192:12:6",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17168:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17168:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17168:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17081:6:6",
														"type": ""
													}
												],
												"src": "16983:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17261:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17318:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17327:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17330:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17320:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17320:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17320:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17284:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17309:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17291:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17291:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17281:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17281:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17274:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17274:43:6"
															},
															"nodeType": "YulIf",
															"src": "17271:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17254:5:6",
														"type": ""
													}
												],
												"src": "17218:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17397:87:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17462:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17474:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17464:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17464:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17464:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17420:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17453:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "17427:25:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17427:32:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17417:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17417:43:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17410:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17410:51:6"
															},
															"nodeType": "YulIf",
															"src": "17407:71:6"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17390:5:6",
														"type": ""
													}
												],
												"src": "17346:138:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17530:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17584:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17593:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17596:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17586:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17586:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17586:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17553:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17575:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17560:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17560:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17550:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17550:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17543:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17543:40:6"
															},
															"nodeType": "YulIf",
															"src": "17540:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17523:5:6",
														"type": ""
													}
												],
												"src": "17490:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17655:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17712:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17721:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17724:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17714:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17714:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17714:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17678:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17703:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17685:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17685:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17675:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17675:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17668:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17668:43:6"
															},
															"nodeType": "YulIf",
															"src": "17665:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17648:5:6",
														"type": ""
													}
												],
												"src": "17612:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$182_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$182_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale has ended\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale hasn't started yet\")\n\n    }\n\n    function store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale hasn't ended\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough token to return\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80638392fe311161008a578063c10b935811610059578063c10b9358146102c1578063de2d583a146102ec578063efef39a11461031c578063f2fde38b14610345576100e8565b80638392fe3114610217578063893d20e8146102405780638da5cb5b1461026b578063ab0bcc4114610296576100e8565b806361778592116100c6578063617785921461016f578063617fba041461019a5780636f9c6149146101d7578063715018a614610200576100e8565b806324076451146100ed578063295e4edf1461012a57806351cff8d914610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f919061120b565b61036e565b60405161012191906116d7565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190611292565b610422565b005b61016d6004803603810190610168919061120b565b6104a8565b005b34801561017b57600080fd5b50610184610767565b604051610191919061157a565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc919061120b565b61078d565b6040516101ce91906116d7565b60405180910390f35b3480156101e357600080fd5b506101fe60048036038101906101f99190611292565b6107d9565b005b34801561020c57600080fd5b5061021561085f565b005b34801561022357600080fd5b5061023e60048036038101906102399190611292565b6108e7565b005b34801561024c57600080fd5b506102556109ca565b60405161026291906114e4565b60405180910390f35b34801561027757600080fd5b506102806109d9565b60405161028d91906114e4565b60405180910390f35b3480156102a257600080fd5b506102ab610a02565b6040516102b891906116d7565b60405180910390f35b3480156102cd57600080fd5b506102d6610a0c565b6040516102e391906116d7565b60405180910390f35b61030660048036038101906103019190611238565b610a16565b604051610313919061155f565b60405180910390f35b34801561032857600080fd5b50610343600480360381019061033e9190611292565b610b6f565b005b34801561035157600080fd5b5061036c6004803603810190610367919061120b565b610c52565b005b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103cb91906114e4565b60206040518083038186803b1580156103e357600080fd5b505afa1580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b91906112bf565b9050919050565b61042a610d4a565b73ffffffffffffffffffffffffffffffffffffffff166104486109d9565b73ffffffffffffffffffffffffffffffffffffffff161461049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590611617565b60405180910390fd5b8060028190555050565b6104b0610d4a565b73ffffffffffffffffffffffffffffffffffffffff166104ce6109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611617565b60405180910390fd5b6003544211610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90611657565b60405180910390fd5b61066681600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316105b26109d9565b6040518263ffffffff1660e01b81526004016105ce91906114e4565b60206040518083038186803b1580156105e657600080fd5b505afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e91906112bf565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d529092919063ffffffff16565b61076481600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316106b06109d9565b6040518263ffffffff1660e01b81526004016106cc91906114e4565b60206040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c91906112bf565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d529092919063ffffffff16565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6107e1610d4a565b73ffffffffffffffffffffffffffffffffffffffff166107ff6109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c90611617565b60405180910390fd5b8060038190555050565b610867610d4a565b73ffffffffffffffffffffffffffffffffffffffff166108856109d9565b73ffffffffffffffffffffffffffffffffffffffff16146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d290611617565b60405180910390fd5b6108e56000610dd8565b565b60025442101561092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390611637565b60405180910390fd5b600354421115610971576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610968906115d7565b60405180910390fd5b6109c73361097d6109d9565b83600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b50565b60006109d46109d9565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600254905090565b6000600354905090565b6000610a20610d4a565b73ffffffffffffffffffffffffffffffffffffffff16610a3e6109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611617565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905080471015610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611697565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b64573d6000803e3d6000fd5b506001915050919050565b600254421015610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90611637565b60405180910390fd5b600354421115610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf0906115d7565b60405180910390fd5b610c4f33610c056109d9565b83600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b50565b610c5a610d4a565b73ffffffffffffffffffffffffffffffffffffffff16610c786109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610cce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc590611617565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d35906115b7565b60405180910390fd5b610d4781610dd8565b50565b600033905090565b610dd38363a9059cbb60e01b8484604051602401610d71929190611536565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f25565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f1f846323b872dd60e01b858585604051602401610ebd939291906114ff565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f25565b50505050565b6000610f87826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610fec9092919063ffffffff16565b9050600081511115610fe75780806020019051810190610fa79190611265565b610fe6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdd906116b7565b60405180910390fd5b5b505050565b6060610ffb8484600085611004565b90509392505050565b606082471015611049576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611040906115f7565b60405180910390fd5b61105285611118565b611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108890611677565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110ba91906114cd565b60006040518083038185875af1925050503d80600081146110f7576040519150601f19603f3d011682016040523d82523d6000602084013e6110fc565b606091505b509150915061110c82828661113b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561114b5782905061119b565b60008351111561115e5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111929190611595565b60405180910390fd5b9392505050565b6000813590506111b1816119e0565b92915050565b6000813590506111c6816119f7565b92915050565b6000815190506111db81611a0e565b92915050565b6000813590506111f081611a25565b92915050565b60008151905061120581611a25565b92915050565b600060208284031215611221576112206117e7565b5b600061122f848285016111a2565b91505092915050565b60006020828403121561124e5761124d6117e7565b5b600061125c848285016111b7565b91505092915050565b60006020828403121561127b5761127a6117e7565b5b6000611289848285016111cc565b91505092915050565b6000602082840312156112a8576112a76117e7565b5b60006112b6848285016111e1565b91505092915050565b6000602082840312156112d5576112d46117e7565b5b60006112e3848285016111f6565b91505092915050565b6112f581611724565b82525050565b61130481611748565b82525050565b6000611315826116f2565b61131f8185611708565b935061132f8185602086016117b4565b80840191505092915050565b6113448161177e565b82525050565b6000611355826116fd565b61135f8185611713565b935061136f8185602086016117b4565b611378816117ec565b840191505092915050565b6000611390602683611713565b915061139b826117fd565b604082019050919050565b60006113b3600e83611713565b91506113be8261184c565b602082019050919050565b60006113d6602683611713565b91506113e182611875565b604082019050919050565b60006113f9602083611713565b9150611404826118c4565b602082019050919050565b600061141c601783611713565b9150611427826118ed565b602082019050919050565b600061143f601183611713565b915061144a82611916565b602082019050919050565b6000611462601d83611713565b915061146d8261193f565b602082019050919050565b6000611485601a83611713565b915061149082611968565b602082019050919050565b60006114a8602a83611713565b91506114b382611991565b604082019050919050565b6114c781611774565b82525050565b60006114d9828461130a565b915081905092915050565b60006020820190506114f960008301846112ec565b92915050565b600060608201905061151460008301866112ec565b61152160208301856112ec565b61152e60408301846114be565b949350505050565b600060408201905061154b60008301856112ec565b61155860208301846114be565b9392505050565b600060208201905061157460008301846112fb565b92915050565b600060208201905061158f600083018461133b565b92915050565b600060208201905081810360008301526115af818461134a565b905092915050565b600060208201905081810360008301526115d081611383565b9050919050565b600060208201905081810360008301526115f0816113a6565b9050919050565b60006020820190508181036000830152611610816113c9565b9050919050565b60006020820190508181036000830152611630816113ec565b9050919050565b600060208201905081810360008301526116508161140f565b9050919050565b6000602082019050818103600083015261167081611432565b9050919050565b6000602082019050818103600083015261169081611455565b9050919050565b600060208201905081810360008301526116b081611478565b9050919050565b600060208201905081810360008301526116d08161149b565b9050919050565b60006020820190506116ec60008301846114be565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061172f82611754565b9050919050565b600061174182611754565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061178982611790565b9050919050565b600061179b826117a2565b9050919050565b60006117ad82611754565b9050919050565b60005b838110156117d25780820151818401526020810190506117b7565b838111156117e1576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53616c652068617320656e646564000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53616c65206861736e2774207374617274656420796574000000000000000000600082015250565b7f53616c65206861736e277420656e646564000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4e6f7420656e6f75676820746f6b656e20746f2072657475726e000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6119e981611724565b81146119f457600080fd5b50565b611a0081611736565b8114611a0b57600080fd5b50565b611a1781611748565b8114611a2257600080fd5b50565b611a2e81611774565b8114611a3957600080fd5b5056fea2646970667358221220e23b9dc5ac899499218e68db67fa981d0dae4dfc58bdb1cd8793b0063f8421b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8392FE31 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC10B9358 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC10B9358 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xDE2D583A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xEFEF39A1 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8392FE31 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xAB0BCC41 EQ PUSH2 0x296 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x61778592 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x61778592 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x617FBA04 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x6F9C6149 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x200 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x24076451 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x295E4EDF EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x157A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0xB6F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x448 PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CE PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x666 DUP2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x5B2 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x764 DUP2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x6B0 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E1 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7FF PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x867 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x885 PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 PUSH1 0x0 PUSH2 0xDD8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C7 CALLER PUSH2 0x97D PUSH2 0x9D9 JUMP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D4 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA20 PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA3E PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4F CALLER PUSH2 0xC05 PUSH2 0x9D9 JUMP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC5A PUSH2 0xD4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC78 PUSH2 0x9D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC5 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD35 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD47 DUP2 PUSH2 0xDD8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD3 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD71 SWAP3 SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF1F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEBD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xFE7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDD SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFFB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1049 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1040 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1052 DUP6 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1088 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x10BA SWAP2 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x110C DUP3 DUP3 DUP7 PUSH2 0x113B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x114B JUMPI DUP3 SWAP1 POP PUSH2 0x119B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x115E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B1 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11C6 DUP2 PUSH2 0x19F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11DB DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F0 DUP2 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1205 DUP2 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1221 JUMPI PUSH2 0x1220 PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122F DUP5 DUP3 DUP6 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124E JUMPI PUSH2 0x124D PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x125C DUP5 DUP3 DUP6 ADD PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127A PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1289 DUP5 DUP3 DUP6 ADD PUSH2 0x11CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B6 DUP5 DUP3 DUP6 ADD PUSH2 0x11E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E3 DUP5 DUP3 DUP6 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F5 DUP2 PUSH2 0x1724 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1304 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1315 DUP3 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x131F DUP2 DUP6 PUSH2 0x1708 JUMP JUMPDEST SWAP4 POP PUSH2 0x132F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1344 DUP2 PUSH2 0x177E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x135F DUP2 DUP6 PUSH2 0x1713 JUMP JUMPDEST SWAP4 POP PUSH2 0x136F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x1378 DUP2 PUSH2 0x17EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1390 PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x139B DUP3 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B3 PUSH1 0xE DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x13BE DUP3 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D6 PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E1 DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F9 PUSH1 0x20 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP3 PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141C PUSH1 0x17 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1427 DUP3 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F PUSH1 0x11 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x144A DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1462 PUSH1 0x1D DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x146D DUP3 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1485 PUSH1 0x1A DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1490 DUP3 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A8 PUSH1 0x2A DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B3 DUP3 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C7 DUP2 PUSH2 0x1774 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D9 DUP3 DUP5 PUSH2 0x130A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1514 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1521 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x152E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x154B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1574 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x158F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AF DUP2 DUP5 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D0 DUP2 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F0 DUP2 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1610 DUP2 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1630 DUP2 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1650 DUP2 PUSH2 0x140F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1670 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1690 DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B0 DUP2 PUSH2 0x1478 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D0 DUP2 PUSH2 0x149B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172F DUP3 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1741 DUP3 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1789 DUP3 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179B DUP3 PUSH2 0x17A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AD DUP3 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C652068617320656E646564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E2774207374617274656420796574000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E277420656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E20746F2072657475726E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x19E9 DUP2 PUSH2 0x1724 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A17 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x1774 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 EXTCODESIZE SWAP14 0xC5 0xAC DUP10 SWAP5 SWAP10 0x21 DUP15 PUSH9 0xDB67FA981D0DAE4DFC PC 0xBD 0xB1 0xCD DUP8 SWAP4 0xB0 MOD EXTCODEHASH DUP5 0x21 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:4077:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1064:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4071:123;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3217:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;399:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1275:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4198:115;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;2381:830:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;983:77;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;886:91:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1182:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:338;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1398:977;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1064:112:5;1120:7;1142:13;;;;;;;;;;;:23;;;1166:3;1142:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1135:35;;1064:112;;;:::o;4071:123::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4168:20:5::1;4155:10;:33;;;;4071:123:::0;:::o;3217:279::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3313:8:5::1;;3297:15;:24;3289:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3351:65;3378:3;3383:13;;;;;;;;;;;:23;;;3407:7;:5;:7::i;:::-;3383:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3351:13;;;;;;;;;;;:26;;;;:65;;;;;:::i;:::-;3425;3452:3;3457:13;;;;;;;;;;;:23;;;3481:7;:5;:7::i;:::-;3457:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3425:13;;;;;;;;;;;:26;;;;:65;;;;;:::i;:::-;3217:279:::0;:::o;399:27::-;;;;;;;;;;;;;:::o;1275:117::-;1340:7;1362:6;:16;1369:8;1362:16;;;;;;;;;;;;;;;:24;;;1355:31;;1275:117;;;:::o;4198:115::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4289:18:5::1;4278:8;:29;;;;4198:115:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2381:830:5:-;2458:10;;2441:15;:27;;2433:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2529:8;;2512:15;:25;;2504:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2812:59;2843:10;2854:7;:5;:7::i;:::-;2863;2812:13;;;;;;;;;;;:30;;;;:59;;;;;;:::i;:::-;2381:830;:::o;983:77::-;1023:7;1047;:5;:7::i;:::-;1040:14;;983:77;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;886:91:5:-;936:7;961:10;;954:17;;886:91;:::o;1182:87::-;1230:7;1255:8;;1248:15;;1182:87;:::o;3727:338::-;3808:4;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3820:17:5::1;3840:6;:22;3847:14;3840:22;;;;;;;;;;;;;;;:30;;;3820:50;;3908:9;3885:21;:32;;3877:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4007:14;:23;;:34;4031:9;4007:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;4055:4;4048:11;;;3727:338:::0;;;:::o;1398:977::-;1473:10;;1456:15;:27;;1448:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1544:8;;1527:15;:25;;1519:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1633:59;1664:10;1675:7;:5;:7::i;:::-;1684;1633:13;;;;;;;;;;;:30;;;;:59;;;;;;:::i;:::-;1398:977;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;701:205:2:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;912:241:2:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3861:223:3:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;152:155;;;;:::o;313:137::-;367:5;398:6;392:13;383:22;;414:30;438:5;414:30;:::i;:::-;313:137;;;;:::o;456:139::-;502:5;540:6;527:20;518:29;;556:33;583:5;556:33;:::i;:::-;456:139;;;;:::o;601:143::-;658:5;689:6;683:13;674:22;;705:33;732:5;705:33;:::i;:::-;601:143;;;;:::o;750:329::-;809:6;858:2;846:9;837:7;833:23;829:32;826:119;;;864:79;;:::i;:::-;826:119;984:1;1009:53;1054:7;1045:6;1034:9;1030:22;1009:53;:::i;:::-;999:63;;955:117;750:329;;;;:::o;1085:345::-;1152:6;1201:2;1189:9;1180:7;1176:23;1172:32;1169:119;;;1207:79;;:::i;:::-;1169:119;1327:1;1352:61;1405:7;1396:6;1385:9;1381:22;1352:61;:::i;:::-;1342:71;;1298:125;1085:345;;;;:::o;1436:::-;1503:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:119;;;1558:79;;:::i;:::-;1520:119;1678:1;1703:61;1756:7;1747:6;1736:9;1732:22;1703:61;:::i;:::-;1693:71;;1649:125;1436:345;;;;:::o;1787:329::-;1846:6;1895:2;1883:9;1874:7;1870:23;1866:32;1863:119;;;1901:79;;:::i;:::-;1863:119;2021:1;2046:53;2091:7;2082:6;2071:9;2067:22;2046:53;:::i;:::-;2036:63;;1992:117;1787:329;;;;:::o;2122:351::-;2192:6;2241:2;2229:9;2220:7;2216:23;2212:32;2209:119;;;2247:79;;:::i;:::-;2209:119;2367:1;2392:64;2448:7;2439:6;2428:9;2424:22;2392:64;:::i;:::-;2382:74;;2338:128;2122:351;;;;:::o;2479:118::-;2566:24;2584:5;2566:24;:::i;:::-;2561:3;2554:37;2479:118;;:::o;2603:109::-;2684:21;2699:5;2684:21;:::i;:::-;2679:3;2672:34;2603:109;;:::o;2718:373::-;2822:3;2850:38;2882:5;2850:38;:::i;:::-;2904:88;2985:6;2980:3;2904:88;:::i;:::-;2897:95;;3001:52;3046:6;3041:3;3034:4;3027:5;3023:16;3001:52;:::i;:::-;3078:6;3073:3;3069:16;3062:23;;2826:265;2718:373;;;;:::o;3097:159::-;3198:51;3243:5;3198:51;:::i;:::-;3193:3;3186:64;3097:159;;:::o;3262:364::-;3350:3;3378:39;3411:5;3378:39;:::i;:::-;3433:71;3497:6;3492:3;3433:71;:::i;:::-;3426:78;;3513:52;3558:6;3553:3;3546:4;3539:5;3535:16;3513:52;:::i;:::-;3590:29;3612:6;3590:29;:::i;:::-;3585:3;3581:39;3574:46;;3354:272;3262:364;;;;:::o;3632:366::-;3774:3;3795:67;3859:2;3854:3;3795:67;:::i;:::-;3788:74;;3871:93;3960:3;3871:93;:::i;:::-;3989:2;3984:3;3980:12;3973:19;;3632:366;;;:::o;4004:::-;4146:3;4167:67;4231:2;4226:3;4167:67;:::i;:::-;4160:74;;4243:93;4332:3;4243:93;:::i;:::-;4361:2;4356:3;4352:12;4345:19;;4004:366;;;:::o;4376:::-;4518:3;4539:67;4603:2;4598:3;4539:67;:::i;:::-;4532:74;;4615:93;4704:3;4615:93;:::i;:::-;4733:2;4728:3;4724:12;4717:19;;4376:366;;;:::o;4748:::-;4890:3;4911:67;4975:2;4970:3;4911:67;:::i;:::-;4904:74;;4987:93;5076:3;4987:93;:::i;:::-;5105:2;5100:3;5096:12;5089:19;;4748:366;;;:::o;5120:::-;5262:3;5283:67;5347:2;5342:3;5283:67;:::i;:::-;5276:74;;5359:93;5448:3;5359:93;:::i;:::-;5477:2;5472:3;5468:12;5461:19;;5120:366;;;:::o;5492:::-;5634:3;5655:67;5719:2;5714:3;5655:67;:::i;:::-;5648:74;;5731:93;5820:3;5731:93;:::i;:::-;5849:2;5844:3;5840:12;5833:19;;5492:366;;;:::o;5864:::-;6006:3;6027:67;6091:2;6086:3;6027:67;:::i;:::-;6020:74;;6103:93;6192:3;6103:93;:::i;:::-;6221:2;6216:3;6212:12;6205:19;;5864:366;;;:::o;6236:::-;6378:3;6399:67;6463:2;6458:3;6399:67;:::i;:::-;6392:74;;6475:93;6564:3;6475:93;:::i;:::-;6593:2;6588:3;6584:12;6577:19;;6236:366;;;:::o;6608:::-;6750:3;6771:67;6835:2;6830:3;6771:67;:::i;:::-;6764:74;;6847:93;6936:3;6847:93;:::i;:::-;6965:2;6960:3;6956:12;6949:19;;6608:366;;;:::o;6980:118::-;7067:24;7085:5;7067:24;:::i;:::-;7062:3;7055:37;6980:118;;:::o;7104:271::-;7234:3;7256:93;7345:3;7336:6;7256:93;:::i;:::-;7249:100;;7366:3;7359:10;;7104:271;;;;:::o;7381:222::-;7474:4;7512:2;7501:9;7497:18;7489:26;;7525:71;7593:1;7582:9;7578:17;7569:6;7525:71;:::i;:::-;7381:222;;;;:::o;7609:442::-;7758:4;7796:2;7785:9;7781:18;7773:26;;7809:71;7877:1;7866:9;7862:17;7853:6;7809:71;:::i;:::-;7890:72;7958:2;7947:9;7943:18;7934:6;7890:72;:::i;:::-;7972;8040:2;8029:9;8025:18;8016:6;7972:72;:::i;:::-;7609:442;;;;;;:::o;8057:332::-;8178:4;8216:2;8205:9;8201:18;8193:26;;8229:71;8297:1;8286:9;8282:17;8273:6;8229:71;:::i;:::-;8310:72;8378:2;8367:9;8363:18;8354:6;8310:72;:::i;:::-;8057:332;;;;;:::o;8395:210::-;8482:4;8520:2;8509:9;8505:18;8497:26;;8533:65;8595:1;8584:9;8580:17;8571:6;8533:65;:::i;:::-;8395:210;;;;:::o;8611:250::-;8718:4;8756:2;8745:9;8741:18;8733:26;;8769:85;8851:1;8840:9;8836:17;8827:6;8769:85;:::i;:::-;8611:250;;;;:::o;8867:313::-;8980:4;9018:2;9007:9;9003:18;8995:26;;9067:9;9061:4;9057:20;9053:1;9042:9;9038:17;9031:47;9095:78;9168:4;9159:6;9095:78;:::i;:::-;9087:86;;8867:313;;;;:::o;9186:419::-;9352:4;9390:2;9379:9;9375:18;9367:26;;9439:9;9433:4;9429:20;9425:1;9414:9;9410:17;9403:47;9467:131;9593:4;9467:131;:::i;:::-;9459:139;;9186:419;;;:::o;9611:::-;9777:4;9815:2;9804:9;9800:18;9792:26;;9864:9;9858:4;9854:20;9850:1;9839:9;9835:17;9828:47;9892:131;10018:4;9892:131;:::i;:::-;9884:139;;9611:419;;;:::o;10036:::-;10202:4;10240:2;10229:9;10225:18;10217:26;;10289:9;10283:4;10279:20;10275:1;10264:9;10260:17;10253:47;10317:131;10443:4;10317:131;:::i;:::-;10309:139;;10036:419;;;:::o;10461:::-;10627:4;10665:2;10654:9;10650:18;10642:26;;10714:9;10708:4;10704:20;10700:1;10689:9;10685:17;10678:47;10742:131;10868:4;10742:131;:::i;:::-;10734:139;;10461:419;;;:::o;10886:::-;11052:4;11090:2;11079:9;11075:18;11067:26;;11139:9;11133:4;11129:20;11125:1;11114:9;11110:17;11103:47;11167:131;11293:4;11167:131;:::i;:::-;11159:139;;10886:419;;;:::o;11311:::-;11477:4;11515:2;11504:9;11500:18;11492:26;;11564:9;11558:4;11554:20;11550:1;11539:9;11535:17;11528:47;11592:131;11718:4;11592:131;:::i;:::-;11584:139;;11311:419;;;:::o;11736:::-;11902:4;11940:2;11929:9;11925:18;11917:26;;11989:9;11983:4;11979:20;11975:1;11964:9;11960:17;11953:47;12017:131;12143:4;12017:131;:::i;:::-;12009:139;;11736:419;;;:::o;12161:::-;12327:4;12365:2;12354:9;12350:18;12342:26;;12414:9;12408:4;12404:20;12400:1;12389:9;12385:17;12378:47;12442:131;12568:4;12442:131;:::i;:::-;12434:139;;12161:419;;;:::o;12586:::-;12752:4;12790:2;12779:9;12775:18;12767:26;;12839:9;12833:4;12829:20;12825:1;12814:9;12810:17;12803:47;12867:131;12993:4;12867:131;:::i;:::-;12859:139;;12586:419;;;:::o;13011:222::-;13104:4;13142:2;13131:9;13127:18;13119:26;;13155:71;13223:1;13212:9;13208:17;13199:6;13155:71;:::i;:::-;13011:222;;;;:::o;13320:98::-;13371:6;13405:5;13399:12;13389:22;;13320:98;;;:::o;13424:99::-;13476:6;13510:5;13504:12;13494:22;;13424:99;;;:::o;13529:147::-;13630:11;13667:3;13652:18;;13529:147;;;;:::o;13682:169::-;13766:11;13800:6;13795:3;13788:19;13840:4;13835:3;13831:14;13816:29;;13682:169;;;;:::o;13857:96::-;13894:7;13923:24;13941:5;13923:24;:::i;:::-;13912:35;;13857:96;;;:::o;13959:104::-;14004:7;14033:24;14051:5;14033:24;:::i;:::-;14022:35;;13959:104;;;:::o;14069:90::-;14103:7;14146:5;14139:13;14132:21;14121:32;;14069:90;;;:::o;14165:126::-;14202:7;14242:42;14235:5;14231:54;14220:65;;14165:126;;;:::o;14297:77::-;14334:7;14363:5;14352:16;;14297:77;;;:::o;14380:140::-;14444:9;14477:37;14508:5;14477:37;:::i;:::-;14464:50;;14380:140;;;:::o;14526:126::-;14576:9;14609:37;14640:5;14609:37;:::i;:::-;14596:50;;14526:126;;;:::o;14658:113::-;14708:9;14741:24;14759:5;14741:24;:::i;:::-;14728:37;;14658:113;;;:::o;14777:307::-;14845:1;14855:113;14869:6;14866:1;14863:13;14855:113;;;14954:1;14949:3;14945:11;14939:18;14935:1;14930:3;14926:11;14919:39;14891:2;14888:1;14884:10;14879:15;;14855:113;;;14986:6;14983:1;14980:13;14977:101;;;15066:1;15057:6;15052:3;15048:16;15041:27;14977:101;14826:258;14777:307;;;:::o;15213:117::-;15322:1;15319;15312:12;15336:102;15377:6;15428:2;15424:7;15419:2;15412:5;15408:14;15404:28;15394:38;;15336:102;;;:::o;15444:225::-;15584:34;15580:1;15572:6;15568:14;15561:58;15653:8;15648:2;15640:6;15636:15;15629:33;15444:225;:::o;15675:164::-;15815:16;15811:1;15803:6;15799:14;15792:40;15675:164;:::o;15845:225::-;15985:34;15981:1;15973:6;15969:14;15962:58;16054:8;16049:2;16041:6;16037:15;16030:33;15845:225;:::o;16076:182::-;16216:34;16212:1;16204:6;16200:14;16193:58;16076:182;:::o;16264:173::-;16404:25;16400:1;16392:6;16388:14;16381:49;16264:173;:::o;16443:167::-;16583:19;16579:1;16571:6;16567:14;16560:43;16443:167;:::o;16616:179::-;16756:31;16752:1;16744:6;16740:14;16733:55;16616:179;:::o;16801:176::-;16941:28;16937:1;16929:6;16925:14;16918:52;16801:176;:::o;16983:229::-;17123:34;17119:1;17111:6;17107:14;17100:58;17192:12;17187:2;17179:6;17175:15;17168:37;16983:229;:::o;17218:122::-;17291:24;17309:5;17291:24;:::i;:::-;17284:5;17281:35;17271:63;;17330:1;17327;17320:12;17271:63;17218:122;:::o;17346:138::-;17427:32;17453:5;17427:32;:::i;:::-;17420:5;17417:43;17407:71;;17474:1;17471;17464:12;17407:71;17346:138;:::o;17490:116::-;17560:21;17575:5;17560:21;:::i;:::-;17553:5;17550:32;17540:60;;17596:1;17593;17586:12;17540:60;17490:116;:::o;17612:122::-;17685:24;17703:5;17685:24;:::i;:::-;17678:5;17675:35;17665:63;;17724:1;17721;17714:12;17665:63;17612:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1354000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Return(address)": "infinite",
								"_usdcInstance()": "2623",
								"bala(address)": "infinite",
								"getOwner()": "2602",
								"getRecord(address)": "2892",
								"owner()": "2589",
								"purchase(uint256)": "infinite",
								"purchases(uint256)": "infinite",
								"renounceOwnership()": "30463",
								"saleEnd()": "2459",
								"saleStart()": "2526",
								"transferOwnership(address)": "30811",
								"updateSaleEndTime(uint256)": "24827",
								"updateSaleStartTime(uint256)": "24806",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 4318,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 590,
									"end": 878,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 696,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 715,
									"end": 728,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 696,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 696,
									"end": 729,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 696,
									"end": 729,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 696,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 696,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 759,
									"end": 771,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 736,
									"end": 749,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 736,
									"end": 772,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 736,
									"end": 772,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 736,
									"end": 772,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 736,
									"end": 772,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 802,
									"end": 815,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 779,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 779,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 779,
									"end": 816,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 779,
									"end": 816,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 779,
									"end": 816,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 779,
									"end": 816,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 779,
									"end": 816,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 836,
									"end": 846,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 823,
									"end": 833,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 823,
									"end": 846,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 823,
									"end": 846,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 823,
									"end": 846,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 823,
									"end": 846,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 864,
									"end": 872,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 853,
									"end": 861,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 853,
									"end": 872,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 853,
									"end": 872,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 853,
									"end": 872,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 853,
									"end": 872,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 878,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 315,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 156,
									"end": 315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 221,
									"end": 226,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 258,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 246,
									"end": 259,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 237,
									"end": 259,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 237,
									"end": 259,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 268,
									"end": 309,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 303,
									"end": 308,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 268,
									"end": 309,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 268,
									"end": 309,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 268,
									"end": 309,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 268,
									"end": 309,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 156,
									"end": 315,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 156,
									"end": 315,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 156,
									"end": 315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 156,
									"end": 315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 156,
									"end": 315,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 321,
									"end": 464,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 321,
									"end": 464,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 378,
									"end": 383,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 415,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 403,
									"end": 416,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 394,
									"end": 416,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 394,
									"end": 416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 425,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 452,
									"end": 457,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 425,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 425,
									"end": 458,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 425,
									"end": 458,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 425,
									"end": 458,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 321,
									"end": 464,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 321,
									"end": 464,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 321,
									"end": 464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 321,
									"end": 464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 321,
									"end": 464,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 575,
									"end": 581,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 583,
									"end": 589,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 591,
									"end": 597,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 605,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 648,
									"end": 651,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 636,
									"end": 645,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 627,
									"end": 634,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 623,
									"end": 646,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 619,
									"end": 652,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 616,
									"end": 736,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 616,
									"end": 736,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 616,
									"end": 736,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 655,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 655,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 655,
									"end": 734,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 655,
									"end": 734,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 655,
									"end": 734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 616,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 616,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 775,
									"end": 776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 864,
									"end": 871,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 855,
									"end": 861,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 844,
									"end": 853,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 840,
									"end": 862,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 800,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 800,
									"end": 872,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 872,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 872,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 790,
									"end": 872,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 790,
									"end": 872,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 746,
									"end": 882,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 921,
									"end": 923,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 947,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1003,
									"end": 1010,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 983,
									"end": 992,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 947,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 947,
									"end": 1011,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 947,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 947,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 937,
									"end": 1011,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 937,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1021,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1142,
									"end": 1149,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1133,
									"end": 1139,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1131,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1140,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1031,
									"end": 1160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1199,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1225,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1281,
									"end": 1288,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1278,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1270,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1279,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1225,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1225,
									"end": 1289,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1225,
									"end": 1289,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1225,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1289,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1289,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1170,
									"end": 1299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 470,
									"end": 1306,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1393,
									"end": 1489,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1393,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1393,
									"end": 1489,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1393,
									"end": 1489,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1393,
									"end": 1489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1393,
									"end": 1489,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1495,
									"end": 1599,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1495,
									"end": 1599,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1547,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1569,
									"end": 1593,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1587,
									"end": 1592,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1593,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1569,
									"end": 1593,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1569,
									"end": 1593,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1569,
									"end": 1593,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1593,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1593,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1599,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1599,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1599,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1599,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1605,
									"end": 1731,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1605,
									"end": 1731,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1649,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1682,
									"end": 1724,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1725,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1725,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1731,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1731,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1731,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1731,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1737,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1737,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1774,
									"end": 1781,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1803,
									"end": 1808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1792,
									"end": 1808,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1792,
									"end": 1808,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1814,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1814,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1943,
									"end": 2060,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1943,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2049,
									"end": 2050,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2054,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2188,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2066,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2139,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2139,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2139,
									"end": 2163,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2139,
									"end": 2163,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2139,
									"end": 2163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2137,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2129,
									"end": 2164,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2168,
									"end": 2180,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2188,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2188,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2194,
									"end": 2332,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2194,
									"end": 2332,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2275,
									"end": 2307,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2301,
									"end": 2306,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2275,
									"end": 2307,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2275,
									"end": 2307,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2275,
									"end": 2307,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2275,
									"end": 2307,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2268,
									"end": 2273,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2265,
									"end": 2308,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2255,
									"end": 2326,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2322,
									"end": 2323,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2319,
									"end": 2320,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2312,
									"end": 2324,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2326,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2255,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2332,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2332,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2338,
									"end": 2460,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2338,
									"end": 2460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2411,
									"end": 2435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2429,
									"end": 2434,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2411,
									"end": 2435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2411,
									"end": 2435,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2411,
									"end": 2435,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2411,
									"end": 2435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2404,
									"end": 2409,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2401,
									"end": 2436,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2391,
									"end": 2454,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2391,
									"end": 2454,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2450,
									"end": 2451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2447,
									"end": 2448,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2452,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2391,
									"end": 2454,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2391,
									"end": 2454,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2460,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 4318,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e23b9dc5ac899499218e68db67fa981d0dae4dfc58bdb1cd8793b0063f8421b264736f6c63430008070033",
									".code": [
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "8392FE31"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "C10B9358"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "C10B9358"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "DE2D583A"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "EFEF39A1"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "8392FE31"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "893D20E8"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "AB0BCC41"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "61778592"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "61778592"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "617FBA04"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "6F9C6149"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "24076451"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "295E4EDF"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "51CFF8D9"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 4318,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1166,
											"end": 1169,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1176,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4165,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4155,
											"end": 4188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4188,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4194,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3313,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3313,
											"end": 3321,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3321,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3289,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3396,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3406,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3406,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3406,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3407,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3351,
											"end": 3377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3351,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3351,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3452,
											"end": 3455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3480,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3480,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3480,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3451,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3451,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3425,
											"end": 3451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3425,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3496,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 399,
											"end": 426,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 399,
											"end": 426,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1377,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1392,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4286,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4313,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2468,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2458,
											"end": 2468,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2456,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2468,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2468,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2433,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2537,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2529,
											"end": 2537,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2527,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2854,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2812,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 3211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1047,
											"end": 1054,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1054,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1047,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1060,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 971,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 971,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 954,
											"end": 971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 886,
											"end": 977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1269,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3870,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3906,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3877,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4007,
											"end": 4030,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4065,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1483,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1473,
											"end": 1483,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1483,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1483,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1448,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1552,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1544,
											"end": 1552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1542,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1519,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1664,
											"end": 1674,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1675,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1675,
											"end": 1682,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1675,
											"end": 1682,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1675,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1646,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1633,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 2375,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 383,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 383,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 438,
											"end": 443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 456,
											"end": 595,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 456,
											"end": 595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 502,
											"end": 507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 527,
											"end": 547,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 518,
											"end": 547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 518,
											"end": 547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 556,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 556,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 556,
											"end": 589,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 556,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 595,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 456,
											"end": 595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 456,
											"end": 595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 595,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 744,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 601,
											"end": 744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 658,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 683,
											"end": 696,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 674,
											"end": 696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 674,
											"end": 696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 705,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 732,
											"end": 737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 705,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 705,
											"end": 738,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 705,
											"end": 738,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 705,
											"end": 738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 601,
											"end": 744,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 601,
											"end": 744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 601,
											"end": 744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 601,
											"end": 744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 601,
											"end": 744,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 809,
											"end": 815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 837,
											"end": 844,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 826,
											"end": 945,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 826,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 826,
											"end": 945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 864,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 826,
											"end": 945,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 826,
											"end": 945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 984,
											"end": 985,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1054,
											"end": 1061,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1430,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1085,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1203,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1187,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1199,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1172,
											"end": 1204,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1288,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1169,
											"end": 1288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1207,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1207,
											"end": 1286,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1286,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1207,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1288,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1169,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1405,
											"end": 1412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1394,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1352,
											"end": 1413,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1413,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1352,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1430,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1430,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1436,
											"end": 1781,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1436,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1555,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1639,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1520,
											"end": 1639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1558,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1558,
											"end": 1637,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1558,
											"end": 1637,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1558,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1639,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1520,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 1756,
											"end": 1763,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1745,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1781,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1781,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1787,
											"end": 2116,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1787,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1881,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1893,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1898,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1982,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1863,
											"end": 1982,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 1901,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1901,
											"end": 1980,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1901,
											"end": 1980,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 1901,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1863,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2080,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 2116,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 2116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 2116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 2116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 2116,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2122,
											"end": 2473,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2122,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2244,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2328,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2209,
											"end": 2328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2247,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2247,
											"end": 2326,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2247,
											"end": 2326,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2247,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2328,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2209,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2392,
											"end": 2456,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2456,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2392,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2473,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2473,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2479,
											"end": 2597,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2479,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2597,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2603,
											"end": 2712,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2603,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2699,
											"end": 2704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2712,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2718,
											"end": 3091,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2718,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2850,
											"end": 2888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2850,
											"end": 2888,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2850,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 2904,
											"end": 2992,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2992,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2904,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3044,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3038,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3032,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3001,
											"end": 3053,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3053,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3001,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3076,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 3091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 3091,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 3091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 3091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 3091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 3091,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3097,
											"end": 3256,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3097,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 3198,
											"end": 3249,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3198,
											"end": 3249,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3198,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3256,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3262,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3262,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3504,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3590,
											"end": 3619,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3590,
											"end": 3619,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 3590,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3588,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3626,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3632,
											"end": 3998,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3632,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3854,
											"end": 3857,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3795,
											"end": 3862,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3795,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3795,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 3871,
											"end": 3964,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3871,
											"end": 3964,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3871,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 3987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 3992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3998,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4004,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4004,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 4231,
											"end": 4233,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4226,
											"end": 4229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4243,
											"end": 4336,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4243,
											"end": 4336,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4243,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4370,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4376,
											"end": 4742,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4376,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4598,
											"end": 4601,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4539,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4539,
											"end": 4606,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4539,
											"end": 4606,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 4539,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4615,
											"end": 4708,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4615,
											"end": 4708,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4615,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4724,
											"end": 4736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4742,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4748,
											"end": 5114,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4748,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4975,
											"end": 4977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4911,
											"end": 4978,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4911,
											"end": 4978,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4911,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 4987,
											"end": 5080,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4987,
											"end": 5080,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4987,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5105,
											"end": 5107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5100,
											"end": 5103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5114,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5114,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5347,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5477,
											"end": 5479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5492,
											"end": 5858,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 5492,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5714,
											"end": 5717,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 5731,
											"end": 5824,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5731,
											"end": 5824,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 5731,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5844,
											"end": 5847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5840,
											"end": 5852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 5852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 5852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5858,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 6091,
											"end": 6093,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 6086,
											"end": 6089,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 6192,
											"end": 6195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6221,
											"end": 6223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6216,
											"end": 6219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6205,
											"end": 6224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6205,
											"end": 6224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6236,
											"end": 6602,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 6236,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 6458,
											"end": 6461,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6399,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6399,
											"end": 6466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6399,
											"end": 6466,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6399,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6392,
											"end": 6466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6392,
											"end": 6466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 6564,
											"end": 6567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 6475,
											"end": 6568,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6475,
											"end": 6568,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 6475,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 6595,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6584,
											"end": 6596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6602,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 6830,
											"end": 6833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6764,
											"end": 6838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6764,
											"end": 6838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 6936,
											"end": 6939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6967,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6980,
											"end": 7098,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6980,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 7085,
											"end": 7090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 7067,
											"end": 7091,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7067,
											"end": 7091,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 7067,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7065,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7098,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7104,
											"end": 7375,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7104,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 7345,
											"end": 7348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7359,
											"end": 7369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7359,
											"end": 7369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7375,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7375,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7381,
											"end": 7603,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7381,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7514,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7591,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7525,
											"end": 7596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7525,
											"end": 7596,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 7525,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7603,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7603,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7796,
											"end": 7798,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7785,
											"end": 7794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 7877,
											"end": 7878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7862,
											"end": 7879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7859,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7809,
											"end": 7880,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7809,
											"end": 7880,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 7809,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7956,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7890,
											"end": 7962,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7890,
											"end": 7962,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 7890,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7972,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 8040,
											"end": 8042,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8038,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8022,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7972,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 7972,
											"end": 8044,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7972,
											"end": 8044,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 7972,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8051,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8178,
											"end": 8182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8205,
											"end": 8214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 8219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 8219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8286,
											"end": 8295,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8279,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8229,
											"end": 8300,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8229,
											"end": 8300,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 8229,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 8378,
											"end": 8380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8367,
											"end": 8376,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8354,
											"end": 8360,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8389,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8395,
											"end": 8605,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 8395,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8522,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8505,
											"end": 8523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 8595,
											"end": 8596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8533,
											"end": 8598,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8533,
											"end": 8598,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 8533,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8605,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8611,
											"end": 8861,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 8611,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8745,
											"end": 8754,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8851,
											"end": 8852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8840,
											"end": 8849,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8827,
											"end": 8833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8769,
											"end": 8854,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8769,
											"end": 8854,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8769,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8861,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8861,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8867,
											"end": 9180,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8867,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9018,
											"end": 9020,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9003,
											"end": 9021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9065,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9077,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9053,
											"end": 9054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9042,
											"end": 9051,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9038,
											"end": 9055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9095,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9168,
											"end": 9172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9165,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9095,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9095,
											"end": 9173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9095,
											"end": 9173,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9095,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 9180,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 9180,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 9180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 9180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 9180,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9186,
											"end": 9605,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 9186,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9390,
											"end": 9392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9379,
											"end": 9388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9433,
											"end": 9437,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9429,
											"end": 9449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9410,
											"end": 9427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9403,
											"end": 9450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9593,
											"end": 9597,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 9467,
											"end": 9598,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9467,
											"end": 9598,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9467,
											"end": 9598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9459,
											"end": 9598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9459,
											"end": 9598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9186,
											"end": 9605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9186,
											"end": 9605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9186,
											"end": 9605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9186,
											"end": 9605,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9611,
											"end": 10030,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 9611,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 9874,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9850,
											"end": 9851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9839,
											"end": 9848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9892,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 10018,
											"end": 10022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9892,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 9892,
											"end": 10023,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9892,
											"end": 10023,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 9892,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 10023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 10023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 10030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 10030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 10030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 10030,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10036,
											"end": 10455,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10036,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10202,
											"end": 10206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10242,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10229,
											"end": 10238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10217,
											"end": 10243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10217,
											"end": 10243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10289,
											"end": 10298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10279,
											"end": 10299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10264,
											"end": 10273,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10260,
											"end": 10277,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10317,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 10443,
											"end": 10447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10317,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10317,
											"end": 10448,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10317,
											"end": 10448,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 10317,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10455,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10461,
											"end": 10880,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10461,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10667,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10654,
											"end": 10663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10650,
											"end": 10668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10708,
											"end": 10712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10685,
											"end": 10702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10725,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 10868,
											"end": 10872,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 10742,
											"end": 10873,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10742,
											"end": 10873,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 10742,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10880,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10886,
											"end": 11305,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 10886,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11052,
											"end": 11056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11090,
											"end": 11092,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11075,
											"end": 11093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11139,
											"end": 11148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11133,
											"end": 11137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11129,
											"end": 11149,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11123,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11110,
											"end": 11127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11103,
											"end": 11150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11167,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 11293,
											"end": 11297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11167,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 11167,
											"end": 11298,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11167,
											"end": 11298,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 11167,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 11305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 11305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 11305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 11305,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11311,
											"end": 11730,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 11311,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11515,
											"end": 11517,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11504,
											"end": 11513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11500,
											"end": 11518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11492,
											"end": 11518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11492,
											"end": 11518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11564,
											"end": 11573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11558,
											"end": 11562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11554,
											"end": 11574,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11539,
											"end": 11548,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11535,
											"end": 11552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11528,
											"end": 11575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 11718,
											"end": 11722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 11592,
											"end": 11723,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11592,
											"end": 11723,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 11592,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11584,
											"end": 11723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11584,
											"end": 11723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11730,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11736,
											"end": 12155,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 11736,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11902,
											"end": 11906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 11942,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 11938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11989,
											"end": 11998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 11987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11979,
											"end": 11999,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 11973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11960,
											"end": 11977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11953,
											"end": 12000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12017,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 12143,
											"end": 12147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12017,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 12017,
											"end": 12148,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12017,
											"end": 12148,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 12017,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12009,
											"end": 12148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12009,
											"end": 12148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11736,
											"end": 12155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11736,
											"end": 12155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11736,
											"end": 12155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11736,
											"end": 12155,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12161,
											"end": 12580,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 12161,
											"end": 12580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12327,
											"end": 12331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12367,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12354,
											"end": 12363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12350,
											"end": 12368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12342,
											"end": 12368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12342,
											"end": 12368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12404,
											"end": 12424,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12400,
											"end": 12401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12389,
											"end": 12398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12385,
											"end": 12402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12378,
											"end": 12425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12442,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 12568,
											"end": 12572,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12442,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 12442,
											"end": 12573,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12442,
											"end": 12573,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 12442,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12434,
											"end": 12573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12434,
											"end": 12573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12580,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12586,
											"end": 13005,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 12586,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12752,
											"end": 12756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12790,
											"end": 12792,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12775,
											"end": 12793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12833,
											"end": 12837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12829,
											"end": 12849,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12825,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12814,
											"end": 12823,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12867,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 12993,
											"end": 12997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12867,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 12867,
											"end": 12998,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12867,
											"end": 12998,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 12867,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12859,
											"end": 12998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12859,
											"end": 12998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12586,
											"end": 13005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12586,
											"end": 13005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12586,
											"end": 13005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12586,
											"end": 13005,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13011,
											"end": 13233,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 13011,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13104,
											"end": 13108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13142,
											"end": 13144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13131,
											"end": 13140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13127,
											"end": 13145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13119,
											"end": 13145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13119,
											"end": 13145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13155,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 13223,
											"end": 13224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13212,
											"end": 13221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13199,
											"end": 13205,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13155,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 13155,
											"end": 13226,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13155,
											"end": 13226,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 13155,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13233,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13233,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13320,
											"end": 13418,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 13320,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13371,
											"end": 13377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13405,
											"end": 13410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13399,
											"end": 13411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13389,
											"end": 13411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13389,
											"end": 13411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13320,
											"end": 13418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13320,
											"end": 13418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13320,
											"end": 13418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13320,
											"end": 13418,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13424,
											"end": 13523,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 13424,
											"end": 13523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13476,
											"end": 13482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13510,
											"end": 13515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13504,
											"end": 13516,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13494,
											"end": 13516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13494,
											"end": 13516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13424,
											"end": 13523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13424,
											"end": 13523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13424,
											"end": 13523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13424,
											"end": 13523,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13529,
											"end": 13676,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13529,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 13641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13529,
											"end": 13676,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13529,
											"end": 13676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13529,
											"end": 13676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13529,
											"end": 13676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13529,
											"end": 13676,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13682,
											"end": 13851,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 13682,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13766,
											"end": 13777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13800,
											"end": 13806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13795,
											"end": 13798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13788,
											"end": 13807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13840,
											"end": 13844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13835,
											"end": 13838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13831,
											"end": 13845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13816,
											"end": 13845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13816,
											"end": 13845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13682,
											"end": 13851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13682,
											"end": 13851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13682,
											"end": 13851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13682,
											"end": 13851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13682,
											"end": 13851,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13857,
											"end": 13953,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 13857,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13894,
											"end": 13901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13923,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 13941,
											"end": 13946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13923,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 13923,
											"end": 13947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13923,
											"end": 13947,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 13923,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13857,
											"end": 13953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13857,
											"end": 13953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13857,
											"end": 13953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13857,
											"end": 13953,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13959,
											"end": 14063,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 13959,
											"end": 14063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14004,
											"end": 14011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14033,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 14051,
											"end": 14056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14033,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 14033,
											"end": 14057,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14033,
											"end": 14057,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 14033,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14022,
											"end": 14057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14022,
											"end": 14057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13959,
											"end": 14063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13959,
											"end": 14063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13959,
											"end": 14063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13959,
											"end": 14063,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14069,
											"end": 14159,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 14069,
											"end": 14159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14103,
											"end": 14110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14139,
											"end": 14152,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14132,
											"end": 14153,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14121,
											"end": 14153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14121,
											"end": 14153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14069,
											"end": 14159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14069,
											"end": 14159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14069,
											"end": 14159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14069,
											"end": 14159,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14165,
											"end": 14291,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 14165,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14202,
											"end": 14209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14284,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14235,
											"end": 14240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14231,
											"end": 14285,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14220,
											"end": 14285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14220,
											"end": 14285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14165,
											"end": 14291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14165,
											"end": 14291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14165,
											"end": 14291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14165,
											"end": 14291,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14297,
											"end": 14374,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 14297,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14334,
											"end": 14341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14352,
											"end": 14368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14352,
											"end": 14368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14374,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14380,
											"end": 14520,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 14380,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14444,
											"end": 14453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14477,
											"end": 14514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 14508,
											"end": 14513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14477,
											"end": 14514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 14477,
											"end": 14514,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14477,
											"end": 14514,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 14477,
											"end": 14514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14464,
											"end": 14514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14464,
											"end": 14514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14380,
											"end": 14520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14380,
											"end": 14520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14380,
											"end": 14520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14380,
											"end": 14520,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14526,
											"end": 14652,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 14526,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14640,
											"end": 14645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14609,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 14609,
											"end": 14646,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14609,
											"end": 14646,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14609,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14596,
											"end": 14646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14596,
											"end": 14646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14526,
											"end": 14652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14526,
											"end": 14652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14526,
											"end": 14652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14526,
											"end": 14652,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14658,
											"end": 14771,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 14658,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14708,
											"end": 14717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14741,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 14759,
											"end": 14764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14741,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 14741,
											"end": 14765,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14741,
											"end": 14765,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 14741,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14728,
											"end": 14765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14728,
											"end": 14765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14658,
											"end": 14771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14658,
											"end": 14771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14658,
											"end": 14771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14658,
											"end": 14771,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14777,
											"end": 15084,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 14777,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14845,
											"end": 14846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14869,
											"end": 14875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14866,
											"end": 14867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14863,
											"end": 14876,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14954,
											"end": 14955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14949,
											"end": 14952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14945,
											"end": 14956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14939,
											"end": 14957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14935,
											"end": 14936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14930,
											"end": 14933,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14926,
											"end": 14937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14919,
											"end": 14958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14891,
											"end": 14893,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14888,
											"end": 14889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14884,
											"end": 14894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14879,
											"end": 14894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14879,
											"end": 14894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 14855,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14986,
											"end": 14992,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14983,
											"end": 14984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14980,
											"end": 14993,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14977,
											"end": 15078,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14977,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 14977,
											"end": 15078,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15066,
											"end": 15067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15057,
											"end": 15063,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15048,
											"end": 15064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14977,
											"end": 15078,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 14977,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14826,
											"end": 15084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14777,
											"end": 15084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14777,
											"end": 15084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14777,
											"end": 15084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14777,
											"end": 15084,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15213,
											"end": 15330,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 15213,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15322,
											"end": 15323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15319,
											"end": 15320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15312,
											"end": 15324,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15438,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 15336,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15377,
											"end": 15383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15428,
											"end": 15430,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 15424,
											"end": 15431,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15419,
											"end": 15421,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 15412,
											"end": 15417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15408,
											"end": 15422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15394,
											"end": 15432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15394,
											"end": 15432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15438,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15438,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15444,
											"end": 15669,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 15444,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15584,
											"end": 15618,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15580,
											"end": 15581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15572,
											"end": 15578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15568,
											"end": 15582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15561,
											"end": 15619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15653,
											"end": 15661,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15648,
											"end": 15650,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15640,
											"end": 15646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15636,
											"end": 15651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15629,
											"end": 15662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15444,
											"end": 15669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15444,
											"end": 15669,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15675,
											"end": 15839,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 15675,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15815,
											"end": 15831,
											"name": "PUSH",
											"source": 6,
											"value": "53616C652068617320656E646564000000000000000000000000000000000000"
										},
										{
											"begin": 15811,
											"end": 15812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15799,
											"end": 15813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15792,
											"end": 15832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15675,
											"end": 15839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15675,
											"end": 15839,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15845,
											"end": 16070,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 15845,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15985,
											"end": 16019,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 15981,
											"end": 15982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15973,
											"end": 15979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15969,
											"end": 15983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15962,
											"end": 16020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16054,
											"end": 16062,
											"name": "PUSH",
											"source": 6,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16049,
											"end": 16051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16041,
											"end": 16047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16037,
											"end": 16052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16030,
											"end": 16063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15845,
											"end": 16070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15845,
											"end": 16070,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16076,
											"end": 16258,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 16076,
											"end": 16258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16216,
											"end": 16250,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16212,
											"end": 16213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16204,
											"end": 16210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16200,
											"end": 16214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16193,
											"end": 16251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16076,
											"end": 16258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16076,
											"end": 16258,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16264,
											"end": 16437,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 16264,
											"end": 16437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16404,
											"end": 16429,
											"name": "PUSH",
											"source": 6,
											"value": "53616C65206861736E2774207374617274656420796574000000000000000000"
										},
										{
											"begin": 16400,
											"end": 16401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16392,
											"end": 16398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16388,
											"end": 16402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16381,
											"end": 16430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16264,
											"end": 16437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16264,
											"end": 16437,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16443,
											"end": 16610,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 16443,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16583,
											"end": 16602,
											"name": "PUSH",
											"source": 6,
											"value": "53616C65206861736E277420656E646564000000000000000000000000000000"
										},
										{
											"begin": 16579,
											"end": 16580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16571,
											"end": 16577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16567,
											"end": 16581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16560,
											"end": 16603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16443,
											"end": 16610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16443,
											"end": 16610,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16616,
											"end": 16795,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 16616,
											"end": 16795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16756,
											"end": 16787,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 16752,
											"end": 16753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16744,
											"end": 16750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16740,
											"end": 16754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16733,
											"end": 16788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16616,
											"end": 16795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16616,
											"end": 16795,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16801,
											"end": 16977,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 16801,
											"end": 16977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16941,
											"end": 16969,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420656E6F75676820746F6B656E20746F2072657475726E000000000000"
										},
										{
											"begin": 16937,
											"end": 16938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16929,
											"end": 16935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16925,
											"end": 16939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 16970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16801,
											"end": 16977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16801,
											"end": 16977,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16983,
											"end": 17212,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 16983,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17157,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 17119,
											"end": 17120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17111,
											"end": 17117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17107,
											"end": 17121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17100,
											"end": 17158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17192,
											"end": 17204,
											"name": "PUSH",
											"source": 6,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 17187,
											"end": 17189,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17179,
											"end": 17185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17175,
											"end": 17190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17168,
											"end": 17205,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16983,
											"end": 17212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16983,
											"end": 17212,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 17218,
											"end": 17340,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 17218,
											"end": 17340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17291,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 17309,
											"end": 17314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17291,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 17291,
											"end": 17315,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17291,
											"end": 17315,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 17291,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17284,
											"end": 17289,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17281,
											"end": 17316,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17271,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 17271,
											"end": 17334,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17330,
											"end": 17331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17327,
											"end": 17328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17271,
											"end": 17334,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 17271,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17218,
											"end": 17340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17218,
											"end": 17340,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 17346,
											"end": 17484,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 17346,
											"end": 17484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17427,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17427,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 17427,
											"end": 17459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17427,
											"end": 17459,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 17427,
											"end": 17459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17420,
											"end": 17425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17417,
											"end": 17460,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17474,
											"end": 17475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17471,
											"end": 17472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17464,
											"end": 17476,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17346,
											"end": 17484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17346,
											"end": 17484,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 17490,
											"end": 17606,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 17490,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17560,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 17575,
											"end": 17580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17560,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 17560,
											"end": 17581,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17560,
											"end": 17581,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 17560,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17553,
											"end": 17558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17550,
											"end": 17582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17540,
											"end": 17600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 17540,
											"end": 17600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17596,
											"end": 17597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17593,
											"end": 17594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17586,
											"end": 17598,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17540,
											"end": 17600,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 17540,
											"end": 17600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17490,
											"end": 17606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17490,
											"end": 17606,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 17612,
											"end": 17734,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 17612,
											"end": 17734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17685,
											"end": 17709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 17703,
											"end": 17708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17685,
											"end": 17709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 17685,
											"end": 17709,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17685,
											"end": 17709,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 17685,
											"end": 17709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17678,
											"end": 17683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17675,
											"end": 17710,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17665,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 17665,
											"end": 17728,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17724,
											"end": 17725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17721,
											"end": 17722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17714,
											"end": 17726,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17665,
											"end": 17728,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 17665,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17612,
											"end": 17734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17612,
											"end": 17734,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Return(address)": "de2d583a",
							"_usdcInstance()": "61778592",
							"bala(address)": "24076451",
							"getOwner()": "893d20e8",
							"getRecord(address)": "617fba04",
							"owner()": "8da5cb5b",
							"purchase(uint256)": "efef39a1",
							"purchases(uint256)": "8392fe31",
							"renounceOwnership()": "715018a6",
							"saleEnd()": "c10b9358",
							"saleStart()": "ab0bcc41",
							"transferOwnership(address)": "f2fde38b",
							"updateSaleEndTime(uint256)": "6f9c6149",
							"updateSaleStartTime(uint256)": "295e4edf",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"saleStart_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"usdcAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_returnAddress\",\"type\":\"address\"}],\"name\":\"Return\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_usdcInstance\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"bala\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchases\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updatedSaleEndTime\",\"type\":\"uint256\"}],\"name\":\"updateSaleEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updatedSaleStartTime\",\"type\":\"uint256\"}],\"name\":\"updateSaleStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSale.sol\":\"TokenSale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/TokenSale.sol\":{\"keccak256\":\"0x6d84b3b8c8b3c17d1432920db45792c1c1b48e01925507d234302a7b7acf5f9e\",\"license\":\"None\",\"urls\":[\"bzz-raw://05002d412b33f21ccdcb98ffe4204b4e65f5b94ce1ff37ef798a61e0ded05c4a\",\"dweb:/ipfs/QmWWwvrFFFsa2sLK3qnUbNNXCCbnqD9vD4rS9ruo6Kucdk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 737,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_tokenAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)182"
							},
							{
								"astId": 739,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_saleStart",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 741,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_saleEnd",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 744,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_usdcInstance",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)182"
							},
							{
								"astId": 756,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "record",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(TokenRecord)751_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)182": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(TokenRecord)751_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TokenSale.TokenRecord)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenRecord)751_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenRecord)751_storage": {
								"encoding": "inplace",
								"label": "struct TokenSale.TokenRecord",
								"members": [
									{
										"astId": 746,
										"contract": "contracts/TokenSale.sol:TokenSale",
										"label": "_amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 748,
										"contract": "contracts/TokenSale.sol:TokenSale",
										"label": "_buyerAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 750,
										"contract": "contracts/TokenSale.sol:TokenSale",
										"label": "_tokenSymbol",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							723
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 724,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								723
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 116,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 125,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 182,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 182,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 182,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 182,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 182,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 182,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"IERC20": [
							182
						],
						"SafeERC20": [
							406
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 183,
							"src": "125:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 702,
							"src": "149:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 187,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 190,
									"libraryName": {
										"id": 188,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "675:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:2",
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "803:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 201,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "833:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 204,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "863:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 149,
																		"src": "863:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 207,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "888:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "892:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 202,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 200,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "813:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "813:86:2"
											}
										]
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "732:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 191,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "732:6:2"
													},
													"referencedDeclaration": 182,
													"src": "732:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "754:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "774:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:2"
									},
									"scope": 406,
									"src": "701:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1040:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1070:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 229,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "1100:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "1100:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 232,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1129:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "1135:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "1139:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1050:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "947:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "947:6:2"
													},
													"referencedDeclaration": 182,
													"src": "947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "969:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "991:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1011:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:2"
									},
									"scope": 406,
									"src": "912:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1519:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 251,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "1768:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 254,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 259,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$406",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$406",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 257,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 261,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 245,
																					"src": "1815:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 255,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 243,
																					"src": "1784:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$182",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 159,
																				"src": "1784:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 265,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "1939:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "1969:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 169,
																		"src": "1969:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "1993:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "2002:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1919:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1443:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "1443:6:2"
													},
													"referencedDeclaration": 182,
													"src": "1443:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1465:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:2"
									},
									"scope": 406,
									"src": "1413:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2138:194:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "2148:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 299,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$406",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$406",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 297,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 301,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 295,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2171:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$182",
																	"typeString": "contract IERC20"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 159,
															"src": "2171:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 303,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2213:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 310,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "2278:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 169,
																		"src": "2278:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 313,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "2302:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 314,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2311:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 306,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "2228:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:2"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2062:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "2062:6:2"
													},
													"referencedDeclaration": 182,
													"src": "2062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2084:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2109:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:2"
									},
									"scope": 406,
									"src": "2022:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "2454:370:2",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:2",
												"statements": [
													{
														"assignments": [
															330
														],
														"declarations": [
															{
																"constant": false,
																"id": 330,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "2488:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 339,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 335,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$406",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$406",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 333,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 337,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "2542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 331,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2511:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 159,
																"src": "2511:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 341,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "2572:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 342,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "2588:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 340,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 346,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:2"
													},
													{
														"assignments": [
															348
														],
														"declarations": [
															{
																"constant": false,
																"id": 348,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "2653:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 352,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "2676:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 350,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2691:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 354,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2730:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 357,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "2760:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$182",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 169,
																				"src": "2760:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 360,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "2784:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 361,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "2793:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 355,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 353,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "2710:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:2"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2378:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 320,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "2378:6:2"
													},
													"referencedDeclaration": 182,
													"src": "2378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:2"
									},
									"scope": 406,
									"src": "2338:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "3277:636:2",
										"statements": [
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "3626:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 376,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "3680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 380,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "3660:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 378,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 495,
														"src": "3652:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3735:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "3731:176:2",
												"trueBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "3758:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 394,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "3830:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 396,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 395,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 397,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 392,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 391,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "3236:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 369,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "3236:6:2"
													},
													"referencedDeclaration": 182,
													"src": "3236:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "3250:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:2"
									},
									"scope": 406,
									"src": "3207:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 407,
							"src": "645:3270:2",
							"usedErrors": []
						}
					],
					"src": "100:3816:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 409,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 417,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 416,
												"id": 422,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 701,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 435,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 433,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 701,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 469,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 468,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															475,
															495
														],
														"referencedDeclaration": 495,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 467,
												"id": 473,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 701,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 491,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															565
														],
														"referencedDeclaration": 565,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 486,
												"id": 493,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 701,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 510,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 507,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															565
														],
														"referencedDeclaration": 565,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 506,
												"id": 513,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 701,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 532,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 530,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 542,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 541,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													548,
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 549,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 551,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 553,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 560,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 561,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 558,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 563,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 701,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 575,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															617
														],
														"referencedDeclaration": 617,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 580,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 701,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 596,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 595,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													602,
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 602,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 601,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 603,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"arguments": [
														{
															"id": 607,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 605,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 611,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 612,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 613,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 610,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 593,
												"id": 615,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 701,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 627,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															634,
															669
														],
														"referencedDeclaration": 669,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 626,
												"id": 632,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 701,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 648,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 647,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 657,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 664,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 665,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 662,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 645,
												"id": 667,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 701,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "7721:532:3",
										"statements": [
											{
												"condition": {
													"id": 681,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "7792:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 685,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 695,
																"nodeType": "Block",
																"src": "8184:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 692,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 676,
																					"src": "8209:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 691,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 694,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:3"
																	}
																]
															},
															"id": 696,
															"nodeType": "IfStatement",
															"src": "7872:365:3",
															"trueBody": {
																"id": 690,
																"nodeType": "Block",
																"src": "7899:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 689,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "7731:516:3",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 682,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 680,
															"id": 683,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 701,
									"src": "7561:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 702,
							"src": "194:8061:3",
							"usedErrors": []
						}
					],
					"src": "101:8155:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							723
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 704,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 708,
												"id": 711,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 723,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 718,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 717,
												"id": 720,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 723,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 724,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"contracts/TokenSale.sol": {
				"ast": {
					"absolutePath": "contracts/TokenSale.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"Context": [
							723
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeERC20": [
							406
						],
						"TokenSale": [
							1006
						]
					},
					"id": 1007,
					"license": "None",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 105,
							"src": "60:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 407,
							"src": "114:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 183,
							"src": "181:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 729,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "263:7:5"
									},
									"id": 730,
									"nodeType": "InheritanceSpecifier",
									"src": "263:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1006,
							"linearizedBaseContracts": [
								1006,
								104,
								723
							],
							"name": "TokenSale",
							"nameLocation": "250:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 734,
									"libraryName": {
										"id": 731,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 406,
										"src": "281:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "275:27:5",
									"typeName": {
										"id": 733,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 732,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 182,
											"src": "295:6:5"
										},
										"referencedDeclaration": 182,
										"src": "295:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$182",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 737,
									"mutability": "mutable",
									"name": "_tokenAddress",
									"nameLocation": "321:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "306:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$182",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 736,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 735,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 182,
											"src": "306:6:5"
										},
										"referencedDeclaration": 182,
										"src": "306:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$182",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 739,
									"mutability": "mutable",
									"name": "_saleStart",
									"nameLocation": "355:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "339:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 738,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 741,
									"mutability": "mutable",
									"name": "_saleEnd",
									"nameLocation": "386:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "370:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 740,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "370:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "61778592",
									"id": 744,
									"mutability": "mutable",
									"name": "_usdcInstance",
									"nameLocation": "413:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "399:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$182",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 743,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 742,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 182,
											"src": "399:6:5"
										},
										"referencedDeclaration": 182,
										"src": "399:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$182",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TokenSale.TokenRecord",
									"id": 751,
									"members": [
										{
											"constant": false,
											"id": 746,
											"mutability": "mutable",
											"name": "_amount",
											"nameLocation": "470:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "462:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 745,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 748,
											"mutability": "mutable",
											"name": "_buyerAddress",
											"nameLocation": "492:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "484:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 747,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "484:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 750,
											"mutability": "mutable",
											"name": "_tokenSymbol",
											"nameLocation": "519:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "512:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 749,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "512:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenRecord",
									"nameLocation": "444:11:5",
									"nodeType": "StructDefinition",
									"scope": 1006,
									"src": "437:100:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 756,
									"mutability": "mutable",
									"name": "record",
									"nameLocation": "577:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "545:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenRecord_$751_storage_$",
										"typeString": "mapping(address => struct TokenSale.TokenRecord)"
									},
									"typeName": {
										"id": 755,
										"keyType": {
											"id": 752,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "553:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "545:31:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenRecord_$751_storage_$",
											"typeString": "mapping(address => struct TokenSale.TokenRecord)"
										},
										"valueType": {
											"id": 754,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 753,
												"name": "TokenRecord",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 751,
												"src": "564:11:5"
											},
											"referencedDeclaration": 751,
											"src": "564:11:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenRecord_$751_storage_ptr",
												"typeString": "struct TokenSale.TokenRecord"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "689:189:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "tokenAddress_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "715:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 767,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "696:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "696:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "696:33:5"
											},
											{
												"expression": {
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 771,
														"name": "_usdcInstance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "736:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 773,
																"name": "usdcAddress_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "759:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 772,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "752:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "752:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"src": "736:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "736:36:5"
											},
											{
												"expression": {
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 777,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "779:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 779,
																"name": "tokenAddress_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "802:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 778,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "795:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "795:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"src": "779:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "779:37:5"
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 783,
														"name": "_saleStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "823:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 784,
														"name": "saleStart_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "836:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "823:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "823:23:5"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 787,
														"name": "_saleEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "853:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 788,
														"name": "saleEnd_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "864:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "853:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "853:19:5"
											}
										]
									},
									"id": 792,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "tokenAddress_",
												"nameLocation": "618:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "602:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "saleStart_",
												"nameLocation": "640:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "632:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "saleEnd_",
												"nameLocation": "659:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "651:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "usdcAddress_",
												"nameLocation": "676:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "668:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:88:5"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:5"
									},
									"scope": 1006,
									"src": "590:288:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "945:32:5",
										"statements": [
											{
												"expression": {
													"id": 797,
													"name": "_saleStart",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "961:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 796,
												"id": 798,
												"nodeType": "Return",
												"src": "954:17:5"
											}
										]
									},
									"functionSelector": "ab0bcc41",
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saleStart",
									"nameLocation": "895:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "936:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:9:5"
									},
									"scope": 1006,
									"src": "886:91:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "1031:29:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 805,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1047:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:7:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 804,
												"id": 807,
												"nodeType": "Return",
												"src": "1040:14:5"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "992:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:2:5"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1023:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:9:5"
									},
									"scope": 1006,
									"src": "983:77:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "1128:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "1166:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 816,
															"name": "_usdcInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "1142:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 139,
														"src": "1142:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1142:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 815,
												"id": 820,
												"nodeType": "Return",
												"src": "1135:35:5"
											}
										]
									},
									"functionSelector": "24076451",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bala",
									"nameLocation": "1073:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "1086:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1078:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:13:5"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1120:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:9:5"
									},
									"scope": 1006,
									"src": "1064:112:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1239:30:5",
										"statements": [
											{
												"expression": {
													"id": 827,
													"name": "_saleEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 741,
													"src": "1255:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 826,
												"id": 828,
												"nodeType": "Return",
												"src": "1248:15:5"
											}
										]
									},
									"functionSelector": "c10b9358",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saleEnd",
									"nameLocation": "1191:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1198:2:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1230:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:5"
									},
									"scope": 1006,
									"src": "1182:87:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "1348:44:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 837,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1362:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenRecord_$751_storage_$",
																"typeString": "mapping(address => struct TokenSale.TokenRecord storage ref)"
															}
														},
														"id": 839,
														"indexExpression": {
															"id": 838,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1369:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1362:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenRecord_$751_storage",
															"typeString": "struct TokenSale.TokenRecord storage ref"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 746,
													"src": "1362:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 841,
												"nodeType": "Return",
												"src": "1355:31:5"
											}
										]
									},
									"functionSelector": "617fba04",
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecord",
									"nameLocation": "1284:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1302:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1294:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:18:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1340:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:9:5"
									},
									"scope": 1006,
									"src": "1275:117:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "1439:936:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 849,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1456:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1456:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 851,
																"name": "_saleStart",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "1473:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1456:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206861736e2774207374617274656420796574",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1484:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																"typeString": "literal_string \"Sale hasn't started yet\""
															},
															"value": "Sale hasn't started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																"typeString": "literal_string \"Sale hasn't started yet\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1448:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "1448:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 857,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1527:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1527:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 859,
																"name": "_saleEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "1544:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1527:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652068617320656e646564",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1553:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																"typeString": "literal_string \"Sale has ended\""
															},
															"value": "Sale has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																"typeString": "literal_string \"Sale has ended\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1519:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1519:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "1519:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 867,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1664:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1664:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 869,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1675:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1675:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "1684:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 864,
															"name": "_usdcInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "1633:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "1633:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1633:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1633:59:5"
											}
										]
									},
									"functionSelector": "efef39a1",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchase",
									"nameLocation": "1407:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1424:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1416:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1415:17:5"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1439:0:5"
									},
									"scope": 1006,
									"src": "1398:977:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2424:787:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 881,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2441:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2441:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 883,
																"name": "_saleStart",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "2458:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2441:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206861736e2774207374617274656420796574",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2469:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																"typeString": "literal_string \"Sale hasn't started yet\""
															},
															"value": "Sale hasn't started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																"typeString": "literal_string \"Sale hasn't started yet\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2433:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "2433:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 889,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2512:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 891,
																"name": "_saleEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "2529:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652068617320656e646564",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2538:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																"typeString": "literal_string \"Sale has ended\""
															},
															"value": "Sale has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																"typeString": "literal_string \"Sale has ended\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "2504:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2843:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2843:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 901,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "2854:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2854:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "2863:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 896,
															"name": "_usdcInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "2812:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "2812:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2812:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "2812:59:5"
											}
										]
									},
									"functionSelector": "8392fe31",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchases",
									"nameLocation": "2390:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2408:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:17:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2424:0:5"
									},
									"scope": 1006,
									"src": "2381:830:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3280:216:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 915,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3297:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3297:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 917,
																"name": "_saleEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "3313:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3297:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206861736e277420656e646564",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3322:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
																"typeString": "literal_string \"Sale hasn't ended\""
															},
															"value": "Sale hasn't ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
																"typeString": "literal_string \"Sale hasn't ended\""
															}
														],
														"id": 914,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3289:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "3289:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "3378:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 928,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "3407:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3407:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 926,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "3383:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 139,
																"src": "3383:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3383:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 922,
															"name": "_usdcInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "3351:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 213,
														"src": "3351:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "3351:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "3452:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 939,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "3481:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3481:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 937,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "3457:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 139,
																"src": "3457:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3457:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 933,
															"name": "_usdcInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "3425:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 213,
														"src": "3425:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "3425:65:5"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 912,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 911,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3271:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3271:9:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "3226:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3243:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3235:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3234:13:5"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3280:0:5"
									},
									"scope": 1006,
									"src": "3217:279:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "3813:252:5",
										"statements": [
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "returnAmt",
														"nameLocation": "3828:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 980,
														"src": "3820:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 954,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3820:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 956,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3840:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenRecord_$751_storage_$",
																"typeString": "mapping(address => struct TokenSale.TokenRecord storage ref)"
															}
														},
														"id": 958,
														"indexExpression": {
															"id": 957,
															"name": "_returnAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3847:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3840:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenRecord_$751_storage",
															"typeString": "struct TokenSale.TokenRecord storage ref"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 746,
													"src": "3840:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3820:50:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 964,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3893:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenSale_$1006",
																				"typeString": "contract TokenSale"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenSale_$1006",
																				"typeString": "contract TokenSale"
																			}
																		],
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3885:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 962,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3885:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3885:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3885:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 967,
																"name": "returnAmt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "3908:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3885:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e20746f2072657475726e",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3918:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
																"typeString": "literal_string \"Not enough token to return\""
															},
															"value": "Not enough token to return"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
																"typeString": "literal_string \"Not enough token to return\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3877:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "3877:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "returnAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4031:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 972,
															"name": "_returnAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "4007:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4007:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "4007:34:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4055:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 953,
												"id": 979,
												"nodeType": "Return",
												"src": "4048:11:5"
											}
										]
									},
									"functionSelector": "de2d583a",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 950,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 949,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3790:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3790:9:5"
										}
									],
									"name": "Return",
									"nameLocation": "3736:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "_returnAddress",
												"nameLocation": "3759:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3743:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3743:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:32:5"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3808:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:5"
									},
									"scope": 1006,
									"src": "3727:338:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "4146:48:5",
										"statements": [
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "_saleStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "4155:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 989,
														"name": "updatedSaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "4168:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4155:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "4155:33:5"
											}
										]
									},
									"functionSelector": "295e4edf",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 985,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4137:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4137:9:5"
										}
									],
									"name": "updateSaleStartTime",
									"nameLocation": "4080:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "updatedSaleStartTime",
												"nameLocation": "4108:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4100:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4099:30:5"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4146:0:5"
									},
									"scope": 1006,
									"src": "4071:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "4269:44:5",
										"statements": [
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1000,
														"name": "_saleEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4278:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1001,
														"name": "updatedSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "4289:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4278:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "4278:29:5"
											}
										]
									},
									"functionSelector": "6f9c6149",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 997,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4260:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4260:9:5"
										}
									],
									"name": "updateSaleEndTime",
									"nameLocation": "4207:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "updatedSaleEndTime",
												"nameLocation": "4233:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "4225:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4224:28:5"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4269:0:5"
									},
									"scope": 1006,
									"src": "4198:115:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1007,
							"src": "241:4077:5",
							"usedErrors": []
						}
					],
					"src": "33:4285:5"
				},
				"id": 5
			}
		}
	}
}