{
	"id": "692d573cebc0fc8a2a073e64fe521127",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenSale.sol": {
				"content": "//SPDX-License-Identifier: None\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract TokenSale is Ownable{\r\n  using SafeERC20 for IERC20;\r\n  address private _tokenAddress;\r\n  uint256 private _saleStart;\r\n  uint256 private _saleEnd;\r\n  address public _usdcInstance;\r\n  \r\n  mapping(address => uint256) record;\r\n\r\n  constructor(address _owner,address tokenAddress_,uint256 saleStart_,uint256 saleEnd_,address usdcAddress_){\r\n    _transferOwnership(_owner);\r\n    _usdcInstance = usdcAddress_;\r\n    _tokenAddress = tokenAddress_;\r\n    _saleStart = saleStart_;\r\n    _saleEnd = saleEnd_;\r\n  }  \r\n\r\n  function saleStart() public view virtual returns (uint256) {\r\n      return _saleStart;\r\n  }\r\n\r\n  function tokenAddress() public view returns(address){\r\n    return _tokenAddress;\r\n  }\r\n\r\n  function getOwner() public view returns(address){\r\n      return owner();\r\n  }\r\n  function bala(address add) public view virtual returns (uint256){\r\n    return IERC20(_usdcInstance).balanceOf(add);\r\n  }\r\n\r\n  function saleEnd() public view virtual returns (uint256) {\r\n      return _saleEnd;\r\n  }\r\n\r\n  function getRecord(address _address) public virtual view returns(uint256){\r\n    return record[_address];\r\n  }\r\n\r\n  function purchase(uint256 _amount) public{\r\n      require(block.timestamp>=_saleStart,\"Sale hasn't started yet\");\r\n      require(block.timestamp<=_saleEnd,\"Sale has ended\");\r\n      IERC20(_usdcInstance).safeTransferFrom(msg.sender,_tokenAddress, _amount);\r\n      record[msg.sender] += _amount*10**18;\r\n  }\r\n\r\n\r\n  function withdraw(address _to) public virtual onlyOwner{\r\n      require(block.timestamp>_saleEnd,\"Sale hasn't ended\");\r\n      IERC20(_usdcInstance).safeTransfer(_to, IERC20(_usdcInstance).balanceOf(_tokenAddress));\r\n  }\r\n\r\n  // function claim() public virtual onlyOwner{\r\n  //   require(block.timestamp>=_saleEnd,\"Sale hasn't ended\");\r\n  //   _tokenAddress.mint(msg.sender,record[msg.sender]._amount);\r\n  //   delete record[msg.sender];\r\n  // }\r\n\r\n  function Return(address _returnAddress) public payable onlyOwner returns(bool){\r\n    uint256 returnAmt = record[_returnAddress];\r\n    require(IERC20(_usdcInstance).balanceOf(_tokenAddress)>=returnAmt*10**18,\"Not enough token to return\");\r\n    // _tokenAddress._balances[owner] += returnAmt;\r\n    IERC20(_usdcInstance).safeTransfer(_returnAddress,returnAmt);\r\n    return true;\r\n  }\r\n\r\n  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r\n      _saleStart = updatedSaleStartTime;\r\n  }\r\n  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r\n      _saleEnd = updatedSaleEndTime;\r\n  }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenSale.sol": {
				"TokenSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddress_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "saleStart_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "saleEnd_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "usdcAddress_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_returnAddress",
									"type": "address"
								}
							],
							"name": "Return",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_usdcInstance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "bala",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getRecord",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "purchase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleStart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updatedSaleEndTime",
									"type": "uint256"
								}
							],
							"name": "updateSaleEndTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updatedSaleStartTime",
									"type": "uint256"
								}
							],
							"name": "updateSaleStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenSale.sol\":241:2757  contract TokenSale is Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenSale.sol\":478:750  constructor(address _owner,address tokenAddress_,uint256 saleStart_,uint256 saleEnd_,address usdcAddress_){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/TokenSale.sol\":591:617  _transferOwnership(_owner) */\n  tag_12\n    /* \"contracts/TokenSale.sol\":610:616  _owner */\n  dup6\n    /* \"contracts/TokenSale.sol\":591:609  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/TokenSale.sol\":591:617  _transferOwnership(_owner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/TokenSale.sol\":640:652  usdcAddress_ */\n  dup1\n    /* \"contracts/TokenSale.sol\":624:637  _usdcInstance */\n  0x04\n  0x00\n    /* \"contracts/TokenSale.sol\":624:652  _usdcInstance = usdcAddress_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":675:688  tokenAddress_ */\n  dup4\n    /* \"contracts/TokenSale.sol\":659:672  _tokenAddress */\n  0x01\n  0x00\n    /* \"contracts/TokenSale.sol\":659:688  _tokenAddress = tokenAddress_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":708:718  saleStart_ */\n  dup3\n    /* \"contracts/TokenSale.sol\":695:705  _saleStart */\n  0x02\n    /* \"contracts/TokenSale.sol\":695:718  _saleStart = saleStart_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":736:744  saleEnd_ */\n  dup2\n    /* \"contracts/TokenSale.sol\":725:733  _saleEnd */\n  0x03\n    /* \"contracts/TokenSale.sol\":725:744  _saleEnd = saleEnd_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":478:750  constructor(address _owner,address tokenAddress_,uint256 saleStart_,uint256 saleEnd_,address usdcAddress_){\r... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/TokenSale.sol\":241:2757  contract TokenSale is Ownable{\r... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_17:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_19\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_21:\n    /* \"#utility.yul\":213:218   */\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_23\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":156:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1282   */\ntag_3:\n    /* \"#utility.yul\":411:417   */\n  0x00\n    /* \"#utility.yul\":419:425   */\n  dup1\n    /* \"#utility.yul\":427:433   */\n  0x00\n    /* \"#utility.yul\":435:441   */\n  dup1\n    /* \"#utility.yul\":443:449   */\n  0x00\n    /* \"#utility.yul\":492:495   */\n  0xa0\n    /* \"#utility.yul\":480:489   */\n  dup7\n    /* \"#utility.yul\":471:478   */\n  dup9\n    /* \"#utility.yul\":467:490   */\n  sub\n    /* \"#utility.yul\":463:496   */\n  slt\n    /* \"#utility.yul\":460:580   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":499:578   */\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":460:580   */\ntag_26:\n    /* \"#utility.yul\":619:620   */\n  0x00\n    /* \"#utility.yul\":644:708   */\n  tag_29\n    /* \"#utility.yul\":700:707   */\n  dup9\n    /* \"#utility.yul\":691:697   */\n  dup3\n    /* \"#utility.yul\":680:689   */\n  dup10\n    /* \"#utility.yul\":676:698   */\n  add\n    /* \"#utility.yul\":644:708   */\n  tag_17\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":634:708   */\n  swap6\n  pop\n    /* \"#utility.yul\":590:718   */\n  pop\n    /* \"#utility.yul\":757:759   */\n  0x20\n    /* \"#utility.yul\":783:847   */\n  tag_30\n    /* \"#utility.yul\":839:846   */\n  dup9\n    /* \"#utility.yul\":830:836   */\n  dup3\n    /* \"#utility.yul\":819:828   */\n  dup10\n    /* \"#utility.yul\":815:837   */\n  add\n    /* \"#utility.yul\":783:847   */\n  tag_17\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":773:847   */\n  swap5\n  pop\n    /* \"#utility.yul\":728:857   */\n  pop\n    /* \"#utility.yul\":896:898   */\n  0x40\n    /* \"#utility.yul\":922:986   */\n  tag_31\n    /* \"#utility.yul\":978:985   */\n  dup9\n    /* \"#utility.yul\":969:975   */\n  dup3\n    /* \"#utility.yul\":958:967   */\n  dup10\n    /* \"#utility.yul\":954:976   */\n  add\n    /* \"#utility.yul\":922:986   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":912:986   */\n  swap4\n  pop\n    /* \"#utility.yul\":867:996   */\n  pop\n    /* \"#utility.yul\":1035:1037   */\n  0x60\n    /* \"#utility.yul\":1061:1125   */\n  tag_32\n    /* \"#utility.yul\":1117:1124   */\n  dup9\n    /* \"#utility.yul\":1108:1114   */\n  dup3\n    /* \"#utility.yul\":1097:1106   */\n  dup10\n    /* \"#utility.yul\":1093:1115   */\n  add\n    /* \"#utility.yul\":1061:1125   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1051:1125   */\n  swap3\n  pop\n    /* \"#utility.yul\":1006:1135   */\n  pop\n    /* \"#utility.yul\":1174:1177   */\n  0x80\n    /* \"#utility.yul\":1201:1265   */\n  tag_33\n    /* \"#utility.yul\":1257:1264   */\n  dup9\n    /* \"#utility.yul\":1248:1254   */\n  dup3\n    /* \"#utility.yul\":1237:1246   */\n  dup10\n    /* \"#utility.yul\":1233:1255   */\n  add\n    /* \"#utility.yul\":1201:1265   */\n  tag_17\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1191:1265   */\n  swap2\n  pop\n    /* \"#utility.yul\":1145:1275   */\n  pop\n    /* \"#utility.yul\":305:1282   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1369:1465   */\ntag_36:\n    /* \"#utility.yul\":1406:1413   */\n  0x00\n    /* \"#utility.yul\":1435:1459   */\n  tag_38\n    /* \"#utility.yul\":1453:1458   */\n  dup3\n    /* \"#utility.yul\":1435:1459   */\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1424:1459   */\n  swap1\n  pop\n    /* \"#utility.yul\":1369:1465   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1597   */\ntag_39:\n    /* \"#utility.yul\":1508:1515   */\n  0x00\n    /* \"#utility.yul\":1548:1590   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1541:1546   */\n  dup3\n    /* \"#utility.yul\":1537:1591   */\n  and\n    /* \"#utility.yul\":1526:1591   */\n  swap1\n  pop\n    /* \"#utility.yul\":1471:1597   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1680   */\ntag_41:\n    /* \"#utility.yul\":1640:1647   */\n  0x00\n    /* \"#utility.yul\":1669:1674   */\n  dup2\n    /* \"#utility.yul\":1658:1674   */\n  swap1\n  pop\n    /* \"#utility.yul\":1603:1680   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1809:1926   */\ntag_28:\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1915:1916   */\n  dup1\n    /* \"#utility.yul\":1908:1920   */\n  revert\n    /* \"#utility.yul\":1932:2054   */\ntag_20:\n    /* \"#utility.yul\":2005:2029   */\n  tag_47\n    /* \"#utility.yul\":2023:2028   */\n  dup2\n    /* \"#utility.yul\":2005:2029   */\n  tag_36\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2030   */\n  eq\n    /* \"#utility.yul\":1985:2048   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2044:2045   */\n  0x00\n    /* \"#utility.yul\":2041:2042   */\n  dup1\n    /* \"#utility.yul\":2034:2046   */\n  revert\n    /* \"#utility.yul\":1985:2048   */\ntag_48:\n    /* \"#utility.yul\":1932:2054   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2060:2182   */\ntag_24:\n    /* \"#utility.yul\":2133:2157   */\n  tag_50\n    /* \"#utility.yul\":2151:2156   */\n  dup2\n    /* \"#utility.yul\":2133:2157   */\n  tag_41\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2126:2131   */\n  dup2\n    /* \"#utility.yul\":2123:2158   */\n  eq\n    /* \"#utility.yul\":2113:2176   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2172:2173   */\n  0x00\n    /* \"#utility.yul\":2169:2170   */\n  dup1\n    /* \"#utility.yul\":2162:2174   */\n  revert\n    /* \"#utility.yul\":2113:2176   */\ntag_51:\n    /* \"#utility.yul\":2060:2182   */\n  pop\n  jump\t// out\n    /* \"contracts/TokenSale.sol\":241:2757  contract TokenSale is Ownable{\r... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenSale.sol\":241:2757  contract TokenSale is Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc10b9358\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc10b9358\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xde2d583a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xefef39a1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x893d20e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xab0bcc41\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x61778592\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x61778592\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x617fba04\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6f9c6149\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x24076451\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x295e4edf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenSale.sol\":1027:1147  function bala(address add) public view virtual returns (uint256){\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":2510:2633  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/TokenSale.sol\":1674:1893  function withdraw(address _to) public virtual onlyOwner{\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/TokenSale.sol\":400:428  address public _usdcInstance */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":1246:1355  function getRecord(address _address) public virtual view returns(uint256){\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":2637:2752  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/TokenSale.sol\":946:1023  function getOwner() public view returns(address){\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":855:940  function tokenAddress() public view returns(address){\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":758:849  function saleStart() public view virtual returns (uint256) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":1153:1240  function saleEnd() public view virtual returns (uint256) {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":2124:2504  function Return(address _returnAddress) public payable onlyOwner returns(bool){\r... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":1361:1666  function purchase(uint256 _amount) public{\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/TokenSale.sol\":1027:1147  function bala(address add) public view virtual returns (uint256){\r... */\n    tag_24:\n        /* \"contracts/TokenSale.sol\":1083:1090  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":1112:1125  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1105:1136  IERC20(_usdcInstance).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSale.sol\":1137:1140  add */\n      dup4\n        /* \"contracts/TokenSale.sol\":1105:1141  IERC20(_usdcInstance).balanceOf(add) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"contracts/TokenSale.sol\":1098:1141  return IERC20(_usdcInstance).balanceOf(add) */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":1027:1147  function bala(address add) public view virtual returns (uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":2510:2633  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/TokenSale.sol\":2607:2627  updatedSaleStartTime */\n      dup1\n        /* \"contracts/TokenSale.sol\":2594:2604  _saleStart */\n      0x02\n        /* \"contracts/TokenSale.sol\":2594:2627  _saleStart = updatedSaleStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":2510:2633  function updateSaleStartTime(uint256 updatedSaleStartTime) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":1674:1893  function withdraw(address _to) public virtual onlyOwner{\r... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_99\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/TokenSale.sol\":1762:1770  _saleEnd */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":1746:1761  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":1746:1770  block.timestamp>_saleEnd */\n      gt\n        /* \"contracts/TokenSale.sol\":1738:1791  require(block.timestamp>_saleEnd,\"Sale hasn't ended\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/TokenSale.sol\":1800:1887  IERC20(_usdcInstance).safeTransfer(_to, IERC20(_usdcInstance).balanceOf(_tokenAddress)) */\n      tag_110\n        /* \"contracts/TokenSale.sol\":1835:1838  _to */\n      dup2\n        /* \"contracts/TokenSale.sol\":1847:1860  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1840:1871  IERC20(_usdcInstance).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSale.sol\":1872:1885  _tokenAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1840:1886  IERC20(_usdcInstance).balanceOf(_tokenAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_115:\n        /* \"contracts/TokenSale.sol\":1807:1820  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1800:1834  IERC20(_usdcInstance).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_116\n      swap1\n        /* \"contracts/TokenSale.sol\":1800:1887  IERC20(_usdcInstance).safeTransfer(_to, IERC20(_usdcInstance).balanceOf(_tokenAddress)) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/TokenSale.sol\":1674:1893  function withdraw(address _to) public virtual onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":400:428  address public _usdcInstance */\n    tag_38:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":1246:1355  function getRecord(address _address) public virtual view returns(uint256){\r... */\n    tag_44:\n        /* \"contracts/TokenSale.sol\":1311:1318  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":1333:1339  record */\n      0x05\n        /* \"contracts/TokenSale.sol\":1333:1349  record[_address] */\n      0x00\n        /* \"contracts/TokenSale.sol\":1340:1348  _address */\n      dup4\n        /* \"contracts/TokenSale.sol\":1333:1349  record[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenSale.sol\":1326:1349  return record[_address] */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":1246:1355  function getRecord(address _address) public virtual view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":2637:2752  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_99\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/TokenSale.sol\":2728:2746  updatedSaleEndTime */\n      dup1\n        /* \"contracts/TokenSale.sol\":2717:2725  _saleEnd */\n      0x03\n        /* \"contracts/TokenSale.sol\":2717:2746  _saleEnd = updatedSaleEndTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":2637:2752  function updateSaleEndTime(uint256 updatedSaleEndTime) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_99\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":946:1023  function getOwner() public view returns(address){\r... */\n    tag_55:\n        /* \"contracts/TokenSale.sol\":986:993  address */\n      0x00\n        /* \"contracts/TokenSale.sol\":1010:1017  owner() */\n      tag_133\n        /* \"contracts/TokenSale.sol\":1010:1015  owner */\n      tag_59\n        /* \"contracts/TokenSale.sol\":1010:1017  owner() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/TokenSale.sol\":1003:1017  return owner() */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":946:1023  function getOwner() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":855:940  function tokenAddress() public view returns(address){\r... */\n    tag_63:\n        /* \"contracts/TokenSale.sol\":899:906  address */\n      0x00\n        /* \"contracts/TokenSale.sol\":921:934  _tokenAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":914:934  return _tokenAddress */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":855:940  function tokenAddress() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":758:849  function saleStart() public view virtual returns (uint256) {\r... */\n    tag_67:\n        /* \"contracts/TokenSale.sol\":808:815  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":833:843  _saleStart */\n      sload(0x02)\n        /* \"contracts/TokenSale.sol\":826:843  return _saleStart */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":758:849  function saleStart() public view virtual returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":1153:1240  function saleEnd() public view virtual returns (uint256) {\r... */\n    tag_71:\n        /* \"contracts/TokenSale.sol\":1201:1208  uint256 */\n      0x00\n        /* \"contracts/TokenSale.sol\":1226:1234  _saleEnd */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":1219:1234  return _saleEnd */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":1153:1240  function saleEnd() public view virtual returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":2124:2504  function Return(address _returnAddress) public payable onlyOwner returns(bool){\r... */\n    tag_75:\n        /* \"contracts/TokenSale.sol\":2197:2201  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_99\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/TokenSale.sol\":2209:2226  uint256 returnAmt */\n      0x00\n        /* \"contracts/TokenSale.sol\":2229:2235  record */\n      0x05\n        /* \"contracts/TokenSale.sol\":2229:2251  record[_returnAddress] */\n      0x00\n        /* \"contracts/TokenSale.sol\":2236:2250  _returnAddress */\n      dup5\n        /* \"contracts/TokenSale.sol\":2229:2251  record[_returnAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenSale.sol\":2209:2251  uint256 returnAmt = record[_returnAddress] */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":2324:2330  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TokenSale.sol\":2314:2323  returnAmt */\n      dup2\n        /* \"contracts/TokenSale.sol\":2314:2330  returnAmt*10**18 */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/TokenSale.sol\":2273:2286  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":2266:2297  IERC20(_usdcInstance).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSale.sol\":2298:2311  _tokenAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":2266:2312  IERC20(_usdcInstance).balanceOf(_tokenAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_146:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_150:\n        /* \"contracts/TokenSale.sol\":2266:2330  IERC20(_usdcInstance).balanceOf(_tokenAddress)>=returnAmt*10**18 */\n      lt\n      iszero\n        /* \"contracts/TokenSale.sol\":2258:2360  require(IERC20(_usdcInstance).balanceOf(_tokenAddress)>=returnAmt*10**18,\"Not enough token to return\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/TokenSale.sol\":2420:2480  IERC20(_usdcInstance).safeTransfer(_returnAddress,returnAmt) */\n      tag_154\n        /* \"contracts/TokenSale.sol\":2455:2469  _returnAddress */\n      dup4\n        /* \"contracts/TokenSale.sol\":2470:2479  returnAmt */\n      dup3\n        /* \"contracts/TokenSale.sol\":2427:2440  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":2420:2454  IERC20(_usdcInstance).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_116\n      swap1\n        /* \"contracts/TokenSale.sol\":2420:2480  IERC20(_usdcInstance).safeTransfer(_returnAddress,returnAmt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/TokenSale.sol\":2494:2498  true */\n      0x01\n        /* \"contracts/TokenSale.sol\":2487:2498  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/TokenSale.sol\":2124:2504  function Return(address _returnAddress) public payable onlyOwner returns(bool){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":1361:1666  function purchase(uint256 _amount) public{\r... */\n    tag_81:\n        /* \"contracts/TokenSale.sol\":1436:1446  _saleStart */\n      sload(0x02)\n        /* \"contracts/TokenSale.sol\":1419:1434  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":1419:1446  block.timestamp>=_saleStart */\n      lt\n      iszero\n        /* \"contracts/TokenSale.sol\":1411:1473  require(block.timestamp>=_saleStart,\"Sale hasn't started yet\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/TokenSale.sol\":1507:1515  _saleEnd */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":1490:1505  block.timestamp */\n      timestamp\n        /* \"contracts/TokenSale.sol\":1490:1515  block.timestamp<=_saleEnd */\n      gt\n      iszero\n        /* \"contracts/TokenSale.sol\":1482:1533  require(block.timestamp<=_saleEnd,\"Sale has ended\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/TokenSale.sol\":1542:1615  IERC20(_usdcInstance).safeTransferFrom(msg.sender,_tokenAddress, _amount) */\n      tag_162\n        /* \"contracts/TokenSale.sol\":1581:1591  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":1592:1605  _tokenAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1607:1614  _amount */\n      dup4\n        /* \"contracts/TokenSale.sol\":1549:1562  _usdcInstance */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":1542:1580  IERC20(_usdcInstance).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"contracts/TokenSale.sol\":1542:1615  IERC20(_usdcInstance).safeTransferFrom(msg.sender,_tokenAddress, _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/TokenSale.sol\":1654:1660  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TokenSale.sol\":1646:1653  _amount */\n      dup2\n        /* \"contracts/TokenSale.sol\":1646:1660  _amount*10**18 */\n      tag_164\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_164:\n        /* \"contracts/TokenSale.sol\":1624:1630  record */\n      0x05\n        /* \"contracts/TokenSale.sol\":1624:1642  record[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":1631:1641  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":1624:1642  record[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TokenSale.sol\":1624:1660  record[msg.sender] += _amount*10**18 */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":1361:1666  function purchase(uint256 _amount) public{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_99\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1129:1133  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1135:1137  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1144  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_186\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_190\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_213\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_212)\n    tag_213:\n      0x60\n      swap2\n      pop\n    tag_212:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_217)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_217:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_225:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_227\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_229:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_231\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_233:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_235\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_237:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_239\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_236\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_23:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_242\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":665:784   */\n    tag_241:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_244\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_225\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_193:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_247\n      tag_243\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1008:1127   */\n    tag_246:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_248\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_229\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_30:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_251\n      tag_243\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1351:1470   */\n    tag_250:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_252\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_233\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_92:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_255\n      tag_243\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1697:1816   */\n    tag_254:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_256\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_237\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2085   */\n    tag_257:\n        /* \"#utility.yul\":2054:2078   */\n      tag_259\n        /* \"#utility.yul\":2072:2077   */\n      dup2\n        /* \"#utility.yul\":2054:2078   */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2049:2052   */\n      dup3\n        /* \"#utility.yul\":2042:2079   */\n      mstore\n        /* \"#utility.yul\":1967:2085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2200   */\n    tag_261:\n        /* \"#utility.yul\":2172:2193   */\n      tag_263\n        /* \"#utility.yul\":2187:2192   */\n      dup2\n        /* \"#utility.yul\":2172:2193   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2167:2170   */\n      dup3\n        /* \"#utility.yul\":2160:2194   */\n      mstore\n        /* \"#utility.yul\":2091:2200   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2579   */\n    tag_265:\n        /* \"#utility.yul\":2310:2313   */\n      0x00\n        /* \"#utility.yul\":2338:2376   */\n      tag_267\n        /* \"#utility.yul\":2370:2375   */\n      dup3\n        /* \"#utility.yul\":2338:2376   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2392:2480   */\n      tag_269\n        /* \"#utility.yul\":2473:2479   */\n      dup2\n        /* \"#utility.yul\":2468:2471   */\n      dup6\n        /* \"#utility.yul\":2392:2480   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2385:2480   */\n      swap4\n      pop\n        /* \"#utility.yul\":2489:2541   */\n      tag_271\n        /* \"#utility.yul\":2534:2540   */\n      dup2\n        /* \"#utility.yul\":2529:2532   */\n      dup6\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2515:2520   */\n      dup7\n        /* \"#utility.yul\":2511:2527   */\n      add\n        /* \"#utility.yul\":2489:2541   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2566:2572   */\n      dup1\n        /* \"#utility.yul\":2561:2564   */\n      dup5\n        /* \"#utility.yul\":2557:2573   */\n      add\n        /* \"#utility.yul\":2550:2573   */\n      swap2\n      pop\n        /* \"#utility.yul\":2314:2579   */\n      pop\n        /* \"#utility.yul\":2206:2579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2585:2949   */\n    tag_273:\n        /* \"#utility.yul\":2673:2676   */\n      0x00\n        /* \"#utility.yul\":2701:2740   */\n      tag_275\n        /* \"#utility.yul\":2734:2739   */\n      dup3\n        /* \"#utility.yul\":2701:2740   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2756:2827   */\n      tag_277\n        /* \"#utility.yul\":2820:2826   */\n      dup2\n        /* \"#utility.yul\":2815:2818   */\n      dup6\n        /* \"#utility.yul\":2756:2827   */\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2749:2827   */\n      swap4\n      pop\n        /* \"#utility.yul\":2836:2888   */\n      tag_279\n        /* \"#utility.yul\":2881:2887   */\n      dup2\n        /* \"#utility.yul\":2876:2879   */\n      dup6\n        /* \"#utility.yul\":2869:2873   */\n      0x20\n        /* \"#utility.yul\":2862:2867   */\n      dup7\n        /* \"#utility.yul\":2858:2874   */\n      add\n        /* \"#utility.yul\":2836:2888   */\n      tag_272\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2913:2942   */\n      tag_280\n        /* \"#utility.yul\":2935:2941   */\n      dup2\n        /* \"#utility.yul\":2913:2942   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2908:2911   */\n      dup5\n        /* \"#utility.yul\":2904:2943   */\n      add\n        /* \"#utility.yul\":2897:2943   */\n      swap2\n      pop\n        /* \"#utility.yul\":2677:2949   */\n      pop\n        /* \"#utility.yul\":2585:2949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2955:3321   */\n    tag_282:\n        /* \"#utility.yul\":3097:3100   */\n      0x00\n        /* \"#utility.yul\":3118:3185   */\n      tag_284\n        /* \"#utility.yul\":3182:3184   */\n      0x26\n        /* \"#utility.yul\":3177:3180   */\n      dup4\n        /* \"#utility.yul\":3118:3185   */\n      tag_278\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3111:3185   */\n      swap2\n      pop\n        /* \"#utility.yul\":3194:3287   */\n      tag_285\n        /* \"#utility.yul\":3283:3286   */\n      dup3\n        /* \"#utility.yul\":3194:3287   */\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3312:3314   */\n      0x40\n        /* \"#utility.yul\":3307:3310   */\n      dup3\n        /* \"#utility.yul\":3303:3315   */\n      add\n        /* \"#utility.yul\":3296:3315   */\n      swap1\n      pop\n        /* \"#utility.yul\":2955:3321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3327:3693   */\n    tag_287:\n        /* \"#utility.yul\":3469:3472   */\n      0x00\n        /* \"#utility.yul\":3490:3557   */\n      tag_289\n        /* \"#utility.yul\":3554:3556   */\n      0x0e\n        /* \"#utility.yul\":3549:3552   */\n      dup4\n        /* \"#utility.yul\":3490:3557   */\n      tag_278\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3483:3557   */\n      swap2\n      pop\n        /* \"#utility.yul\":3566:3659   */\n      tag_290\n        /* \"#utility.yul\":3655:3658   */\n      dup3\n        /* \"#utility.yul\":3566:3659   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3684:3686   */\n      0x20\n        /* \"#utility.yul\":3679:3682   */\n      dup3\n        /* \"#utility.yul\":3675:3687   */\n      add\n        /* \"#utility.yul\":3668:3687   */\n      swap1\n      pop\n        /* \"#utility.yul\":3327:3693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3699:4065   */\n    tag_292:\n        /* \"#utility.yul\":3841:3844   */\n      0x00\n        /* \"#utility.yul\":3862:3929   */\n      tag_294\n        /* \"#utility.yul\":3926:3928   */\n      0x26\n        /* \"#utility.yul\":3921:3924   */\n      dup4\n        /* \"#utility.yul\":3862:3929   */\n      tag_278\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3855:3929   */\n      swap2\n      pop\n        /* \"#utility.yul\":3938:4031   */\n      tag_295\n        /* \"#utility.yul\":4027:4030   */\n      dup3\n        /* \"#utility.yul\":3938:4031   */\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4056:4058   */\n      0x40\n        /* \"#utility.yul\":4051:4054   */\n      dup3\n        /* \"#utility.yul\":4047:4059   */\n      add\n        /* \"#utility.yul\":4040:4059   */\n      swap1\n      pop\n        /* \"#utility.yul\":3699:4065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4071:4437   */\n    tag_297:\n        /* \"#utility.yul\":4213:4216   */\n      0x00\n        /* \"#utility.yul\":4234:4301   */\n      tag_299\n        /* \"#utility.yul\":4298:4300   */\n      0x20\n        /* \"#utility.yul\":4293:4296   */\n      dup4\n        /* \"#utility.yul\":4234:4301   */\n      tag_278\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4227:4301   */\n      swap2\n      pop\n        /* \"#utility.yul\":4310:4403   */\n      tag_300\n        /* \"#utility.yul\":4399:4402   */\n      dup3\n        /* \"#utility.yul\":4310:4403   */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4428:4430   */\n      0x20\n        /* \"#utility.yul\":4423:4426   */\n      dup3\n        /* \"#utility.yul\":4419:4431   */\n      add\n        /* \"#utility.yul\":4412:4431   */\n      swap1\n      pop\n        /* \"#utility.yul\":4071:4437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4443:4809   */\n    tag_302:\n        /* \"#utility.yul\":4585:4588   */\n      0x00\n        /* \"#utility.yul\":4606:4673   */\n      tag_304\n        /* \"#utility.yul\":4670:4672   */\n      0x17\n        /* \"#utility.yul\":4665:4668   */\n      dup4\n        /* \"#utility.yul\":4606:4673   */\n      tag_278\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4599:4673   */\n      swap2\n      pop\n        /* \"#utility.yul\":4682:4775   */\n      tag_305\n        /* \"#utility.yul\":4771:4774   */\n      dup3\n        /* \"#utility.yul\":4682:4775   */\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4800:4802   */\n      0x20\n        /* \"#utility.yul\":4795:4798   */\n      dup3\n        /* \"#utility.yul\":4791:4803   */\n      add\n        /* \"#utility.yul\":4784:4803   */\n      swap1\n      pop\n        /* \"#utility.yul\":4443:4809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4815:5181   */\n    tag_307:\n        /* \"#utility.yul\":4957:4960   */\n      0x00\n        /* \"#utility.yul\":4978:5045   */\n      tag_309\n        /* \"#utility.yul\":5042:5044   */\n      0x11\n        /* \"#utility.yul\":5037:5040   */\n      dup4\n        /* \"#utility.yul\":4978:5045   */\n      tag_278\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4971:5045   */\n      swap2\n      pop\n        /* \"#utility.yul\":5054:5147   */\n      tag_310\n        /* \"#utility.yul\":5143:5146   */\n      dup3\n        /* \"#utility.yul\":5054:5147   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5172:5174   */\n      0x20\n        /* \"#utility.yul\":5167:5170   */\n      dup3\n        /* \"#utility.yul\":5163:5175   */\n      add\n        /* \"#utility.yul\":5156:5175   */\n      swap1\n      pop\n        /* \"#utility.yul\":4815:5181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5187:5553   */\n    tag_312:\n        /* \"#utility.yul\":5329:5332   */\n      0x00\n        /* \"#utility.yul\":5350:5417   */\n      tag_314\n        /* \"#utility.yul\":5414:5416   */\n      0x1d\n        /* \"#utility.yul\":5409:5412   */\n      dup4\n        /* \"#utility.yul\":5350:5417   */\n      tag_278\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5343:5417   */\n      swap2\n      pop\n        /* \"#utility.yul\":5426:5519   */\n      tag_315\n        /* \"#utility.yul\":5515:5518   */\n      dup3\n        /* \"#utility.yul\":5426:5519   */\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5544:5546   */\n      0x20\n        /* \"#utility.yul\":5539:5542   */\n      dup3\n        /* \"#utility.yul\":5535:5547   */\n      add\n        /* \"#utility.yul\":5528:5547   */\n      swap1\n      pop\n        /* \"#utility.yul\":5187:5553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5559:5925   */\n    tag_317:\n        /* \"#utility.yul\":5701:5704   */\n      0x00\n        /* \"#utility.yul\":5722:5789   */\n      tag_319\n        /* \"#utility.yul\":5786:5788   */\n      0x1a\n        /* \"#utility.yul\":5781:5784   */\n      dup4\n        /* \"#utility.yul\":5722:5789   */\n      tag_278\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5715:5789   */\n      swap2\n      pop\n        /* \"#utility.yul\":5798:5891   */\n      tag_320\n        /* \"#utility.yul\":5887:5890   */\n      dup3\n        /* \"#utility.yul\":5798:5891   */\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5916:5918   */\n      0x20\n        /* \"#utility.yul\":5911:5914   */\n      dup3\n        /* \"#utility.yul\":5907:5919   */\n      add\n        /* \"#utility.yul\":5900:5919   */\n      swap1\n      pop\n        /* \"#utility.yul\":5559:5925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5931:6297   */\n    tag_322:\n        /* \"#utility.yul\":6073:6076   */\n      0x00\n        /* \"#utility.yul\":6094:6161   */\n      tag_324\n        /* \"#utility.yul\":6158:6160   */\n      0x2a\n        /* \"#utility.yul\":6153:6156   */\n      dup4\n        /* \"#utility.yul\":6094:6161   */\n      tag_278\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6087:6161   */\n      swap2\n      pop\n        /* \"#utility.yul\":6170:6263   */\n      tag_325\n        /* \"#utility.yul\":6259:6262   */\n      dup3\n        /* \"#utility.yul\":6170:6263   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6288:6290   */\n      0x40\n        /* \"#utility.yul\":6283:6286   */\n      dup3\n        /* \"#utility.yul\":6279:6291   */\n      add\n        /* \"#utility.yul\":6272:6291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5931:6297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6303:6421   */\n    tag_327:\n        /* \"#utility.yul\":6390:6414   */\n      tag_329\n        /* \"#utility.yul\":6408:6413   */\n      dup2\n        /* \"#utility.yul\":6390:6414   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6385:6388   */\n      dup3\n        /* \"#utility.yul\":6378:6415   */\n      mstore\n        /* \"#utility.yul\":6303:6421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6427:6698   */\n    tag_210:\n        /* \"#utility.yul\":6557:6560   */\n      0x00\n        /* \"#utility.yul\":6579:6672   */\n      tag_332\n        /* \"#utility.yul\":6668:6671   */\n      dup3\n        /* \"#utility.yul\":6659:6665   */\n      dup5\n        /* \"#utility.yul\":6579:6672   */\n      tag_265\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6572:6672   */\n      swap2\n      pop\n        /* \"#utility.yul\":6689:6692   */\n      dup2\n        /* \"#utility.yul\":6682:6692   */\n      swap1\n      pop\n        /* \"#utility.yul\":6427:6698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:6926   */\n    tag_40:\n        /* \"#utility.yul\":6797:6801   */\n      0x00\n        /* \"#utility.yul\":6835:6837   */\n      0x20\n        /* \"#utility.yul\":6824:6833   */\n      dup3\n        /* \"#utility.yul\":6820:6838   */\n      add\n        /* \"#utility.yul\":6812:6838   */\n      swap1\n      pop\n        /* \"#utility.yul\":6848:6919   */\n      tag_334\n        /* \"#utility.yul\":6916:6917   */\n      0x00\n        /* \"#utility.yul\":6905:6914   */\n      dup4\n        /* \"#utility.yul\":6901:6918   */\n      add\n        /* \"#utility.yul\":6892:6898   */\n      dup5\n        /* \"#utility.yul\":6848:6919   */\n      tag_257\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6704:6926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6932:7374   */\n    tag_187:\n        /* \"#utility.yul\":7081:7085   */\n      0x00\n        /* \"#utility.yul\":7119:7121   */\n      0x60\n        /* \"#utility.yul\":7108:7117   */\n      dup3\n        /* \"#utility.yul\":7104:7122   */\n      add\n        /* \"#utility.yul\":7096:7122   */\n      swap1\n      pop\n        /* \"#utility.yul\":7132:7203   */\n      tag_336\n        /* \"#utility.yul\":7200:7201   */\n      0x00\n        /* \"#utility.yul\":7189:7198   */\n      dup4\n        /* \"#utility.yul\":7185:7202   */\n      add\n        /* \"#utility.yul\":7176:7182   */\n      dup7\n        /* \"#utility.yul\":7132:7203   */\n      tag_257\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7213:7285   */\n      tag_337\n        /* \"#utility.yul\":7281:7283   */\n      0x20\n        /* \"#utility.yul\":7270:7279   */\n      dup4\n        /* \"#utility.yul\":7266:7284   */\n      add\n        /* \"#utility.yul\":7257:7263   */\n      dup6\n        /* \"#utility.yul\":7213:7285   */\n      tag_257\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7295:7367   */\n      tag_338\n        /* \"#utility.yul\":7363:7365   */\n      0x40\n        /* \"#utility.yul\":7352:7361   */\n      dup4\n        /* \"#utility.yul\":7348:7366   */\n      add\n        /* \"#utility.yul\":7339:7345   */\n      dup5\n        /* \"#utility.yul\":7295:7367   */\n      tag_327\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6932:7374   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7380:7712   */\n    tag_181:\n        /* \"#utility.yul\":7501:7505   */\n      0x00\n        /* \"#utility.yul\":7539:7541   */\n      0x40\n        /* \"#utility.yul\":7528:7537   */\n      dup3\n        /* \"#utility.yul\":7524:7542   */\n      add\n        /* \"#utility.yul\":7516:7542   */\n      swap1\n      pop\n        /* \"#utility.yul\":7552:7623   */\n      tag_340\n        /* \"#utility.yul\":7620:7621   */\n      0x00\n        /* \"#utility.yul\":7609:7618   */\n      dup4\n        /* \"#utility.yul\":7605:7622   */\n      add\n        /* \"#utility.yul\":7596:7602   */\n      dup6\n        /* \"#utility.yul\":7552:7623   */\n      tag_257\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7633:7705   */\n      tag_341\n        /* \"#utility.yul\":7701:7703   */\n      0x20\n        /* \"#utility.yul\":7690:7699   */\n      dup4\n        /* \"#utility.yul\":7686:7704   */\n      add\n        /* \"#utility.yul\":7677:7683   */\n      dup5\n        /* \"#utility.yul\":7633:7705   */\n      tag_327\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7380:7712   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7718:7928   */\n    tag_77:\n        /* \"#utility.yul\":7805:7809   */\n      0x00\n        /* \"#utility.yul\":7843:7845   */\n      0x20\n        /* \"#utility.yul\":7832:7841   */\n      dup3\n        /* \"#utility.yul\":7828:7846   */\n      add\n        /* \"#utility.yul\":7820:7846   */\n      swap1\n      pop\n        /* \"#utility.yul\":7856:7921   */\n      tag_343\n        /* \"#utility.yul\":7918:7919   */\n      0x00\n        /* \"#utility.yul\":7907:7916   */\n      dup4\n        /* \"#utility.yul\":7903:7920   */\n      add\n        /* \"#utility.yul\":7894:7900   */\n      dup5\n        /* \"#utility.yul\":7856:7921   */\n      tag_261\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7718:7928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7934:8247   */\n    tag_223:\n        /* \"#utility.yul\":8047:8051   */\n      0x00\n        /* \"#utility.yul\":8085:8087   */\n      0x20\n        /* \"#utility.yul\":8074:8083   */\n      dup3\n        /* \"#utility.yul\":8070:8088   */\n      add\n        /* \"#utility.yul\":8062:8088   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8143   */\n      dup2\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8144   */\n      sub\n        /* \"#utility.yul\":8120:8121   */\n      0x00\n        /* \"#utility.yul\":8109:8118   */\n      dup4\n        /* \"#utility.yul\":8105:8122   */\n      add\n        /* \"#utility.yul\":8098:8145   */\n      mstore\n        /* \"#utility.yul\":8162:8240   */\n      tag_345\n        /* \"#utility.yul\":8235:8239   */\n      dup2\n        /* \"#utility.yul\":8226:8232   */\n      dup5\n        /* \"#utility.yul\":8162:8240   */\n      tag_273\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8154:8240   */\n      swap1\n      pop\n        /* \"#utility.yul\":7934:8247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8253:8672   */\n    tag_175:\n        /* \"#utility.yul\":8419:8423   */\n      0x00\n        /* \"#utility.yul\":8457:8459   */\n      0x20\n        /* \"#utility.yul\":8446:8455   */\n      dup3\n        /* \"#utility.yul\":8442:8460   */\n      add\n        /* \"#utility.yul\":8434:8460   */\n      swap1\n      pop\n        /* \"#utility.yul\":8506:8515   */\n      dup2\n        /* \"#utility.yul\":8500:8504   */\n      dup2\n        /* \"#utility.yul\":8496:8516   */\n      sub\n        /* \"#utility.yul\":8492:8493   */\n      0x00\n        /* \"#utility.yul\":8481:8490   */\n      dup4\n        /* \"#utility.yul\":8477:8494   */\n      add\n        /* \"#utility.yul\":8470:8517   */\n      mstore\n        /* \"#utility.yul\":8534:8665   */\n      tag_347\n        /* \"#utility.yul\":8660:8664   */\n      dup2\n        /* \"#utility.yul\":8534:8665   */\n      tag_282\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8526:8665   */\n      swap1\n      pop\n        /* \"#utility.yul\":8253:8672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8678:9097   */\n    tag_161:\n        /* \"#utility.yul\":8844:8848   */\n      0x00\n        /* \"#utility.yul\":8882:8884   */\n      0x20\n        /* \"#utility.yul\":8871:8880   */\n      dup3\n        /* \"#utility.yul\":8867:8885   */\n      add\n        /* \"#utility.yul\":8859:8885   */\n      swap1\n      pop\n        /* \"#utility.yul\":8931:8940   */\n      dup2\n        /* \"#utility.yul\":8925:8929   */\n      dup2\n        /* \"#utility.yul\":8921:8941   */\n      sub\n        /* \"#utility.yul\":8917:8918   */\n      0x00\n        /* \"#utility.yul\":8906:8915   */\n      dup4\n        /* \"#utility.yul\":8902:8919   */\n      add\n        /* \"#utility.yul\":8895:8942   */\n      mstore\n        /* \"#utility.yul\":8959:9090   */\n      tag_349\n        /* \"#utility.yul\":9085:9089   */\n      dup2\n        /* \"#utility.yul\":8959:9090   */\n      tag_287\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8951:9090   */\n      swap1\n      pop\n        /* \"#utility.yul\":8678:9097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9103:9522   */\n    tag_203:\n        /* \"#utility.yul\":9269:9273   */\n      0x00\n        /* \"#utility.yul\":9307:9309   */\n      0x20\n        /* \"#utility.yul\":9296:9305   */\n      dup3\n        /* \"#utility.yul\":9292:9310   */\n      add\n        /* \"#utility.yul\":9284:9310   */\n      swap1\n      pop\n        /* \"#utility.yul\":9356:9365   */\n      dup2\n        /* \"#utility.yul\":9350:9354   */\n      dup2\n        /* \"#utility.yul\":9346:9366   */\n      sub\n        /* \"#utility.yul\":9342:9343   */\n      0x00\n        /* \"#utility.yul\":9331:9340   */\n      dup4\n        /* \"#utility.yul\":9327:9344   */\n      add\n        /* \"#utility.yul\":9320:9367   */\n      mstore\n        /* \"#utility.yul\":9384:9515   */\n      tag_351\n        /* \"#utility.yul\":9510:9514   */\n      dup2\n        /* \"#utility.yul\":9384:9515   */\n      tag_292\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":9376:9515   */\n      swap1\n      pop\n        /* \"#utility.yul\":9103:9522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9528:9947   */\n    tag_99:\n        /* \"#utility.yul\":9694:9698   */\n      0x00\n        /* \"#utility.yul\":9732:9734   */\n      0x20\n        /* \"#utility.yul\":9721:9730   */\n      dup3\n        /* \"#utility.yul\":9717:9735   */\n      add\n        /* \"#utility.yul\":9709:9735   */\n      swap1\n      pop\n        /* \"#utility.yul\":9781:9790   */\n      dup2\n        /* \"#utility.yul\":9775:9779   */\n      dup2\n        /* \"#utility.yul\":9771:9791   */\n      sub\n        /* \"#utility.yul\":9767:9768   */\n      0x00\n        /* \"#utility.yul\":9756:9765   */\n      dup4\n        /* \"#utility.yul\":9752:9769   */\n      add\n        /* \"#utility.yul\":9745:9792   */\n      mstore\n        /* \"#utility.yul\":9809:9940   */\n      tag_353\n        /* \"#utility.yul\":9935:9939   */\n      dup2\n        /* \"#utility.yul\":9809:9940   */\n      tag_297\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9801:9940   */\n      swap1\n      pop\n        /* \"#utility.yul\":9528:9947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9953:10372   */\n    tag_158:\n        /* \"#utility.yul\":10119:10123   */\n      0x00\n        /* \"#utility.yul\":10157:10159   */\n      0x20\n        /* \"#utility.yul\":10146:10155   */\n      dup3\n        /* \"#utility.yul\":10142:10160   */\n      add\n        /* \"#utility.yul\":10134:10160   */\n      swap1\n      pop\n        /* \"#utility.yul\":10206:10215   */\n      dup2\n        /* \"#utility.yul\":10200:10204   */\n      dup2\n        /* \"#utility.yul\":10196:10216   */\n      sub\n        /* \"#utility.yul\":10192:10193   */\n      0x00\n        /* \"#utility.yul\":10181:10190   */\n      dup4\n        /* \"#utility.yul\":10177:10194   */\n      add\n        /* \"#utility.yul\":10170:10217   */\n      mstore\n        /* \"#utility.yul\":10234:10365   */\n      tag_355\n        /* \"#utility.yul\":10360:10364   */\n      dup2\n        /* \"#utility.yul\":10234:10365   */\n      tag_302\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10226:10365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9953:10372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10378:10797   */\n    tag_109:\n        /* \"#utility.yul\":10544:10548   */\n      0x00\n        /* \"#utility.yul\":10582:10584   */\n      0x20\n        /* \"#utility.yul\":10571:10580   */\n      dup3\n        /* \"#utility.yul\":10567:10585   */\n      add\n        /* \"#utility.yul\":10559:10585   */\n      swap1\n      pop\n        /* \"#utility.yul\":10631:10640   */\n      dup2\n        /* \"#utility.yul\":10625:10629   */\n      dup2\n        /* \"#utility.yul\":10621:10641   */\n      sub\n        /* \"#utility.yul\":10617:10618   */\n      0x00\n        /* \"#utility.yul\":10606:10615   */\n      dup4\n        /* \"#utility.yul\":10602:10619   */\n      add\n        /* \"#utility.yul\":10595:10642   */\n      mstore\n        /* \"#utility.yul\":10659:10790   */\n      tag_357\n        /* \"#utility.yul\":10785:10789   */\n      dup2\n        /* \"#utility.yul\":10659:10790   */\n      tag_307\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10651:10790   */\n      swap1\n      pop\n        /* \"#utility.yul\":10378:10797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10803:11222   */\n    tag_208:\n        /* \"#utility.yul\":10969:10973   */\n      0x00\n        /* \"#utility.yul\":11007:11009   */\n      0x20\n        /* \"#utility.yul\":10996:11005   */\n      dup3\n        /* \"#utility.yul\":10992:11010   */\n      add\n        /* \"#utility.yul\":10984:11010   */\n      swap1\n      pop\n        /* \"#utility.yul\":11056:11065   */\n      dup2\n        /* \"#utility.yul\":11050:11054   */\n      dup2\n        /* \"#utility.yul\":11046:11066   */\n      sub\n        /* \"#utility.yul\":11042:11043   */\n      0x00\n        /* \"#utility.yul\":11031:11040   */\n      dup4\n        /* \"#utility.yul\":11027:11044   */\n      add\n        /* \"#utility.yul\":11020:11067   */\n      mstore\n        /* \"#utility.yul\":11084:11215   */\n      tag_359\n        /* \"#utility.yul\":11210:11214   */\n      dup2\n        /* \"#utility.yul\":11084:11215   */\n      tag_312\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11076:11215   */\n      swap1\n      pop\n        /* \"#utility.yul\":10803:11222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11228:11647   */\n    tag_153:\n        /* \"#utility.yul\":11394:11398   */\n      0x00\n        /* \"#utility.yul\":11432:11434   */\n      0x20\n        /* \"#utility.yul\":11421:11430   */\n      dup3\n        /* \"#utility.yul\":11417:11435   */\n      add\n        /* \"#utility.yul\":11409:11435   */\n      swap1\n      pop\n        /* \"#utility.yul\":11481:11490   */\n      dup2\n        /* \"#utility.yul\":11475:11479   */\n      dup2\n        /* \"#utility.yul\":11471:11491   */\n      sub\n        /* \"#utility.yul\":11467:11468   */\n      0x00\n        /* \"#utility.yul\":11456:11465   */\n      dup4\n        /* \"#utility.yul\":11452:11469   */\n      add\n        /* \"#utility.yul\":11445:11492   */\n      mstore\n        /* \"#utility.yul\":11509:11640   */\n      tag_361\n        /* \"#utility.yul\":11635:11639   */\n      dup2\n        /* \"#utility.yul\":11509:11640   */\n      tag_317\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":11501:11640   */\n      swap1\n      pop\n        /* \"#utility.yul\":11228:11647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11653:12072   */\n    tag_196:\n        /* \"#utility.yul\":11819:11823   */\n      0x00\n        /* \"#utility.yul\":11857:11859   */\n      0x20\n        /* \"#utility.yul\":11846:11855   */\n      dup3\n        /* \"#utility.yul\":11842:11860   */\n      add\n        /* \"#utility.yul\":11834:11860   */\n      swap1\n      pop\n        /* \"#utility.yul\":11906:11915   */\n      dup2\n        /* \"#utility.yul\":11900:11904   */\n      dup2\n        /* \"#utility.yul\":11896:11916   */\n      sub\n        /* \"#utility.yul\":11892:11893   */\n      0x00\n        /* \"#utility.yul\":11881:11890   */\n      dup4\n        /* \"#utility.yul\":11877:11894   */\n      add\n        /* \"#utility.yul\":11870:11917   */\n      mstore\n        /* \"#utility.yul\":11934:12065   */\n      tag_363\n        /* \"#utility.yul\":12060:12064   */\n      dup2\n        /* \"#utility.yul\":11934:12065   */\n      tag_322\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11926:12065   */\n      swap1\n      pop\n        /* \"#utility.yul\":11653:12072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12078:12300   */\n    tag_26:\n        /* \"#utility.yul\":12171:12175   */\n      0x00\n        /* \"#utility.yul\":12209:12211   */\n      0x20\n        /* \"#utility.yul\":12198:12207   */\n      dup3\n        /* \"#utility.yul\":12194:12212   */\n      add\n        /* \"#utility.yul\":12186:12212   */\n      swap1\n      pop\n        /* \"#utility.yul\":12222:12293   */\n      tag_365\n        /* \"#utility.yul\":12290:12291   */\n      0x00\n        /* \"#utility.yul\":12279:12288   */\n      dup4\n        /* \"#utility.yul\":12275:12292   */\n      add\n        /* \"#utility.yul\":12266:12272   */\n      dup5\n        /* \"#utility.yul\":12222:12293   */\n      tag_327\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":12078:12300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12387:12485   */\n    tag_268:\n        /* \"#utility.yul\":12438:12444   */\n      0x00\n        /* \"#utility.yul\":12472:12477   */\n      dup2\n        /* \"#utility.yul\":12466:12478   */\n      mload\n        /* \"#utility.yul\":12456:12478   */\n      swap1\n      pop\n        /* \"#utility.yul\":12387:12485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12491:12590   */\n    tag_276:\n        /* \"#utility.yul\":12543:12549   */\n      0x00\n        /* \"#utility.yul\":12577:12582   */\n      dup2\n        /* \"#utility.yul\":12571:12583   */\n      mload\n        /* \"#utility.yul\":12561:12583   */\n      swap1\n      pop\n        /* \"#utility.yul\":12491:12590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12596:12743   */\n    tag_270:\n        /* \"#utility.yul\":12697:12708   */\n      0x00\n        /* \"#utility.yul\":12734:12737   */\n      dup2\n        /* \"#utility.yul\":12719:12737   */\n      swap1\n      pop\n        /* \"#utility.yul\":12596:12743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:12918   */\n    tag_278:\n        /* \"#utility.yul\":12833:12844   */\n      0x00\n        /* \"#utility.yul\":12867:12873   */\n      dup3\n        /* \"#utility.yul\":12862:12865   */\n      dup3\n        /* \"#utility.yul\":12855:12874   */\n      mstore\n        /* \"#utility.yul\":12907:12911   */\n      0x20\n        /* \"#utility.yul\":12902:12905   */\n      dup3\n        /* \"#utility.yul\":12898:12912   */\n      add\n        /* \"#utility.yul\":12883:12912   */\n      swap1\n      pop\n        /* \"#utility.yul\":12749:12918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12924:13229   */\n    tag_166:\n        /* \"#utility.yul\":12964:12967   */\n      0x00\n        /* \"#utility.yul\":12983:13003   */\n      tag_373\n        /* \"#utility.yul\":13001:13002   */\n      dup3\n        /* \"#utility.yul\":12983:13003   */\n      tag_330\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12978:13003   */\n      swap2\n      pop\n        /* \"#utility.yul\":13017:13037   */\n      tag_374\n        /* \"#utility.yul\":13035:13036   */\n      dup4\n        /* \"#utility.yul\":13017:13037   */\n      tag_330\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":13012:13037   */\n      swap3\n      pop\n        /* \"#utility.yul\":13171:13172   */\n      dup3\n        /* \"#utility.yul\":13103:13169   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13099:13173   */\n      sub\n        /* \"#utility.yul\":13096:13097   */\n      dup3\n        /* \"#utility.yul\":13093:13174   */\n      gt\n        /* \"#utility.yul\":13090:13197   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":13177:13195   */\n      tag_376\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":13090:13197   */\n    tag_375:\n        /* \"#utility.yul\":13221:13222   */\n      dup3\n        /* \"#utility.yul\":13218:13219   */\n      dup3\n        /* \"#utility.yul\":13214:13223   */\n      add\n        /* \"#utility.yul\":13207:13223   */\n      swap1\n      pop\n        /* \"#utility.yul\":12924:13229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13235:13583   */\n    tag_145:\n        /* \"#utility.yul\":13275:13282   */\n      0x00\n        /* \"#utility.yul\":13298:13318   */\n      tag_379\n        /* \"#utility.yul\":13316:13317   */\n      dup3\n        /* \"#utility.yul\":13298:13318   */\n      tag_330\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":13293:13318   */\n      swap2\n      pop\n        /* \"#utility.yul\":13332:13352   */\n      tag_380\n        /* \"#utility.yul\":13350:13351   */\n      dup4\n        /* \"#utility.yul\":13332:13352   */\n      tag_330\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":13327:13352   */\n      swap3\n      pop\n        /* \"#utility.yul\":13520:13521   */\n      dup2\n        /* \"#utility.yul\":13452:13518   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13448:13522   */\n      div\n        /* \"#utility.yul\":13445:13446   */\n      dup4\n        /* \"#utility.yul\":13442:13523   */\n      gt\n        /* \"#utility.yul\":13437:13438   */\n      dup3\n        /* \"#utility.yul\":13430:13439   */\n      iszero\n        /* \"#utility.yul\":13423:13440   */\n      iszero\n        /* \"#utility.yul\":13419:13524   */\n      and\n        /* \"#utility.yul\":13416:13547   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":13527:13545   */\n      tag_382\n      tag_377\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":13416:13547   */\n    tag_381:\n        /* \"#utility.yul\":13575:13576   */\n      dup3\n        /* \"#utility.yul\":13572:13573   */\n      dup3\n        /* \"#utility.yul\":13568:13577   */\n      mul\n        /* \"#utility.yul\":13557:13577   */\n      swap1\n      pop\n        /* \"#utility.yul\":13235:13583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13589:13685   */\n    tag_260:\n        /* \"#utility.yul\":13626:13633   */\n      0x00\n        /* \"#utility.yul\":13655:13679   */\n      tag_384\n        /* \"#utility.yul\":13673:13678   */\n      dup3\n        /* \"#utility.yul\":13655:13679   */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":13644:13679   */\n      swap1\n      pop\n        /* \"#utility.yul\":13589:13685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13691:13781   */\n    tag_264:\n        /* \"#utility.yul\":13725:13732   */\n      0x00\n        /* \"#utility.yul\":13768:13773   */\n      dup2\n        /* \"#utility.yul\":13761:13774   */\n      iszero\n        /* \"#utility.yul\":13754:13775   */\n      iszero\n        /* \"#utility.yul\":13743:13775   */\n      swap1\n      pop\n        /* \"#utility.yul\":13691:13781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13787:13913   */\n    tag_385:\n        /* \"#utility.yul\":13824:13831   */\n      0x00\n        /* \"#utility.yul\":13864:13906   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13857:13862   */\n      dup3\n        /* \"#utility.yul\":13853:13907   */\n      and\n        /* \"#utility.yul\":13842:13907   */\n      swap1\n      pop\n        /* \"#utility.yul\":13787:13913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13919:13996   */\n    tag_330:\n        /* \"#utility.yul\":13956:13963   */\n      0x00\n        /* \"#utility.yul\":13985:13990   */\n      dup2\n        /* \"#utility.yul\":13974:13990   */\n      swap1\n      pop\n        /* \"#utility.yul\":13919:13996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14002:14309   */\n    tag_272:\n        /* \"#utility.yul\":14070:14071   */\n      0x00\n        /* \"#utility.yul\":14080:14193   */\n    tag_390:\n        /* \"#utility.yul\":14094:14100   */\n      dup4\n        /* \"#utility.yul\":14091:14092   */\n      dup2\n        /* \"#utility.yul\":14088:14101   */\n      lt\n        /* \"#utility.yul\":14080:14193   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":14179:14180   */\n      dup1\n        /* \"#utility.yul\":14174:14177   */\n      dup3\n        /* \"#utility.yul\":14170:14181   */\n      add\n        /* \"#utility.yul\":14164:14182   */\n      mload\n        /* \"#utility.yul\":14160:14161   */\n      dup2\n        /* \"#utility.yul\":14155:14158   */\n      dup5\n        /* \"#utility.yul\":14151:14162   */\n      add\n        /* \"#utility.yul\":14144:14183   */\n      mstore\n        /* \"#utility.yul\":14116:14118   */\n      0x20\n        /* \"#utility.yul\":14113:14114   */\n      dup2\n        /* \"#utility.yul\":14109:14119   */\n      add\n        /* \"#utility.yul\":14104:14119   */\n      swap1\n      pop\n        /* \"#utility.yul\":14080:14193   */\n      jump(tag_390)\n    tag_392:\n        /* \"#utility.yul\":14211:14217   */\n      dup4\n        /* \"#utility.yul\":14208:14209   */\n      dup2\n        /* \"#utility.yul\":14205:14218   */\n      gt\n        /* \"#utility.yul\":14202:14303   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":14291:14292   */\n      0x00\n        /* \"#utility.yul\":14282:14288   */\n      dup5\n        /* \"#utility.yul\":14277:14280   */\n      dup5\n        /* \"#utility.yul\":14273:14289   */\n      add\n        /* \"#utility.yul\":14266:14293   */\n      mstore\n        /* \"#utility.yul\":14202:14303   */\n    tag_393:\n        /* \"#utility.yul\":14051:14309   */\n      pop\n        /* \"#utility.yul\":14002:14309   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14315:14495   */\n    tag_377:\n        /* \"#utility.yul\":14363:14440   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14360:14361   */\n      0x00\n        /* \"#utility.yul\":14353:14441   */\n      mstore\n        /* \"#utility.yul\":14460:14464   */\n      0x11\n        /* \"#utility.yul\":14457:14458   */\n      0x04\n        /* \"#utility.yul\":14450:14465   */\n      mstore\n        /* \"#utility.yul\":14484:14488   */\n      0x24\n        /* \"#utility.yul\":14481:14482   */\n      0x00\n        /* \"#utility.yul\":14474:14489   */\n      revert\n        /* \"#utility.yul\":14624:14741   */\n    tag_243:\n        /* \"#utility.yul\":14733:14734   */\n      0x00\n        /* \"#utility.yul\":14730:14731   */\n      dup1\n        /* \"#utility.yul\":14723:14735   */\n      revert\n        /* \"#utility.yul\":14747:14849   */\n    tag_281:\n        /* \"#utility.yul\":14788:14794   */\n      0x00\n        /* \"#utility.yul\":14839:14841   */\n      0x1f\n        /* \"#utility.yul\":14835:14842   */\n      not\n        /* \"#utility.yul\":14830:14832   */\n      0x1f\n        /* \"#utility.yul\":14823:14828   */\n      dup4\n        /* \"#utility.yul\":14819:14833   */\n      add\n        /* \"#utility.yul\":14815:14843   */\n      and\n        /* \"#utility.yul\":14805:14843   */\n      swap1\n      pop\n        /* \"#utility.yul\":14747:14849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14855:15080   */\n    tag_286:\n        /* \"#utility.yul\":14995:15029   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14991:14992   */\n      0x00\n        /* \"#utility.yul\":14983:14989   */\n      dup3\n        /* \"#utility.yul\":14979:14993   */\n      add\n        /* \"#utility.yul\":14972:15030   */\n      mstore\n        /* \"#utility.yul\":15064:15072   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15059:15061   */\n      0x20\n        /* \"#utility.yul\":15051:15057   */\n      dup3\n        /* \"#utility.yul\":15047:15062   */\n      add\n        /* \"#utility.yul\":15040:15073   */\n      mstore\n        /* \"#utility.yul\":14855:15080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15086:15250   */\n    tag_291:\n        /* \"#utility.yul\":15226:15242   */\n      0x53616c652068617320656e646564000000000000000000000000000000000000\n        /* \"#utility.yul\":15222:15223   */\n      0x00\n        /* \"#utility.yul\":15214:15220   */\n      dup3\n        /* \"#utility.yul\":15210:15224   */\n      add\n        /* \"#utility.yul\":15203:15243   */\n      mstore\n        /* \"#utility.yul\":15086:15250   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15256:15481   */\n    tag_296:\n        /* \"#utility.yul\":15396:15430   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":15392:15393   */\n      0x00\n        /* \"#utility.yul\":15384:15390   */\n      dup3\n        /* \"#utility.yul\":15380:15394   */\n      add\n        /* \"#utility.yul\":15373:15431   */\n      mstore\n        /* \"#utility.yul\":15465:15473   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15460:15462   */\n      0x20\n        /* \"#utility.yul\":15452:15458   */\n      dup3\n        /* \"#utility.yul\":15448:15463   */\n      add\n        /* \"#utility.yul\":15441:15474   */\n      mstore\n        /* \"#utility.yul\":15256:15481   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15487:15669   */\n    tag_301:\n        /* \"#utility.yul\":15627:15661   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15623:15624   */\n      0x00\n        /* \"#utility.yul\":15615:15621   */\n      dup3\n        /* \"#utility.yul\":15611:15625   */\n      add\n        /* \"#utility.yul\":15604:15662   */\n      mstore\n        /* \"#utility.yul\":15487:15669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:15848   */\n    tag_306:\n        /* \"#utility.yul\":15815:15840   */\n      0x53616c65206861736e2774207374617274656420796574000000000000000000\n        /* \"#utility.yul\":15811:15812   */\n      0x00\n        /* \"#utility.yul\":15803:15809   */\n      dup3\n        /* \"#utility.yul\":15799:15813   */\n      add\n        /* \"#utility.yul\":15792:15841   */\n      mstore\n        /* \"#utility.yul\":15675:15848   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15854:16021   */\n    tag_311:\n        /* \"#utility.yul\":15994:16013   */\n      0x53616c65206861736e277420656e646564000000000000000000000000000000\n        /* \"#utility.yul\":15990:15991   */\n      0x00\n        /* \"#utility.yul\":15982:15988   */\n      dup3\n        /* \"#utility.yul\":15978:15992   */\n      add\n        /* \"#utility.yul\":15971:16014   */\n      mstore\n        /* \"#utility.yul\":15854:16021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16027:16206   */\n    tag_316:\n        /* \"#utility.yul\":16167:16198   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":16163:16164   */\n      0x00\n        /* \"#utility.yul\":16155:16161   */\n      dup3\n        /* \"#utility.yul\":16151:16165   */\n      add\n        /* \"#utility.yul\":16144:16199   */\n      mstore\n        /* \"#utility.yul\":16027:16206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16212:16388   */\n    tag_321:\n        /* \"#utility.yul\":16352:16380   */\n      0x4e6f7420656e6f75676820746f6b656e20746f2072657475726e000000000000\n        /* \"#utility.yul\":16348:16349   */\n      0x00\n        /* \"#utility.yul\":16340:16346   */\n      dup3\n        /* \"#utility.yul\":16336:16350   */\n      add\n        /* \"#utility.yul\":16329:16381   */\n      mstore\n        /* \"#utility.yul\":16212:16388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16394:16623   */\n    tag_326:\n        /* \"#utility.yul\":16534:16568   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":16530:16531   */\n      0x00\n        /* \"#utility.yul\":16522:16528   */\n      dup3\n        /* \"#utility.yul\":16518:16532   */\n      add\n        /* \"#utility.yul\":16511:16569   */\n      mstore\n        /* \"#utility.yul\":16603:16615   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16598:16600   */\n      0x20\n        /* \"#utility.yul\":16590:16596   */\n      dup3\n        /* \"#utility.yul\":16586:16601   */\n      add\n        /* \"#utility.yul\":16579:16616   */\n      mstore\n        /* \"#utility.yul\":16394:16623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16629:16751   */\n    tag_228:\n        /* \"#utility.yul\":16702:16726   */\n      tag_409\n        /* \"#utility.yul\":16720:16725   */\n      dup2\n        /* \"#utility.yul\":16702:16726   */\n      tag_260\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":16695:16700   */\n      dup2\n        /* \"#utility.yul\":16692:16727   */\n      eq\n        /* \"#utility.yul\":16682:16745   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":16741:16742   */\n      0x00\n        /* \"#utility.yul\":16738:16739   */\n      dup1\n        /* \"#utility.yul\":16731:16743   */\n      revert\n        /* \"#utility.yul\":16682:16745   */\n    tag_410:\n        /* \"#utility.yul\":16629:16751   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16757:16873   */\n    tag_232:\n        /* \"#utility.yul\":16827:16848   */\n      tag_412\n        /* \"#utility.yul\":16842:16847   */\n      dup2\n        /* \"#utility.yul\":16827:16848   */\n      tag_264\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":16820:16825   */\n      dup2\n        /* \"#utility.yul\":16817:16849   */\n      eq\n        /* \"#utility.yul\":16807:16867   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":16863:16864   */\n      0x00\n        /* \"#utility.yul\":16860:16861   */\n      dup1\n        /* \"#utility.yul\":16853:16865   */\n      revert\n        /* \"#utility.yul\":16807:16867   */\n    tag_413:\n        /* \"#utility.yul\":16757:16873   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16879:17001   */\n    tag_236:\n        /* \"#utility.yul\":16952:16976   */\n      tag_415\n        /* \"#utility.yul\":16970:16975   */\n      dup2\n        /* \"#utility.yul\":16952:16976   */\n      tag_330\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":16945:16950   */\n      dup2\n        /* \"#utility.yul\":16942:16977   */\n      eq\n        /* \"#utility.yul\":16932:16995   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":16991:16992   */\n      0x00\n        /* \"#utility.yul\":16988:16989   */\n      dup1\n        /* \"#utility.yul\":16981:16993   */\n      revert\n        /* \"#utility.yul\":16932:16995   */\n    tag_416:\n        /* \"#utility.yul\":16879:17001   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bd8d70a0b92e4f6a710a04c8c1ddb6a05da5677f167009c1e2fbfa83c89fa3ed64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_780": {
									"entryPoint": null,
									"id": 780,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_msgSender_713": {
									"entryPoint": 259,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 267,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2185:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:6",
														"type": ""
													}
												],
												"src": "156:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "450:832:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "497:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "499:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "499:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "499:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "471:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "480:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "467:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "463:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:33:6"
															},
															"nodeType": "YulIf",
															"src": "460:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "590:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "605:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "619:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "609:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "634:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "680:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "691:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "676:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "676:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "700:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "644:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "644:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "634:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "728:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "743:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "747:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "773:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "819:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "830:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "815:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "815:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "839:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "783:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "773:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "867:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "882:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "896:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "886:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "912:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "958:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "969:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "954:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "954:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "978:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "922:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "922:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "912:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1006:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1021:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1025:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1051:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1097:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1108:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1093:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1093:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1117:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1061:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1051:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1145:130:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1160:17:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1164:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1191:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1237:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1248:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1233:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1233:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1257:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1201:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1191:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "388:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "399:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "411:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "419:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "427:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "435:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "443:6:6",
														"type": ""
													}
												],
												"src": "305:977:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1338:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1354:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1348:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1338:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1321:6:6",
														"type": ""
													}
												],
												"src": "1288:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1414:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1424:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1453:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1435:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1435:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1424:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1396:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1406:7:6",
														"type": ""
													}
												],
												"src": "1369:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1516:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1526:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1541:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1548:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1537:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1537:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1526:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1498:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1508:7:6",
														"type": ""
													}
												],
												"src": "1471:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1648:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1658:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1669:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1658:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1630:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1640:7:6",
														"type": ""
													}
												],
												"src": "1603:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1775:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1795:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1785:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1785:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1686:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1898:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1915:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1918:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1908:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1908:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1908:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1809:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1975:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2032:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2044:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2034:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2034:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1998:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2023:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2005:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2005:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1995:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1995:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1988:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:43:6"
															},
															"nodeType": "YulIf",
															"src": "1985:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1968:5:6",
														"type": ""
													}
												],
												"src": "1932:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2160:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2169:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2172:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2162:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2162:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2162:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2151:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2133:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2133:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2123:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:43:6"
															},
															"nodeType": "YulIf",
															"src": "2113:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2096:5:6",
														"type": ""
													}
												],
												"src": "2060:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001d6838038062001d688339818101604052810190620000379190620001fd565b620000576200004b6200010360201b60201c565b6200010b60201b60201c565b62000068856200010b60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600281905550816003819055505050505050620002fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001e081620002c8565b92915050565b600081519050620001f781620002e2565b92915050565b600080600080600060a086880312156200021c576200021b620002c3565b5b60006200022c88828901620001cf565b95505060206200023f88828901620001cf565b94505060406200025288828901620001e6565b93505060606200026588828901620001e6565b92505060806200027888828901620001cf565b9150509295509295909350565b6000620002928262000299565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b620002d38162000285565b8114620002df57600080fd5b50565b620002ed81620002b9565b8114620002f957600080fd5b50565b611a5c806200030c6000396000f3fe6080604052600436106100e85760003560e01c8063893d20e81161008a578063c10b935811610059578063c10b9358146102d0578063de2d583a146102fb578063efef39a11461032b578063f2fde38b14610354576100e8565b8063893d20e8146102245780638da5cb5b1461024f5780639d76ea581461027a578063ab0bcc41146102a5576100e8565b806361778592116100c6578063617785921461017c578063617fba04146101a75780636f9c6149146101e4578063715018a61461020d576100e8565b806324076451146100ed578063295e4edf1461012a57806351cff8d914610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906111cc565b61037d565b6040516101219190611641565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190611226565b610431565b005b34801561015f57600080fd5b5061017a600480360381019061017591906111cc565b6104b7565b005b34801561018857600080fd5b50610191610693565b60405161019e9190611469565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c991906111cc565b6106b9565b6040516101db9190611641565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190611226565b610702565b005b34801561021957600080fd5b50610222610788565b005b34801561023057600080fd5b50610239610810565b6040516102469190611469565b60405180910390f35b34801561025b57600080fd5b5061026461081f565b6040516102719190611469565b60405180910390f35b34801561028657600080fd5b5061028f610848565b60405161029c9190611469565b60405180910390f35b3480156102b157600080fd5b506102ba610872565b6040516102c79190611641565b60405180910390f35b3480156102dc57600080fd5b506102e561087c565b6040516102f29190611641565b60405180910390f35b610315600480360381019061031091906111cc565b610886565b60405161032291906114e4565b60405180910390f35b34801561033757600080fd5b50610352600480360381019061034d9190611226565b610ac1565b005b34801561036057600080fd5b5061037b600480360381019061037691906111cc565b610c28565b005b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103da9190611469565b60206040518083038186803b1580156103f257600080fd5b505afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190611253565b9050919050565b610439610d20565b73ffffffffffffffffffffffffffffffffffffffff1661045761081f565b73ffffffffffffffffffffffffffffffffffffffff16146104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490611581565b60405180910390fd5b8060028190555050565b6104bf610d20565b73ffffffffffffffffffffffffffffffffffffffff166104dd61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a90611581565b60405180910390fd5b6003544211610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e906115c1565b60405180910390fd5b61069081600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016105f89190611469565b60206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106489190611253565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d289092919063ffffffff16565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61070a610d20565b73ffffffffffffffffffffffffffffffffffffffff1661072861081f565b73ffffffffffffffffffffffffffffffffffffffff161461077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590611581565b60405180910390fd5b8060038190555050565b610790610d20565b73ffffffffffffffffffffffffffffffffffffffff166107ae61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611581565b60405180910390fd5b61080e6000610dae565b565b600061081a61081f565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600254905090565b6000600354905090565b6000610890610d20565b73ffffffffffffffffffffffffffffffffffffffff166108ae61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611581565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050670de0b6b3a76400008161095c91906116e4565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016109d99190611469565b60206040518083038186803b1580156109f157600080fd5b505afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a299190611253565b1015610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190611601565b60405180910390fd5b610ab78382600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d289092919063ffffffff16565b6001915050919050565b600254421015610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd906115a1565b60405180910390fd5b600354421115610b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4290611541565b60405180910390fd5b610bbc33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e72909392919063ffffffff16565b670de0b6b3a764000081610bd091906116e4565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1e919061168e565b9250508190555050565b610c30610d20565b73ffffffffffffffffffffffffffffffffffffffff16610c4e61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9b90611581565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b90611521565b60405180910390fd5b610d1d81610dae565b50565b600033905090565b610da98363a9059cbb60e01b8484604051602401610d479291906114bb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610efb565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ef5846323b872dd60e01b858585604051602401610e9393929190611484565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610efb565b50505050565b6000610f5d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610fc29092919063ffffffff16565b9050600081511115610fbd5780806020019051810190610f7d91906111f9565b610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb390611621565b60405180910390fd5b5b505050565b6060610fd18484600085610fda565b90509392505050565b60608247101561101f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101690611561565b60405180910390fd5b611028856110ee565b611067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105e906115e1565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110909190611452565b60006040518083038185875af1925050503d80600081146110cd576040519150601f19603f3d011682016040523d82523d6000602084013e6110d2565b606091505b50915091506110e2828286611111565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561112157829050611171565b6000835111156111345782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116891906114ff565b60405180910390fd5b9392505050565b600081359050611187816119e1565b92915050565b60008151905061119c816119f8565b92915050565b6000813590506111b181611a0f565b92915050565b6000815190506111c681611a0f565b92915050565b6000602082840312156111e2576111e16117e8565b5b60006111f084828501611178565b91505092915050565b60006020828403121561120f5761120e6117e8565b5b600061121d8482850161118d565b91505092915050565b60006020828403121561123c5761123b6117e8565b5b600061124a848285016111a2565b91505092915050565b600060208284031215611269576112686117e8565b5b6000611277848285016111b7565b91505092915050565b6112898161173e565b82525050565b61129881611750565b82525050565b60006112a98261165c565b6112b38185611672565b93506112c3818560208601611786565b80840191505092915050565b60006112da82611667565b6112e4818561167d565b93506112f4818560208601611786565b6112fd816117ed565b840191505092915050565b600061131560268361167d565b9150611320826117fe565b604082019050919050565b6000611338600e8361167d565b91506113438261184d565b602082019050919050565b600061135b60268361167d565b915061136682611876565b604082019050919050565b600061137e60208361167d565b9150611389826118c5565b602082019050919050565b60006113a160178361167d565b91506113ac826118ee565b602082019050919050565b60006113c460118361167d565b91506113cf82611917565b602082019050919050565b60006113e7601d8361167d565b91506113f282611940565b602082019050919050565b600061140a601a8361167d565b915061141582611969565b602082019050919050565b600061142d602a8361167d565b915061143882611992565b604082019050919050565b61144c8161177c565b82525050565b600061145e828461129e565b915081905092915050565b600060208201905061147e6000830184611280565b92915050565b60006060820190506114996000830186611280565b6114a66020830185611280565b6114b36040830184611443565b949350505050565b60006040820190506114d06000830185611280565b6114dd6020830184611443565b9392505050565b60006020820190506114f9600083018461128f565b92915050565b6000602082019050818103600083015261151981846112cf565b905092915050565b6000602082019050818103600083015261153a81611308565b9050919050565b6000602082019050818103600083015261155a8161132b565b9050919050565b6000602082019050818103600083015261157a8161134e565b9050919050565b6000602082019050818103600083015261159a81611371565b9050919050565b600060208201905081810360008301526115ba81611394565b9050919050565b600060208201905081810360008301526115da816113b7565b9050919050565b600060208201905081810360008301526115fa816113da565b9050919050565b6000602082019050818103600083015261161a816113fd565b9050919050565b6000602082019050818103600083015261163a81611420565b9050919050565b60006020820190506116566000830184611443565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006116998261177c565b91506116a48361177c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116d9576116d86117b9565b5b828201905092915050565b60006116ef8261177c565b91506116fa8361177c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611733576117326117b9565b5b828202905092915050565b60006117498261175c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156117a4578082015181840152602081019050611789565b838111156117b3576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53616c652068617320656e646564000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53616c65206861736e2774207374617274656420796574000000000000000000600082015250565b7f53616c65206861736e277420656e646564000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4e6f7420656e6f75676820746f6b656e20746f2072657475726e000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6119ea8161173e565b81146119f557600080fd5b50565b611a0181611750565b8114611a0c57600080fd5b50565b611a188161177c565b8114611a2357600080fd5b5056fea2646970667358221220bd8d70a0b92e4f6a710a04c8c1ddb6a05da5677f167009c1e2fbfa83c89fa3ed64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D68 CODESIZE SUB DUP1 PUSH3 0x1D68 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1FD JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x103 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x68 DUP6 PUSH3 0x10B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x2FC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E0 DUP2 PUSH3 0x2C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F7 DUP2 PUSH3 0x2E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x21C JUMPI PUSH3 0x21B PUSH3 0x2C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x22C DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x23F DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x252 DUP9 DUP3 DUP10 ADD PUSH3 0x1E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x265 DUP9 DUP3 DUP10 ADD PUSH3 0x1E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x278 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x292 DUP3 PUSH3 0x299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2D3 DUP2 PUSH3 0x285 JUMP JUMPDEST DUP2 EQ PUSH3 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2ED DUP2 PUSH3 0x2B9 JUMP JUMPDEST DUP2 EQ PUSH3 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A5C DUP1 PUSH3 0x30C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC10B9358 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC10B9358 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDE2D583A EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xEFEF39A1 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xAB0BCC41 EQ PUSH2 0x2A5 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x61778592 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x61778592 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x617FBA04 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x6F9C6149 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20D JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x24076451 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x295E4EDF EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x457 PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4BF PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DD PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56E SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x690 DUP2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x624 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD28 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70A PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x728 PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x790 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AE PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80E PUSH1 0x0 PUSH2 0xDAE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81A PUSH2 0x81F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8AE PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST LT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB7 DUP4 DUP3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD28 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xB4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB42 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBBC CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE72 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC30 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4E PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9B SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1D DUP2 PUSH2 0xDAE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA9 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD47 SWAP3 SWAP2 SWAP1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xEFB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEF5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xEFB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xFBD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFD1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x101F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1016 SWAP1 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1028 DUP6 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1067 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105E SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10E2 DUP3 DUP3 DUP7 PUSH2 0x1111 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1121 JUMPI DUP3 SWAP1 POP PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1134 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1187 DUP2 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x119C DUP2 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B1 DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C6 DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E1 PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F0 DUP5 DUP3 DUP6 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x121D DUP5 DUP3 DUP6 ADD PUSH2 0x118D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x124A DUP5 DUP3 DUP6 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1277 DUP5 DUP3 DUP6 ADD PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1289 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1298 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP3 PUSH2 0x165C JUMP JUMPDEST PUSH2 0x12B3 DUP2 DUP6 PUSH2 0x1672 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1786 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP3 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x12E4 DUP2 DUP6 PUSH2 0x167D JUMP JUMPDEST SWAP4 POP PUSH2 0x12F4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1315 PUSH1 0x26 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1320 DUP3 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1338 PUSH1 0xE DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1343 DUP3 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B PUSH1 0x26 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1366 DUP3 PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137E PUSH1 0x20 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1389 DUP3 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x17 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x13AC DUP3 PUSH2 0x18EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C4 PUSH1 0x11 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x13CF DUP3 PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E7 PUSH1 0x1D DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP3 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140A PUSH1 0x1A DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1415 DUP3 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142D PUSH1 0x2A DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1438 DUP3 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x177C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145E DUP3 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1499 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x14A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x14B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x14DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x128F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1519 DUP2 DUP5 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x155A DUP2 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157A DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159A DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BA DUP2 PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DA DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FA DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161A DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163A DUP2 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1656 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0x177C JUMP JUMPDEST SWAP2 POP PUSH2 0x16A4 DUP4 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x17B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EF DUP3 PUSH2 0x177C JUMP JUMPDEST SWAP2 POP PUSH2 0x16FA DUP4 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x17B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP3 PUSH2 0x175C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1789 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C652068617320656E646564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E2774207374617274656420796574000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E277420656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E20746F2072657475726E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x173E JUMP JUMPDEST DUP2 EQ PUSH2 0x19F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A01 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x177C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD DUP14 PUSH17 0xA0B92E4F6A710A04C8C1DDB6A05DA5677F AND PUSH17 0x9C1E2FBFA83C89FA3ED64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:2516:5:-:0;;;478:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;591:26:5;610:6;591:18;;;:26;;:::i;:::-;640:12;624:13;;:28;;;;;;;;;;;;;;;;;;675:13;659;;:29;;;;;;;;;;;;;;;;;;708:10;695;:23;;;;736:8;725;:19;;;;478:272;;;;;241:2516;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:143:6:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:977::-;411:6;419;427;435;443;492:3;480:9;471:7;467:23;463:33;460:120;;;499:79;;:::i;:::-;460:120;619:1;644:64;700:7;691:6;680:9;676:22;644:64;:::i;:::-;634:74;;590:128;757:2;783:64;839:7;830:6;819:9;815:22;783:64;:::i;:::-;773:74;;728:129;896:2;922:64;978:7;969:6;958:9;954:22;922:64;:::i;:::-;912:74;;867:129;1035:2;1061:64;1117:7;1108:6;1097:9;1093:22;1061:64;:::i;:::-;1051:74;;1006:129;1174:3;1201:64;1257:7;1248:6;1237:9;1233:22;1201:64;:::i;:::-;1191:74;;1145:130;305:977;;;;;;;;:::o;1369:96::-;1406:7;1435:24;1453:5;1435:24;:::i;:::-;1424:35;;1369:96;;;:::o;1471:126::-;1508:7;1548:42;1541:5;1537:54;1526:65;;1471:126;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1809:117::-;1918:1;1915;1908:12;1932:122;2005:24;2023:5;2005:24;:::i;:::-;1998:5;1995:35;1985:63;;2044:1;2041;2034:12;1985:63;1932:122;:::o;2060:::-;2133:24;2151:5;2133:24;:::i;:::-;2126:5;2123:35;2113:63;;2172:1;2169;2162:12;2113:63;2060:122;:::o;241:2516:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Return_954": {
									"entryPoint": 2182,
									"id": 954,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_callOptionalReturn_405": {
									"entryPoint": 3835,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_713": {
									"entryPoint": 3360,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3502,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_usdcInstance_742": {
									"entryPoint": 1683,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bala_820": {
									"entryPoint": 893,
									"id": 820,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_565": {
									"entryPoint": 4058,
									"id": 565,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_495": {
									"entryPoint": 4034,
									"id": 495,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getOwner_805": {
									"entryPoint": 2064,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRecord_840": {
									"entryPoint": 1721,
									"id": 840,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_424": {
									"entryPoint": 4334,
									"id": 424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 2079,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@purchase_883": {
									"entryPoint": 2753,
									"id": 883,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 1928,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_239": {
									"entryPoint": 3698,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_213": {
									"entryPoint": 3368,
									"id": 213,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@saleEnd_828": {
									"entryPoint": 2172,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@saleStart_788": {
									"entryPoint": 2162,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenAddress_796": {
									"entryPoint": 2120,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 3112,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateSaleEndTime_978": {
									"entryPoint": 1794,
									"id": 978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateSaleStartTime_966": {
									"entryPoint": 1073,
									"id": 966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResult_700": {
									"entryPoint": 4369,
									"id": 700,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_912": {
									"entryPoint": 1207,
									"id": 912,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9": {
									"entryPoint": 6382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 6464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17004:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:6",
														"type": ""
													}
												],
												"src": "295:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:6",
														"type": ""
													}
												],
												"src": "440:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:6"
															},
															"nodeType": "YulIf",
															"src": "665:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:6",
														"type": ""
													}
												],
												"src": "589:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:6"
															},
															"nodeType": "YulIf",
															"src": "1008:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:6",
														"type": ""
													}
												],
												"src": "924:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:6"
															},
															"nodeType": "YulIf",
															"src": "1351:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:6",
														"type": ""
													}
												],
												"src": "1275:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:6"
															},
															"nodeType": "YulIf",
															"src": "1697:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:6",
														"type": ""
													}
												],
												"src": "1610:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2049:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2072:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2054:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2020:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2027:3:6",
														"type": ""
													}
												],
												"src": "1967:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2167:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2172:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2160:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2138:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2145:3:6",
														"type": ""
													}
												],
												"src": "2091:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2314:265:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2324:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2370:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2338:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2328:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2385:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2468:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2473:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2392:75:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2515:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2522:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2511:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2511:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2534:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2489:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2489:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2550:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2561:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2566:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2550:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2295:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2302:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2310:3:6",
														"type": ""
													}
												],
												"src": "2206:373:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2677:272:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2687:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2734:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2701:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2691:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2749:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2815:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2756:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2862:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2869:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2858:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2876:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2836:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2836:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2897:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2908:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2935:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2913:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2904:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2897:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2658:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2665:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2673:3:6",
														"type": ""
													}
												],
												"src": "2585:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3101:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3111:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3177:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3118:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3118:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3111:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3283:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3194:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3194:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3296:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3307:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3312:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3303:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3089:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3097:3:6",
														"type": ""
													}
												],
												"src": "2955:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3483:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3549:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3490:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3490:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3483:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3655:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																	"nodeType": "YulIdentifier",
																	"src": "3566:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3566:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3668:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3679:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3684:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3461:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3469:3:6",
														"type": ""
													}
												],
												"src": "3327:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3845:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3855:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3921:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3926:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3862:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4027:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "3938:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3938:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3938:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4040:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4051:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4056:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3833:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3841:3:6",
														"type": ""
													}
												],
												"src": "3699:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4217:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4227:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4293:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4298:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4234:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4234:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4227:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4399:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4310:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4310:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4412:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4423:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4213:3:6",
														"type": ""
													}
												],
												"src": "4071:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4589:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4599:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4665:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4606:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4599:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4771:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																	"nodeType": "YulIdentifier",
																	"src": "4682:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4784:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4795:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4800:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4784:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4577:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4585:3:6",
														"type": ""
													}
												],
												"src": "4443:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4961:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4971:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5037:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5042:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4978:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5143:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
																	"nodeType": "YulIdentifier",
																	"src": "5054:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5054:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5156:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5167:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5172:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4949:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4957:3:6",
														"type": ""
													}
												],
												"src": "4815:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5343:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5409:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5414:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5350:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5350:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5343:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5515:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "5426:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5528:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5539:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5544:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5535:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5528:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5321:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5329:3:6",
														"type": ""
													}
												],
												"src": "5187:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5705:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5715:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5781:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5786:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5722:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5722:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5715:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5887:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
																	"nodeType": "YulIdentifier",
																	"src": "5798:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5798:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5798:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5900:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5911:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5916:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5907:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5693:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5701:3:6",
														"type": ""
													}
												],
												"src": "5559:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6077:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6087:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6153:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6094:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6094:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6087:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6259:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "6170:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6170:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6272:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6283:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6288:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6279:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6065:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6073:3:6",
														"type": ""
													}
												],
												"src": "5931:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6368:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6385:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6408:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6390:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6390:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6378:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6378:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6378:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6356:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6363:3:6",
														"type": ""
													}
												],
												"src": "6303:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6561:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6572:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6659:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6579:79:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6579:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6572:3:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6682:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6689:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6682:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6540:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6546:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6557:3:6",
														"type": ""
													}
												],
												"src": "6427:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6802:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6812:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6824:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6820:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6812:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6892:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6916:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6901:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6848:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6848:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6848:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6774:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6786:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6797:4:6",
														"type": ""
													}
												],
												"src": "6704:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7086:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7096:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7108:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7104:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7104:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7096:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7176:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7200:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7185:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7132:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7132:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7257:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7270:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7281:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7266:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7213:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7213:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7339:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7352:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7363:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7295:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7295:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7042:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7054:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7062:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7070:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7081:4:6",
														"type": ""
													}
												],
												"src": "6932:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7506:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7516:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7528:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7539:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7524:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7516:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7596:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7609:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7620:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7605:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7605:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7552:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7552:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7677:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7690:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7701:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7686:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7686:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7633:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7633:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7633:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7470:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7482:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7490:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7501:4:6",
														"type": ""
													}
												],
												"src": "7380:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7810:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7820:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7832:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7843:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7828:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7820:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7894:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7918:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7856:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7856:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7856:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7782:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7794:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7805:4:6",
														"type": ""
													}
												],
												"src": "7718:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8052:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8062:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8074:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8085:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8070:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8062:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8109:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8120:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8105:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8105:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8128:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8134:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8124:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8124:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8098:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8098:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8154:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8226:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8235:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8162:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8162:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8154:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8024:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8036:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8047:4:6",
														"type": ""
													}
												],
												"src": "7934:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8424:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8434:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8446:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8457:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8442:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8442:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8434:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8481:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8492:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8477:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8477:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8500:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8506:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8496:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8470:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8470:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8470:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8526:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8660:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8534:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8534:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8526:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8404:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8419:4:6",
														"type": ""
													}
												],
												"src": "8253:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8849:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8859:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8871:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8882:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8867:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8867:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8859:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8906:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8917:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8902:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8902:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8925:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8931:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8921:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8921:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8895:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8951:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9085:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8959:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8959:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8951:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8829:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8844:4:6",
														"type": ""
													}
												],
												"src": "8678:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9274:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9284:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9296:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9307:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9292:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9284:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9331:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9342:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9327:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9327:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9350:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9356:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9346:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9346:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9320:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9320:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9320:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9376:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9510:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9384:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9384:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9376:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9254:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9269:4:6",
														"type": ""
													}
												],
												"src": "9103:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9699:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9709:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9721:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9732:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9717:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9717:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9709:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9756:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9767:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9752:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9752:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9775:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9781:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9771:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9771:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9745:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9745:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9745:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9801:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9935:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9809:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9801:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9679:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9694:4:6",
														"type": ""
													}
												],
												"src": "9528:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10124:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10134:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10146:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10157:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10142:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10142:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10134:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10181:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10192:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10177:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10177:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10200:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10206:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10196:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10196:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10170:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10170:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10226:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10360:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10234:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10226:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10104:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10119:4:6",
														"type": ""
													}
												],
												"src": "9953:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10549:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10559:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10571:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10582:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10567:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10567:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10559:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10606:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10617:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10602:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10625:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10631:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10621:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10621:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10595:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10595:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10595:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10651:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10785:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10659:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10651:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10529:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10544:4:6",
														"type": ""
													}
												],
												"src": "10378:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10974:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10984:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10996:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11007:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10992:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10984:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11031:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11042:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11027:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11027:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11050:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11056:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11020:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11020:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11020:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11076:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11210:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11084:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11084:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11076:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10954:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10969:4:6",
														"type": ""
													}
												],
												"src": "10803:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11399:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11409:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11421:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11432:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11417:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11417:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11409:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11456:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11467:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11452:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11452:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11475:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11481:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11471:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11471:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11445:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11445:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11445:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11501:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11635:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11509:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11509:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11501:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11379:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11394:4:6",
														"type": ""
													}
												],
												"src": "11228:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11824:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11834:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11846:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11857:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11842:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11842:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11834:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11881:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11892:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11877:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11877:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11900:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11896:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11896:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11870:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11870:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11870:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11926:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12060:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11934:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11934:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11926:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11804:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11819:4:6",
														"type": ""
													}
												],
												"src": "11653:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12176:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12186:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12198:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12209:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12194:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12194:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12186:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12266:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12279:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12290:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12275:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12275:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12222:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12222:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12222:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12148:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12160:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12171:4:6",
														"type": ""
													}
												],
												"src": "12078:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12346:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12356:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12372:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12366:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12356:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12339:6:6",
														"type": ""
													}
												],
												"src": "12306:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12445:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12456:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12472:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12466:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12456:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12428:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12438:6:6",
														"type": ""
													}
												],
												"src": "12387:98:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12550:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12561:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12577:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12571:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12561:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12533:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12543:6:6",
														"type": ""
													}
												],
												"src": "12491:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12709:34:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12719:18:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12734:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12719:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12681:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12686:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12697:11:6",
														"type": ""
													}
												],
												"src": "12596:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12845:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12862:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12867:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12855:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12855:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12883:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12902:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12907:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12898:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12898:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12883:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12817:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12822:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12833:11:6",
														"type": ""
													}
												],
												"src": "12749:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12968:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12978:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13001:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12983:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12978:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13012:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13035:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13017:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13017:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13012:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13175:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13177:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13177:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13177:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13096:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13103:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13171:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13099:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13099:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13093:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13093:81:6"
															},
															"nodeType": "YulIf",
															"src": "13090:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13207:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13218:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13221:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13214:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13214:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13207:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12955:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12958:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12964:3:6",
														"type": ""
													}
												],
												"src": "12924:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13283:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13293:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13316:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13298:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13298:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13293:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13327:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13350:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13332:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13327:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13525:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13527:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13527:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13527:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13437:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13430:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13430:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13423:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13423:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13445:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13452:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13520:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13448:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13448:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13442:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13442:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13419:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13419:105:6"
															},
															"nodeType": "YulIf",
															"src": "13416:131:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13557:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13572:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13575:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13568:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13568:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13557:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13266:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13269:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13275:7:6",
														"type": ""
													}
												],
												"src": "13235:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13634:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13644:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13673:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13655:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13655:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13644:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13616:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13626:7:6",
														"type": ""
													}
												],
												"src": "13589:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13733:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13743:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13768:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13761:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13761:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13754:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13743:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13715:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13725:7:6",
														"type": ""
													}
												],
												"src": "13691:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13832:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13842:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13857:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13864:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13853:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13853:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13842:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13814:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13824:7:6",
														"type": ""
													}
												],
												"src": "13787:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13964:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13974:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13985:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13974:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13946:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13956:7:6",
														"type": ""
													}
												],
												"src": "13919:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14051:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14061:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14070:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14065:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14130:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14155:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14160:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14151:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14151:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14174:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14179:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14170:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14170:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14164:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14164:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14144:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14144:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14144:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14091:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14094:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14088:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14088:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14102:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14104:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14113:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14116:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14109:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14109:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14104:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14084:3:6",
																"statements": []
															},
															"src": "14080:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14227:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14277:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14282:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14273:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14273:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14291:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14266:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14266:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14266:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14208:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14211:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14205:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14205:13:6"
															},
															"nodeType": "YulIf",
															"src": "14202:101:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14033:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14038:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14043:6:6",
														"type": ""
													}
												],
												"src": "14002:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14343:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14360:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14363:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14353:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14353:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14353:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14457:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14460:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14450:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14450:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14450:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14481:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14484:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14474:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14474:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14474:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14315:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14590:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14607:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14610:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14600:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14600:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14600:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "14501:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14713:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14730:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14733:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14723:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14723:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14624:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14795:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14805:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14823:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14830:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14819:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14819:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14839:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14835:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14835:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14815:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14815:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14805:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14778:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14788:6:6",
														"type": ""
													}
												],
												"src": "14747:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14961:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14983:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14991:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14979:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14979:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14995:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14972:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14972:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14972:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15051:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15059:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15047:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15047:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15064:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15040:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15040:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15040:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14953:6:6",
														"type": ""
													}
												],
												"src": "14855:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15192:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15214:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15222:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15210:14:6"
																	},
																	{
																		"hexValue": "53616c652068617320656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15226:16:6",
																		"type": "",
																		"value": "Sale has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15203:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15203:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15203:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15184:6:6",
														"type": ""
													}
												],
												"src": "15086:164:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15362:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15384:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15392:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15380:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15380:14:6"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15396:34:6",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15373:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15373:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15373:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15452:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15460:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15448:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15448:15:6"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15465:8:6",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15441:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15441:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15441:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15354:6:6",
														"type": ""
													}
												],
												"src": "15256:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15593:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15615:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15623:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15611:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15627:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15604:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15604:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15604:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15585:6:6",
														"type": ""
													}
												],
												"src": "15487:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15781:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15803:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15811:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15799:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15799:14:6"
																	},
																	{
																		"hexValue": "53616c65206861736e2774207374617274656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15815:25:6",
																		"type": "",
																		"value": "Sale hasn't started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15792:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15792:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15792:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15773:6:6",
														"type": ""
													}
												],
												"src": "15675:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15960:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15982:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15990:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15978:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15978:14:6"
																	},
																	{
																		"hexValue": "53616c65206861736e277420656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15994:19:6",
																		"type": "",
																		"value": "Sale hasn't ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15971:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15971:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15971:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15952:6:6",
														"type": ""
													}
												],
												"src": "15854:167:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16133:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16155:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16163:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16151:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16151:14:6"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16167:31:6",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16144:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16144:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16144:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16125:6:6",
														"type": ""
													}
												],
												"src": "16027:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16318:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16340:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16348:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16336:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16336:14:6"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e20746f2072657475726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16352:28:6",
																		"type": "",
																		"value": "Not enough token to return"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16329:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16329:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16329:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16310:6:6",
														"type": ""
													}
												],
												"src": "16212:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16500:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16522:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16530:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16518:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16518:14:6"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16534:34:6",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16511:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16511:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16511:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16590:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16598:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16586:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16586:15:6"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16603:12:6",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16579:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16579:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16579:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16492:6:6",
														"type": ""
													}
												],
												"src": "16394:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16672:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16729:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16738:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16741:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16731:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16731:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16731:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16695:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16720:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "16702:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16702:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16692:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16692:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16685:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16685:43:6"
															},
															"nodeType": "YulIf",
															"src": "16682:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16665:5:6",
														"type": ""
													}
												],
												"src": "16629:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16797:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16851:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16860:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16863:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16853:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16853:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16853:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16820:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16842:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "16827:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16827:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16817:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16817:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16810:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16810:40:6"
															},
															"nodeType": "YulIf",
															"src": "16807:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16790:5:6",
														"type": ""
													}
												],
												"src": "16757:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16922:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16979:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16988:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16991:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16981:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16981:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16981:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16945:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16970:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16952:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16952:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16942:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16942:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16935:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16935:43:6"
															},
															"nodeType": "YulIf",
															"src": "16932:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16915:5:6",
														"type": ""
													}
												],
												"src": "16879:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale has ended\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale hasn't started yet\")\n\n    }\n\n    function store_literal_in_memory_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale hasn't ended\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough token to return\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c8063893d20e81161008a578063c10b935811610059578063c10b9358146102d0578063de2d583a146102fb578063efef39a11461032b578063f2fde38b14610354576100e8565b8063893d20e8146102245780638da5cb5b1461024f5780639d76ea581461027a578063ab0bcc41146102a5576100e8565b806361778592116100c6578063617785921461017c578063617fba04146101a75780636f9c6149146101e4578063715018a61461020d576100e8565b806324076451146100ed578063295e4edf1461012a57806351cff8d914610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906111cc565b61037d565b6040516101219190611641565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190611226565b610431565b005b34801561015f57600080fd5b5061017a600480360381019061017591906111cc565b6104b7565b005b34801561018857600080fd5b50610191610693565b60405161019e9190611469565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c991906111cc565b6106b9565b6040516101db9190611641565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190611226565b610702565b005b34801561021957600080fd5b50610222610788565b005b34801561023057600080fd5b50610239610810565b6040516102469190611469565b60405180910390f35b34801561025b57600080fd5b5061026461081f565b6040516102719190611469565b60405180910390f35b34801561028657600080fd5b5061028f610848565b60405161029c9190611469565b60405180910390f35b3480156102b157600080fd5b506102ba610872565b6040516102c79190611641565b60405180910390f35b3480156102dc57600080fd5b506102e561087c565b6040516102f29190611641565b60405180910390f35b610315600480360381019061031091906111cc565b610886565b60405161032291906114e4565b60405180910390f35b34801561033757600080fd5b50610352600480360381019061034d9190611226565b610ac1565b005b34801561036057600080fd5b5061037b600480360381019061037691906111cc565b610c28565b005b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103da9190611469565b60206040518083038186803b1580156103f257600080fd5b505afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190611253565b9050919050565b610439610d20565b73ffffffffffffffffffffffffffffffffffffffff1661045761081f565b73ffffffffffffffffffffffffffffffffffffffff16146104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490611581565b60405180910390fd5b8060028190555050565b6104bf610d20565b73ffffffffffffffffffffffffffffffffffffffff166104dd61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a90611581565b60405180910390fd5b6003544211610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e906115c1565b60405180910390fd5b61069081600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016105f89190611469565b60206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106489190611253565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d289092919063ffffffff16565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61070a610d20565b73ffffffffffffffffffffffffffffffffffffffff1661072861081f565b73ffffffffffffffffffffffffffffffffffffffff161461077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590611581565b60405180910390fd5b8060038190555050565b610790610d20565b73ffffffffffffffffffffffffffffffffffffffff166107ae61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611581565b60405180910390fd5b61080e6000610dae565b565b600061081a61081f565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600254905090565b6000600354905090565b6000610890610d20565b73ffffffffffffffffffffffffffffffffffffffff166108ae61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611581565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050670de0b6b3a76400008161095c91906116e4565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016109d99190611469565b60206040518083038186803b1580156109f157600080fd5b505afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a299190611253565b1015610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190611601565b60405180910390fd5b610ab78382600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d289092919063ffffffff16565b6001915050919050565b600254421015610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd906115a1565b60405180910390fd5b600354421115610b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4290611541565b60405180910390fd5b610bbc33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e72909392919063ffffffff16565b670de0b6b3a764000081610bd091906116e4565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1e919061168e565b9250508190555050565b610c30610d20565b73ffffffffffffffffffffffffffffffffffffffff16610c4e61081f565b73ffffffffffffffffffffffffffffffffffffffff1614610ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9b90611581565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b90611521565b60405180910390fd5b610d1d81610dae565b50565b600033905090565b610da98363a9059cbb60e01b8484604051602401610d479291906114bb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610efb565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ef5846323b872dd60e01b858585604051602401610e9393929190611484565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610efb565b50505050565b6000610f5d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610fc29092919063ffffffff16565b9050600081511115610fbd5780806020019051810190610f7d91906111f9565b610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb390611621565b60405180910390fd5b5b505050565b6060610fd18484600085610fda565b90509392505050565b60608247101561101f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101690611561565b60405180910390fd5b611028856110ee565b611067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105e906115e1565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110909190611452565b60006040518083038185875af1925050503d80600081146110cd576040519150601f19603f3d011682016040523d82523d6000602084013e6110d2565b606091505b50915091506110e2828286611111565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561112157829050611171565b6000835111156111345782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116891906114ff565b60405180910390fd5b9392505050565b600081359050611187816119e1565b92915050565b60008151905061119c816119f8565b92915050565b6000813590506111b181611a0f565b92915050565b6000815190506111c681611a0f565b92915050565b6000602082840312156111e2576111e16117e8565b5b60006111f084828501611178565b91505092915050565b60006020828403121561120f5761120e6117e8565b5b600061121d8482850161118d565b91505092915050565b60006020828403121561123c5761123b6117e8565b5b600061124a848285016111a2565b91505092915050565b600060208284031215611269576112686117e8565b5b6000611277848285016111b7565b91505092915050565b6112898161173e565b82525050565b61129881611750565b82525050565b60006112a98261165c565b6112b38185611672565b93506112c3818560208601611786565b80840191505092915050565b60006112da82611667565b6112e4818561167d565b93506112f4818560208601611786565b6112fd816117ed565b840191505092915050565b600061131560268361167d565b9150611320826117fe565b604082019050919050565b6000611338600e8361167d565b91506113438261184d565b602082019050919050565b600061135b60268361167d565b915061136682611876565b604082019050919050565b600061137e60208361167d565b9150611389826118c5565b602082019050919050565b60006113a160178361167d565b91506113ac826118ee565b602082019050919050565b60006113c460118361167d565b91506113cf82611917565b602082019050919050565b60006113e7601d8361167d565b91506113f282611940565b602082019050919050565b600061140a601a8361167d565b915061141582611969565b602082019050919050565b600061142d602a8361167d565b915061143882611992565b604082019050919050565b61144c8161177c565b82525050565b600061145e828461129e565b915081905092915050565b600060208201905061147e6000830184611280565b92915050565b60006060820190506114996000830186611280565b6114a66020830185611280565b6114b36040830184611443565b949350505050565b60006040820190506114d06000830185611280565b6114dd6020830184611443565b9392505050565b60006020820190506114f9600083018461128f565b92915050565b6000602082019050818103600083015261151981846112cf565b905092915050565b6000602082019050818103600083015261153a81611308565b9050919050565b6000602082019050818103600083015261155a8161132b565b9050919050565b6000602082019050818103600083015261157a8161134e565b9050919050565b6000602082019050818103600083015261159a81611371565b9050919050565b600060208201905081810360008301526115ba81611394565b9050919050565b600060208201905081810360008301526115da816113b7565b9050919050565b600060208201905081810360008301526115fa816113da565b9050919050565b6000602082019050818103600083015261161a816113fd565b9050919050565b6000602082019050818103600083015261163a81611420565b9050919050565b60006020820190506116566000830184611443565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006116998261177c565b91506116a48361177c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116d9576116d86117b9565b5b828201905092915050565b60006116ef8261177c565b91506116fa8361177c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611733576117326117b9565b5b828202905092915050565b60006117498261175c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156117a4578082015181840152602081019050611789565b838111156117b3576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53616c652068617320656e646564000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53616c65206861736e2774207374617274656420796574000000000000000000600082015250565b7f53616c65206861736e277420656e646564000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4e6f7420656e6f75676820746f6b656e20746f2072657475726e000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6119ea8161173e565b81146119f557600080fd5b50565b611a0181611750565b8114611a0c57600080fd5b50565b611a188161177c565b8114611a2357600080fd5b5056fea2646970667358221220bd8d70a0b92e4f6a710a04c8c1ddb6a05da5677f167009c1e2fbfa83c89fa3ed64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC10B9358 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC10B9358 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDE2D583A EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xEFEF39A1 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xAB0BCC41 EQ PUSH2 0x2A5 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x61778592 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x61778592 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x617FBA04 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x6F9C6149 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20D JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x24076451 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x295E4EDF EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x457 PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4BF PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DD PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56E SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x690 DUP2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x624 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD28 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70A PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x728 PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x790 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AE PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80E PUSH1 0x0 PUSH2 0xDAE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81A PUSH2 0x81F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8AE PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST LT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB7 DUP4 DUP3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD28 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xB4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB42 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBBC CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE72 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC30 PUSH2 0xD20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4E PUSH2 0x81F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9B SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1D DUP2 PUSH2 0xDAE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA9 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD47 SWAP3 SWAP2 SWAP1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xEFB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEF5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xEFB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xFBD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFD1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x101F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1016 SWAP1 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1028 DUP6 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1067 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105E SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10E2 DUP3 DUP3 DUP7 PUSH2 0x1111 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1121 JUMPI DUP3 SWAP1 POP PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1134 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1187 DUP2 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x119C DUP2 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B1 DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C6 DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E1 PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F0 DUP5 DUP3 DUP6 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x121D DUP5 DUP3 DUP6 ADD PUSH2 0x118D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x124A DUP5 DUP3 DUP6 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x17E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1277 DUP5 DUP3 DUP6 ADD PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1289 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1298 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP3 PUSH2 0x165C JUMP JUMPDEST PUSH2 0x12B3 DUP2 DUP6 PUSH2 0x1672 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1786 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP3 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x12E4 DUP2 DUP6 PUSH2 0x167D JUMP JUMPDEST SWAP4 POP PUSH2 0x12F4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1315 PUSH1 0x26 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1320 DUP3 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1338 PUSH1 0xE DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1343 DUP3 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B PUSH1 0x26 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1366 DUP3 PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137E PUSH1 0x20 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1389 DUP3 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x17 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x13AC DUP3 PUSH2 0x18EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C4 PUSH1 0x11 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x13CF DUP3 PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E7 PUSH1 0x1D DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP3 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140A PUSH1 0x1A DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1415 DUP3 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142D PUSH1 0x2A DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1438 DUP3 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x177C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145E DUP3 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1499 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x14A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x14B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x14DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x128F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1519 DUP2 DUP5 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x155A DUP2 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157A DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159A DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BA DUP2 PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DA DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FA DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161A DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163A DUP2 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1656 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0x177C JUMP JUMPDEST SWAP2 POP PUSH2 0x16A4 DUP4 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x17B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EF DUP3 PUSH2 0x177C JUMP JUMPDEST SWAP2 POP PUSH2 0x16FA DUP4 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x17B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP3 PUSH2 0x175C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1789 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C652068617320656E646564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E2774207374617274656420796574000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616C65206861736E277420656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E20746F2072657475726E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x173E JUMP JUMPDEST DUP2 EQ PUSH2 0x19F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A01 DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x177C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD DUP14 PUSH17 0xA0B92E4F6A710A04C8C1DDB6A05DA5677F AND PUSH17 0x9C1E2FBFA83C89FA3ED64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:2516:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1027:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:123;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1674:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;400:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1246:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2637:115;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;946:77:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;855::5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;758:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1153:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2124:380;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1361:305;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1027:120:5;1083:7;1112:13;;;;;;;;;;;1105:31;;;1137:3;1105:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1098:43;;1027:120;;;:::o;2510:123::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2607:20:5::1;2594:10;:33;;;;2510:123:::0;:::o;1674:219::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1762:8:5::1;;1746:15;:24;1738:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1800:87;1835:3;1847:13;;;;;;;;;;;1840:31;;;1872:13;;;;;;;;;;;1840:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1807:13;;;;;;;;;;;1800:34;;;;:87;;;;;:::i;:::-;1674:219:::0;:::o;400:28::-;;;;;;;;;;;;;:::o;1246:109::-;1311:7;1333:6;:16;1340:8;1333:16;;;;;;;;;;;;;;;;1326:23;;1246:109;;;:::o;2637:115::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2728:18:5::1;2717:8;:29;;;;2637:115:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;946:77:5:-;986:7;1010;:5;:7::i;:::-;1003:14;;946:77;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;855::5:-;899:7;921:13;;;;;;;;;;;914:20;;855:85;:::o;758:91::-;808:7;833:10;;826:17;;758:91;:::o;1153:87::-;1201:7;1226:8;;1219:15;;1153:87;:::o;2124:380::-;2197:4;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:17:5::1;2229:6;:22;2236:14;2229:22;;;;;;;;;;;;;;;;2209:42;;2324:6;2314:9;:16;;;;:::i;:::-;2273:13;;;;;;;;;;;2266:31;;;2298:13;;;;;;;;;;;2266:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;2258:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2420:60;2455:14;2470:9;2427:13;;;;;;;;;;;2420:34;;;;:60;;;;;:::i;:::-;2494:4;2487:11;;;2124:380:::0;;;:::o;1361:305::-;1436:10;;1419:15;:27;;1411:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1507:8;;1490:15;:25;;1482:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1542:73;1581:10;1592:13;;;;;;;;;;;1607:7;1549:13;;;;;;;;;;;1542:38;;;;:73;;;;;;:::i;:::-;1654:6;1646:7;:14;;;;:::i;:::-;1624:6;:18;1631:10;1624:18;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1361:305;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;701:205:2:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;912:241:2:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3861:223:3:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:118::-;2054:24;2072:5;2054:24;:::i;:::-;2049:3;2042:37;1967:118;;:::o;2091:109::-;2172:21;2187:5;2172:21;:::i;:::-;2167:3;2160:34;2091:109;;:::o;2206:373::-;2310:3;2338:38;2370:5;2338:38;:::i;:::-;2392:88;2473:6;2468:3;2392:88;:::i;:::-;2385:95;;2489:52;2534:6;2529:3;2522:4;2515:5;2511:16;2489:52;:::i;:::-;2566:6;2561:3;2557:16;2550:23;;2314:265;2206:373;;;;:::o;2585:364::-;2673:3;2701:39;2734:5;2701:39;:::i;:::-;2756:71;2820:6;2815:3;2756:71;:::i;:::-;2749:78;;2836:52;2881:6;2876:3;2869:4;2862:5;2858:16;2836:52;:::i;:::-;2913:29;2935:6;2913:29;:::i;:::-;2908:3;2904:39;2897:46;;2677:272;2585:364;;;;:::o;2955:366::-;3097:3;3118:67;3182:2;3177:3;3118:67;:::i;:::-;3111:74;;3194:93;3283:3;3194:93;:::i;:::-;3312:2;3307:3;3303:12;3296:19;;2955:366;;;:::o;3327:::-;3469:3;3490:67;3554:2;3549:3;3490:67;:::i;:::-;3483:74;;3566:93;3655:3;3566:93;:::i;:::-;3684:2;3679:3;3675:12;3668:19;;3327:366;;;:::o;3699:::-;3841:3;3862:67;3926:2;3921:3;3862:67;:::i;:::-;3855:74;;3938:93;4027:3;3938:93;:::i;:::-;4056:2;4051:3;4047:12;4040:19;;3699:366;;;:::o;4071:::-;4213:3;4234:67;4298:2;4293:3;4234:67;:::i;:::-;4227:74;;4310:93;4399:3;4310:93;:::i;:::-;4428:2;4423:3;4419:12;4412:19;;4071:366;;;:::o;4443:::-;4585:3;4606:67;4670:2;4665:3;4606:67;:::i;:::-;4599:74;;4682:93;4771:3;4682:93;:::i;:::-;4800:2;4795:3;4791:12;4784:19;;4443:366;;;:::o;4815:::-;4957:3;4978:67;5042:2;5037:3;4978:67;:::i;:::-;4971:74;;5054:93;5143:3;5054:93;:::i;:::-;5172:2;5167:3;5163:12;5156:19;;4815:366;;;:::o;5187:::-;5329:3;5350:67;5414:2;5409:3;5350:67;:::i;:::-;5343:74;;5426:93;5515:3;5426:93;:::i;:::-;5544:2;5539:3;5535:12;5528:19;;5187:366;;;:::o;5559:::-;5701:3;5722:67;5786:2;5781:3;5722:67;:::i;:::-;5715:74;;5798:93;5887:3;5798:93;:::i;:::-;5916:2;5911:3;5907:12;5900:19;;5559:366;;;:::o;5931:::-;6073:3;6094:67;6158:2;6153:3;6094:67;:::i;:::-;6087:74;;6170:93;6259:3;6170:93;:::i;:::-;6288:2;6283:3;6279:12;6272:19;;5931:366;;;:::o;6303:118::-;6390:24;6408:5;6390:24;:::i;:::-;6385:3;6378:37;6303:118;;:::o;6427:271::-;6557:3;6579:93;6668:3;6659:6;6579:93;:::i;:::-;6572:100;;6689:3;6682:10;;6427:271;;;;:::o;6704:222::-;6797:4;6835:2;6824:9;6820:18;6812:26;;6848:71;6916:1;6905:9;6901:17;6892:6;6848:71;:::i;:::-;6704:222;;;;:::o;6932:442::-;7081:4;7119:2;7108:9;7104:18;7096:26;;7132:71;7200:1;7189:9;7185:17;7176:6;7132:71;:::i;:::-;7213:72;7281:2;7270:9;7266:18;7257:6;7213:72;:::i;:::-;7295;7363:2;7352:9;7348:18;7339:6;7295:72;:::i;:::-;6932:442;;;;;;:::o;7380:332::-;7501:4;7539:2;7528:9;7524:18;7516:26;;7552:71;7620:1;7609:9;7605:17;7596:6;7552:71;:::i;:::-;7633:72;7701:2;7690:9;7686:18;7677:6;7633:72;:::i;:::-;7380:332;;;;;:::o;7718:210::-;7805:4;7843:2;7832:9;7828:18;7820:26;;7856:65;7918:1;7907:9;7903:17;7894:6;7856:65;:::i;:::-;7718:210;;;;:::o;7934:313::-;8047:4;8085:2;8074:9;8070:18;8062:26;;8134:9;8128:4;8124:20;8120:1;8109:9;8105:17;8098:47;8162:78;8235:4;8226:6;8162:78;:::i;:::-;8154:86;;7934:313;;;;:::o;8253:419::-;8419:4;8457:2;8446:9;8442:18;8434:26;;8506:9;8500:4;8496:20;8492:1;8481:9;8477:17;8470:47;8534:131;8660:4;8534:131;:::i;:::-;8526:139;;8253:419;;;:::o;8678:::-;8844:4;8882:2;8871:9;8867:18;8859:26;;8931:9;8925:4;8921:20;8917:1;8906:9;8902:17;8895:47;8959:131;9085:4;8959:131;:::i;:::-;8951:139;;8678:419;;;:::o;9103:::-;9269:4;9307:2;9296:9;9292:18;9284:26;;9356:9;9350:4;9346:20;9342:1;9331:9;9327:17;9320:47;9384:131;9510:4;9384:131;:::i;:::-;9376:139;;9103:419;;;:::o;9528:::-;9694:4;9732:2;9721:9;9717:18;9709:26;;9781:9;9775:4;9771:20;9767:1;9756:9;9752:17;9745:47;9809:131;9935:4;9809:131;:::i;:::-;9801:139;;9528:419;;;:::o;9953:::-;10119:4;10157:2;10146:9;10142:18;10134:26;;10206:9;10200:4;10196:20;10192:1;10181:9;10177:17;10170:47;10234:131;10360:4;10234:131;:::i;:::-;10226:139;;9953:419;;;:::o;10378:::-;10544:4;10582:2;10571:9;10567:18;10559:26;;10631:9;10625:4;10621:20;10617:1;10606:9;10602:17;10595:47;10659:131;10785:4;10659:131;:::i;:::-;10651:139;;10378:419;;;:::o;10803:::-;10969:4;11007:2;10996:9;10992:18;10984:26;;11056:9;11050:4;11046:20;11042:1;11031:9;11027:17;11020:47;11084:131;11210:4;11084:131;:::i;:::-;11076:139;;10803:419;;;:::o;11228:::-;11394:4;11432:2;11421:9;11417:18;11409:26;;11481:9;11475:4;11471:20;11467:1;11456:9;11452:17;11445:47;11509:131;11635:4;11509:131;:::i;:::-;11501:139;;11228:419;;;:::o;11653:::-;11819:4;11857:2;11846:9;11842:18;11834:26;;11906:9;11900:4;11896:20;11892:1;11881:9;11877:17;11870:47;11934:131;12060:4;11934:131;:::i;:::-;11926:139;;11653:419;;;:::o;12078:222::-;12171:4;12209:2;12198:9;12194:18;12186:26;;12222:71;12290:1;12279:9;12275:17;12266:6;12222:71;:::i;:::-;12078:222;;;;:::o;12387:98::-;12438:6;12472:5;12466:12;12456:22;;12387:98;;;:::o;12491:99::-;12543:6;12577:5;12571:12;12561:22;;12491:99;;;:::o;12596:147::-;12697:11;12734:3;12719:18;;12596:147;;;;:::o;12749:169::-;12833:11;12867:6;12862:3;12855:19;12907:4;12902:3;12898:14;12883:29;;12749:169;;;;:::o;12924:305::-;12964:3;12983:20;13001:1;12983:20;:::i;:::-;12978:25;;13017:20;13035:1;13017:20;:::i;:::-;13012:25;;13171:1;13103:66;13099:74;13096:1;13093:81;13090:107;;;13177:18;;:::i;:::-;13090:107;13221:1;13218;13214:9;13207:16;;12924:305;;;;:::o;13235:348::-;13275:7;13298:20;13316:1;13298:20;:::i;:::-;13293:25;;13332:20;13350:1;13332:20;:::i;:::-;13327:25;;13520:1;13452:66;13448:74;13445:1;13442:81;13437:1;13430:9;13423:17;13419:105;13416:131;;;13527:18;;:::i;:::-;13416:131;13575:1;13572;13568:9;13557:20;;13235:348;;;;:::o;13589:96::-;13626:7;13655:24;13673:5;13655:24;:::i;:::-;13644:35;;13589:96;;;:::o;13691:90::-;13725:7;13768:5;13761:13;13754:21;13743:32;;13691:90;;;:::o;13787:126::-;13824:7;13864:42;13857:5;13853:54;13842:65;;13787:126;;;:::o;13919:77::-;13956:7;13985:5;13974:16;;13919:77;;;:::o;14002:307::-;14070:1;14080:113;14094:6;14091:1;14088:13;14080:113;;;14179:1;14174:3;14170:11;14164:18;14160:1;14155:3;14151:11;14144:39;14116:2;14113:1;14109:10;14104:15;;14080:113;;;14211:6;14208:1;14205:13;14202:101;;;14291:1;14282:6;14277:3;14273:16;14266:27;14202:101;14051:258;14002:307;;;:::o;14315:180::-;14363:77;14360:1;14353:88;14460:4;14457:1;14450:15;14484:4;14481:1;14474:15;14624:117;14733:1;14730;14723:12;14747:102;14788:6;14839:2;14835:7;14830:2;14823:5;14819:14;14815:28;14805:38;;14747:102;;;:::o;14855:225::-;14995:34;14991:1;14983:6;14979:14;14972:58;15064:8;15059:2;15051:6;15047:15;15040:33;14855:225;:::o;15086:164::-;15226:16;15222:1;15214:6;15210:14;15203:40;15086:164;:::o;15256:225::-;15396:34;15392:1;15384:6;15380:14;15373:58;15465:8;15460:2;15452:6;15448:15;15441:33;15256:225;:::o;15487:182::-;15627:34;15623:1;15615:6;15611:14;15604:58;15487:182;:::o;15675:173::-;15815:25;15811:1;15803:6;15799:14;15792:49;15675:173;:::o;15854:167::-;15994:19;15990:1;15982:6;15978:14;15971:43;15854:167;:::o;16027:179::-;16167:31;16163:1;16155:6;16151:14;16144:55;16027:179;:::o;16212:176::-;16352:28;16348:1;16340:6;16336:14;16329:52;16212:176;:::o;16394:229::-;16534:34;16530:1;16522:6;16518:14;16511:58;16603:12;16598:2;16590:6;16586:15;16579:37;16394:229;:::o;16629:122::-;16702:24;16720:5;16702:24;:::i;:::-;16695:5;16692:35;16682:63;;16741:1;16738;16731:12;16682:63;16629:122;:::o;16757:116::-;16827:21;16842:5;16827:21;:::i;:::-;16820:5;16817:32;16807:60;;16863:1;16860;16853:12;16807:60;16757:116;:::o;16879:122::-;16952:24;16970:5;16952:24;:::i;:::-;16945:5;16942:35;16932:63;;16991:1;16988;16981:12;16932:63;16879:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1349600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Return(address)": "infinite",
								"_usdcInstance()": "2537",
								"bala(address)": "infinite",
								"getOwner()": "2580",
								"getRecord(address)": "2886",
								"owner()": "2567",
								"purchase(uint256)": "infinite",
								"renounceOwnership()": "30463",
								"saleEnd()": "2459",
								"saleStart()": "2526",
								"tokenAddress()": "2589",
								"transferOwnership(address)": "30811",
								"updateSaleEndTime(uint256)": "24827",
								"updateSaleStartTime(uint256)": "24806",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 2757,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 478,
									"end": 750,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 591,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 610,
									"end": 616,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 591,
									"end": 609,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 591,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 591,
									"end": 617,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 591,
									"end": 617,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 591,
									"end": 617,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 591,
									"end": 617,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 640,
									"end": 652,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 624,
									"end": 637,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 624,
									"end": 652,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 624,
									"end": 652,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 652,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 652,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 624,
									"end": 652,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 675,
									"end": 688,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 659,
									"end": 672,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 659,
									"end": 672,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 659,
									"end": 688,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 688,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 688,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 659,
									"end": 688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 708,
									"end": 718,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 695,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 695,
									"end": 718,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 695,
									"end": 718,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 695,
									"end": 718,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 695,
									"end": 718,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 736,
									"end": 744,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 725,
									"end": 733,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 725,
									"end": 744,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 725,
									"end": 744,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 725,
									"end": 744,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 725,
									"end": 744,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 478,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 213,
									"end": 218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 417,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 427,
									"end": 433,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 443,
									"end": 449,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 495,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 480,
									"end": 489,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 471,
									"end": 478,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 467,
									"end": 490,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 463,
									"end": 496,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 460,
									"end": 580,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 460,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 460,
									"end": 580,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 499,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 499,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 499,
									"end": 578,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 499,
									"end": 578,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 499,
									"end": 578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 460,
									"end": 580,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 460,
									"end": 580,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 620,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 700,
									"end": 707,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 691,
									"end": 697,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 680,
									"end": 689,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 676,
									"end": 698,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 644,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 644,
									"end": 708,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 644,
									"end": 708,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 644,
									"end": 708,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 708,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 634,
									"end": 708,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 590,
									"end": 718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 757,
									"end": 759,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 783,
									"end": 847,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 839,
									"end": 846,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 830,
									"end": 836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 819,
									"end": 828,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 815,
									"end": 837,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 783,
									"end": 847,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 783,
									"end": 847,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 783,
									"end": 847,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 783,
									"end": 847,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 773,
									"end": 847,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 773,
									"end": 847,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 728,
									"end": 857,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 896,
									"end": 898,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 922,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 978,
									"end": 985,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 969,
									"end": 975,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 958,
									"end": 967,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 954,
									"end": 976,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 922,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 922,
									"end": 986,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 922,
									"end": 986,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 922,
									"end": 986,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 912,
									"end": 986,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 912,
									"end": 986,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 996,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1061,
									"end": 1125,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1117,
									"end": 1124,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1106,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1093,
									"end": 1115,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1125,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1061,
									"end": 1125,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1061,
									"end": 1125,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1061,
									"end": 1125,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1125,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1006,
									"end": 1135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1174,
									"end": 1177,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1257,
									"end": 1264,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1248,
									"end": 1254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1237,
									"end": 1246,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1233,
									"end": 1255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1191,
									"end": 1265,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1191,
									"end": 1265,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1282,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1369,
									"end": 1465,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1369,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1435,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1453,
									"end": 1458,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1435,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1435,
									"end": 1459,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1435,
									"end": 1459,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1435,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1459,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1369,
									"end": 1465,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1369,
									"end": 1465,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1369,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1369,
									"end": 1465,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1597,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1471,
									"end": 1597,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1515,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1541,
									"end": 1546,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1537,
									"end": 1591,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1591,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1597,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1597,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1680,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1603,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1640,
									"end": 1647,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1669,
									"end": 1674,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1658,
									"end": 1674,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1658,
									"end": 1674,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1680,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1680,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1680,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1809,
									"end": 1926,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1809,
									"end": 1926,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1915,
									"end": 1916,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1920,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1932,
									"end": 2054,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1932,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2005,
									"end": 2029,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2023,
									"end": 2028,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2005,
									"end": 2029,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2005,
									"end": 2029,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2005,
									"end": 2029,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2005,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1995,
									"end": 2030,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1985,
									"end": 2048,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2041,
									"end": 2042,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2046,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2048,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1985,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1932,
									"end": 2054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1932,
									"end": 2054,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2060,
									"end": 2182,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2060,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2151,
									"end": 2156,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2133,
									"end": 2157,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2133,
									"end": 2157,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2133,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2126,
									"end": 2131,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2158,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2113,
									"end": 2176,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2113,
									"end": 2176,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2172,
									"end": 2173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2170,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2162,
									"end": 2174,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2113,
									"end": 2176,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2113,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2060,
									"end": 2182,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2060,
									"end": 2182,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 2757,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd8d70a0b92e4f6a710a04c8c1ddb6a05da5677f167009c1e2fbfa83c89fa3ed64736f6c63430008070033",
									".code": [
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "893D20E8"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "C10B9358"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "C10B9358"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "DE2D583A"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "EFEF39A1"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "893D20E8"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "9D76EA58"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "AB0BCC41"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "61778592"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "61778592"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "617FBA04"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "6F9C6149"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "24076451"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "295E4EDF"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "51CFF8D9"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 241,
											"end": 2757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 855,
											"end": 940,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1136,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1137,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1105,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1147,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2633,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1762,
											"end": 1770,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1761,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1770,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1840,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1800,
											"end": 1834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1800,
											"end": 1834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1800,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1893,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1348,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1349,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1355,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2717,
											"end": 2746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2746,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 986,
											"end": 993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1010,
											"end": 1017,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1017,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1010,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1023,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 899,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 921,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 921,
											"end": 934,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 921,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 921,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 921,
											"end": 934,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 921,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 921,
											"end": 934,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 921,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 921,
											"end": 934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 914,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 914,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 940,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 808,
											"end": 815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 833,
											"end": 843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 826,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 826,
											"end": 843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 849,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1234,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1226,
											"end": 1234,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1240,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2250,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2297,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2297,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2297,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2266,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2330,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2330,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2258,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2455,
											"end": 2469,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2427,
											"end": 2440,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2420,
											"end": 2454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2420,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2420,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2498,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2487,
											"end": 2498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1446,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1436,
											"end": 1446,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1434,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1515,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1507,
											"end": 1515,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1505,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1515,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1482,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1581,
											"end": 1591,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1580,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1542,
											"end": 1580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1542,
											"end": 1580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1542,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1666,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2200,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2091,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2172,
											"end": 2193,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2172,
											"end": 2193,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2172,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2200,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2579,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2206,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2370,
											"end": 2375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2473,
											"end": 2479,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2471,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2392,
											"end": 2480,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2480,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2392,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2480,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2520,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2489,
											"end": 2541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2489,
											"end": 2541,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2489,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2564,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2579,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2579,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2585,
											"end": 2949,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2585,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2673,
											"end": 2676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2701,
											"end": 2740,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2701,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2701,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2756,
											"end": 2827,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2756,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2756,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2827,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2836,
											"end": 2888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2836,
											"end": 2888,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2836,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2913,
											"end": 2942,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2913,
											"end": 2942,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2913,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2911,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2943,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2949,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2955,
											"end": 3321,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2955,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3177,
											"end": 3180,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3118,
											"end": 3185,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3118,
											"end": 3185,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3118,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3194,
											"end": 3287,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3194,
											"end": 3287,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3194,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3321,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3321,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3327,
											"end": 3693,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3327,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3549,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 3566,
											"end": 3659,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3566,
											"end": 3659,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3566,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 3682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3693,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3699,
											"end": 4065,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3699,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3921,
											"end": 3924,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3862,
											"end": 3929,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3862,
											"end": 3929,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3862,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4027,
											"end": 4030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 3938,
											"end": 4031,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3938,
											"end": 4031,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 3938,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4047,
											"end": 4059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 4065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 4065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 4065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 4065,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4071,
											"end": 4437,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4071,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4234,
											"end": 4301,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4234,
											"end": 4301,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4234,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4301,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4399,
											"end": 4402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4310,
											"end": 4403,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4310,
											"end": 4403,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4310,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4437,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4443,
											"end": 4809,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4443,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4665,
											"end": 4668,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4606,
											"end": 4673,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4606,
											"end": 4673,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4606,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4673,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4682,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4771,
											"end": 4774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4682,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4682,
											"end": 4775,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4682,
											"end": 4775,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4682,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4795,
											"end": 4798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4803,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4784,
											"end": 4803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4784,
											"end": 4803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4809,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4809,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4815,
											"end": 5181,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 4815,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5042,
											"end": 5044,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4978,
											"end": 5045,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4978,
											"end": 5045,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4978,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 5045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 5045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 5143,
											"end": 5146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5054,
											"end": 5147,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5054,
											"end": 5147,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 5054,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5172,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 5181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 5181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 5181,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5187,
											"end": 5553,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5187,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 5409,
											"end": 5412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5350,
											"end": 5417,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5417,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 5350,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5515,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5426,
											"end": 5519,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5426,
											"end": 5519,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5426,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5539,
											"end": 5542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5553,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5559,
											"end": 5925,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 5559,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 5786,
											"end": 5788,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 5781,
											"end": 5784,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5722,
											"end": 5789,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5722,
											"end": 5789,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 5722,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5887,
											"end": 5890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 5798,
											"end": 5891,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5798,
											"end": 5891,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5798,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5911,
											"end": 5914,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5925,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5931,
											"end": 6297,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5931,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 6259,
											"end": 6262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 6170,
											"end": 6263,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6170,
											"end": 6263,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 6170,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6297,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6303,
											"end": 6421,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 6303,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 6390,
											"end": 6414,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6414,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 6390,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6421,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6427,
											"end": 6698,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6427,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 6668,
											"end": 6671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6665,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6672,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6692,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6698,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6698,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6704,
											"end": 6926,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6704,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 6916,
											"end": 6917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6898,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6926,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6926,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7132,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 7200,
											"end": 7201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7182,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7132,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7132,
											"end": 7203,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7132,
											"end": 7203,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 7132,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7263,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7345,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 7374,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7605,
											"end": 7622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7596,
											"end": 7602,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7552,
											"end": 7623,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7552,
											"end": 7623,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 7552,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 7701,
											"end": 7703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7683,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7633,
											"end": 7705,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7633,
											"end": 7705,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 7633,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7712,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7718,
											"end": 7928,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7718,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7832,
											"end": 7841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7856,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 7918,
											"end": 7919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7894,
											"end": 7900,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7856,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7856,
											"end": 7921,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7856,
											"end": 7921,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 7856,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7928,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7928,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7934,
											"end": 8247,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7934,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8047,
											"end": 8051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8074,
											"end": 8083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8062,
											"end": 8088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8062,
											"end": 8088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8144,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8120,
											"end": 8121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 8235,
											"end": 8239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8162,
											"end": 8240,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8162,
											"end": 8240,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 8162,
											"end": 8240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 8247,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 8247,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 8247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 8247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 8247,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8253,
											"end": 8672,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8253,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8446,
											"end": 8455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8434,
											"end": 8460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8434,
											"end": 8460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8500,
											"end": 8504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8470,
											"end": 8517,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 8660,
											"end": 8664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8534,
											"end": 8665,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8665,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 8534,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8672,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8672,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8678,
											"end": 9097,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8678,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8844,
											"end": 8848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8882,
											"end": 8884,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 8885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8925,
											"end": 8929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8921,
											"end": 8941,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8917,
											"end": 8918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8915,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 9085,
											"end": 9089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8959,
											"end": 9090,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8959,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 8959,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8951,
											"end": 9090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8951,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8678,
											"end": 9097,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8678,
											"end": 9097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8678,
											"end": 9097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8678,
											"end": 9097,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9269,
											"end": 9273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9309,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9296,
											"end": 9305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9284,
											"end": 9310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9284,
											"end": 9310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9350,
											"end": 9354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9346,
											"end": 9366,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 9510,
											"end": 9514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 9384,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9376,
											"end": 9515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9376,
											"end": 9515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9522,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9732,
											"end": 9734,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9721,
											"end": 9730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9709,
											"end": 9735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9709,
											"end": 9735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9771,
											"end": 9791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9765,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9752,
											"end": 9769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9745,
											"end": 9792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 9935,
											"end": 9939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9953,
											"end": 10372,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9953,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10119,
											"end": 10123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10159,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10146,
											"end": 10155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10142,
											"end": 10160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10206,
											"end": 10215,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10216,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10190,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10170,
											"end": 10217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 10360,
											"end": 10364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10234,
											"end": 10365,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10234,
											"end": 10365,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 10234,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10226,
											"end": 10365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10226,
											"end": 10365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 10372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 10372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 10372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 10372,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10378,
											"end": 10797,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10378,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10544,
											"end": 10548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10582,
											"end": 10584,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10571,
											"end": 10580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10559,
											"end": 10585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10559,
											"end": 10585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10625,
											"end": 10629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10621,
											"end": 10641,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10615,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10602,
											"end": 10619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10595,
											"end": 10642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 10785,
											"end": 10789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10659,
											"end": 10790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10659,
											"end": 10790,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 10659,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10797,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10803,
											"end": 11222,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10803,
											"end": 11222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 10973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10996,
											"end": 11005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 11010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 11010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11056,
											"end": 11065,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11050,
											"end": 11054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11046,
											"end": 11066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11042,
											"end": 11043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11027,
											"end": 11044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11084,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 11210,
											"end": 11214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11084,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 11084,
											"end": 11215,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11084,
											"end": 11215,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 11084,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 11222,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 11222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 11222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 11222,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11228,
											"end": 11647,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 11228,
											"end": 11647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11394,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11432,
											"end": 11434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11417,
											"end": 11435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11481,
											"end": 11490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11475,
											"end": 11479,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11491,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11465,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11452,
											"end": 11469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11509,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 11635,
											"end": 11639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11509,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11509,
											"end": 11640,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11509,
											"end": 11640,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 11509,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11647,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11653,
											"end": 12072,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 11653,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11819,
											"end": 11823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11857,
											"end": 11859,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 11860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 11860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11906,
											"end": 11915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11900,
											"end": 11904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11892,
											"end": 11893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11881,
											"end": 11890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 11894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 11917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11934,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 12060,
											"end": 12064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11934,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 11934,
											"end": 12065,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11934,
											"end": 12065,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 11934,
											"end": 12065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11926,
											"end": 12065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11926,
											"end": 12065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11653,
											"end": 12072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11653,
											"end": 12072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11653,
											"end": 12072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11653,
											"end": 12072,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12078,
											"end": 12300,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 12078,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12171,
											"end": 12175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12198,
											"end": 12207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12194,
											"end": 12212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12186,
											"end": 12212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12186,
											"end": 12212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12222,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 12290,
											"end": 12291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 12288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12275,
											"end": 12292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12266,
											"end": 12272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12222,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 12222,
											"end": 12293,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12222,
											"end": 12293,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 12222,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12078,
											"end": 12300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12078,
											"end": 12300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12078,
											"end": 12300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12078,
											"end": 12300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12078,
											"end": 12300,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12387,
											"end": 12485,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 12387,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12472,
											"end": 12477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12466,
											"end": 12478,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12387,
											"end": 12485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12387,
											"end": 12485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12387,
											"end": 12485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12387,
											"end": 12485,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12491,
											"end": 12590,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 12491,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12543,
											"end": 12549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12577,
											"end": 12582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12571,
											"end": 12583,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12590,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12697,
											"end": 12708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12749,
											"end": 12918,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 12749,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12833,
											"end": 12844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12867,
											"end": 12873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12855,
											"end": 12874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12907,
											"end": 12911,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12898,
											"end": 12912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12883,
											"end": 12912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12883,
											"end": 12912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12918,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12924,
											"end": 13229,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 12924,
											"end": 13229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12964,
											"end": 12967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12983,
											"end": 13003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 13001,
											"end": 13002,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12983,
											"end": 13003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 12983,
											"end": 13003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12983,
											"end": 13003,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 12983,
											"end": 13003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12978,
											"end": 13003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12978,
											"end": 13003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13017,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 13035,
											"end": 13036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13017,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13017,
											"end": 13037,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13017,
											"end": 13037,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 13017,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13012,
											"end": 13037,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13012,
											"end": 13037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13171,
											"end": 13172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13103,
											"end": 13169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13099,
											"end": 13173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13093,
											"end": 13174,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13090,
											"end": 13197,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13090,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 13090,
											"end": 13197,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13090,
											"end": 13197,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 13090,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13221,
											"end": 13222,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13218,
											"end": 13219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13214,
											"end": 13223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13207,
											"end": 13223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13207,
											"end": 13223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12924,
											"end": 13229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12924,
											"end": 13229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12924,
											"end": 13229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12924,
											"end": 13229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12924,
											"end": 13229,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13235,
											"end": 13583,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 13235,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13275,
											"end": 13282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 13316,
											"end": 13317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13298,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13298,
											"end": 13318,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13298,
											"end": 13318,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 13298,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13293,
											"end": 13318,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13293,
											"end": 13318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13332,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 13350,
											"end": 13351,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13332,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13332,
											"end": 13352,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13332,
											"end": 13352,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 13332,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13327,
											"end": 13352,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13327,
											"end": 13352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13521,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13452,
											"end": 13518,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13448,
											"end": 13522,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13445,
											"end": 13446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13442,
											"end": 13523,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13437,
											"end": 13438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13430,
											"end": 13439,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13423,
											"end": 13440,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13419,
											"end": 13524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13416,
											"end": 13547,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13416,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 13416,
											"end": 13547,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13527,
											"end": 13545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 13527,
											"end": 13545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 13527,
											"end": 13545,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13527,
											"end": 13545,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 13527,
											"end": 13545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13416,
											"end": 13547,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 13416,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13575,
											"end": 13576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13572,
											"end": 13573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 13577,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13557,
											"end": 13577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13557,
											"end": 13577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13235,
											"end": 13583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13235,
											"end": 13583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13235,
											"end": 13583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13235,
											"end": 13583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13235,
											"end": 13583,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13589,
											"end": 13685,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 13589,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13626,
											"end": 13633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13655,
											"end": 13679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 13673,
											"end": 13678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13655,
											"end": 13679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 13655,
											"end": 13679,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13655,
											"end": 13679,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 13655,
											"end": 13679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 13679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 13679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13589,
											"end": 13685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13589,
											"end": 13685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13589,
											"end": 13685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13589,
											"end": 13685,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13691,
											"end": 13781,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 13691,
											"end": 13781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13725,
											"end": 13732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13761,
											"end": 13774,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13754,
											"end": 13775,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13743,
											"end": 13775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13743,
											"end": 13775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13691,
											"end": 13781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13691,
											"end": 13781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13691,
											"end": 13781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13691,
											"end": 13781,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13787,
											"end": 13913,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 13787,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13824,
											"end": 13831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13864,
											"end": 13906,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13853,
											"end": 13907,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 13907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 13907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13787,
											"end": 13913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13787,
											"end": 13913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13787,
											"end": 13913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13787,
											"end": 13913,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13956,
											"end": 13963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13985,
											"end": 13990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14002,
											"end": 14309,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 14002,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14070,
											"end": 14071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14100,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14091,
											"end": 14092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14088,
											"end": 14101,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14174,
											"end": 14177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14170,
											"end": 14181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14164,
											"end": 14182,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14160,
											"end": 14161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14158,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14151,
											"end": 14162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14144,
											"end": 14183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14116,
											"end": 14118,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14113,
											"end": 14114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14109,
											"end": 14119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14104,
											"end": 14119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14104,
											"end": 14119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 14080,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14211,
											"end": 14217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14208,
											"end": 14209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14218,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14202,
											"end": 14303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14202,
											"end": 14303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 14202,
											"end": 14303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14291,
											"end": 14292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14282,
											"end": 14288,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14277,
											"end": 14280,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14273,
											"end": 14289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14266,
											"end": 14293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14202,
											"end": 14303,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 14202,
											"end": 14303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14051,
											"end": 14309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14002,
											"end": 14309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14002,
											"end": 14309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14002,
											"end": 14309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14002,
											"end": 14309,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14495,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 14315,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14363,
											"end": 14440,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14360,
											"end": 14361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14353,
											"end": 14441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14460,
											"end": 14464,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 14457,
											"end": 14458,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14450,
											"end": 14465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14484,
											"end": 14488,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14481,
											"end": 14482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14474,
											"end": 14489,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14624,
											"end": 14741,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 14624,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14733,
											"end": 14734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14730,
											"end": 14731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14723,
											"end": 14735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14747,
											"end": 14849,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 14747,
											"end": 14849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14788,
											"end": 14794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14839,
											"end": 14841,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 14835,
											"end": 14842,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 14830,
											"end": 14832,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 14823,
											"end": 14828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14819,
											"end": 14833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14815,
											"end": 14843,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14805,
											"end": 14843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14805,
											"end": 14843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14747,
											"end": 14849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14747,
											"end": 14849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14747,
											"end": 14849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14747,
											"end": 14849,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14855,
											"end": 15080,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 14855,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14995,
											"end": 15029,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14991,
											"end": 14992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14983,
											"end": 14989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14979,
											"end": 14993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14972,
											"end": 15030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15072,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15059,
											"end": 15061,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15051,
											"end": 15057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15047,
											"end": 15062,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15040,
											"end": 15073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14855,
											"end": 15080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14855,
											"end": 15080,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15086,
											"end": 15250,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 15086,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15226,
											"end": 15242,
											"name": "PUSH",
											"source": 6,
											"value": "53616C652068617320656E646564000000000000000000000000000000000000"
										},
										{
											"begin": 15222,
											"end": 15223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15214,
											"end": 15220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15210,
											"end": 15224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15203,
											"end": 15243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15086,
											"end": 15250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15086,
											"end": 15250,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15256,
											"end": 15481,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 15256,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15396,
											"end": 15430,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 15392,
											"end": 15393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15380,
											"end": 15394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15373,
											"end": 15431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15465,
											"end": 15473,
											"name": "PUSH",
											"source": 6,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15460,
											"end": 15462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15452,
											"end": 15458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15448,
											"end": 15463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15441,
											"end": 15474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15256,
											"end": 15481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15256,
											"end": 15481,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15487,
											"end": 15669,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 15487,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15627,
											"end": 15661,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15623,
											"end": 15624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15611,
											"end": 15625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 15662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15487,
											"end": 15669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15487,
											"end": 15669,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15675,
											"end": 15848,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 15675,
											"end": 15848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15815,
											"end": 15840,
											"name": "PUSH",
											"source": 6,
											"value": "53616C65206861736E2774207374617274656420796574000000000000000000"
										},
										{
											"begin": 15811,
											"end": 15812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15799,
											"end": 15813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15792,
											"end": 15841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15675,
											"end": 15848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15675,
											"end": 15848,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15854,
											"end": 16021,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 15854,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15994,
											"end": 16013,
											"name": "PUSH",
											"source": 6,
											"value": "53616C65206861736E277420656E646564000000000000000000000000000000"
										},
										{
											"begin": 15990,
											"end": 15991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15982,
											"end": 15988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15978,
											"end": 15992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15971,
											"end": 16014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15854,
											"end": 16021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15854,
											"end": 16021,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16027,
											"end": 16206,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 16027,
											"end": 16206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16167,
											"end": 16198,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 16163,
											"end": 16164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16155,
											"end": 16161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16151,
											"end": 16165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16144,
											"end": 16199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16027,
											"end": 16206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16027,
											"end": 16206,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16212,
											"end": 16388,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 16212,
											"end": 16388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16352,
											"end": 16380,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420656E6F75676820746F6B656E20746F2072657475726E000000000000"
										},
										{
											"begin": 16348,
											"end": 16349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16340,
											"end": 16346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16336,
											"end": 16350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16329,
											"end": 16381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16212,
											"end": 16388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16212,
											"end": 16388,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16394,
											"end": 16623,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 16394,
											"end": 16623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 16530,
											"end": 16531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16522,
											"end": 16528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16511,
											"end": 16569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16603,
											"end": 16615,
											"name": "PUSH",
											"source": 6,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 16598,
											"end": 16600,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16590,
											"end": 16596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16586,
											"end": 16601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16579,
											"end": 16616,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16394,
											"end": 16623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16394,
											"end": 16623,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16629,
											"end": 16751,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 16629,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16702,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 16720,
											"end": 16725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16702,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 16702,
											"end": 16726,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16702,
											"end": 16726,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 16702,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16695,
											"end": 16700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16692,
											"end": 16727,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16741,
											"end": 16742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16738,
											"end": 16739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16731,
											"end": 16743,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16629,
											"end": 16751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16629,
											"end": 16751,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16757,
											"end": 16873,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 16757,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16827,
											"end": 16848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 16842,
											"end": 16847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16827,
											"end": 16848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 16827,
											"end": 16848,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16827,
											"end": 16848,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 16827,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16820,
											"end": 16825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16817,
											"end": 16849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16807,
											"end": 16867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 16807,
											"end": 16867,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16863,
											"end": 16864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16860,
											"end": 16861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16853,
											"end": 16865,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16807,
											"end": 16867,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 16807,
											"end": 16867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16757,
											"end": 16873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16757,
											"end": 16873,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 16879,
											"end": 17001,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 16879,
											"end": 17001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 16970,
											"end": 16975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16945,
											"end": 16950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16942,
											"end": 16977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16932,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 16932,
											"end": 16995,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16991,
											"end": 16992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16988,
											"end": 16989,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16981,
											"end": 16993,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16932,
											"end": 16995,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 16932,
											"end": 16995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16879,
											"end": 17001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16879,
											"end": 17001,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Return(address)": "de2d583a",
							"_usdcInstance()": "61778592",
							"bala(address)": "24076451",
							"getOwner()": "893d20e8",
							"getRecord(address)": "617fba04",
							"owner()": "8da5cb5b",
							"purchase(uint256)": "efef39a1",
							"renounceOwnership()": "715018a6",
							"saleEnd()": "c10b9358",
							"saleStart()": "ab0bcc41",
							"tokenAddress()": "9d76ea58",
							"transferOwnership(address)": "f2fde38b",
							"updateSaleEndTime(uint256)": "6f9c6149",
							"updateSaleStartTime(uint256)": "295e4edf",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"saleStart_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"usdcAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_returnAddress\",\"type\":\"address\"}],\"name\":\"Return\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_usdcInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"bala\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updatedSaleEndTime\",\"type\":\"uint256\"}],\"name\":\"updateSaleEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updatedSaleStartTime\",\"type\":\"uint256\"}],\"name\":\"updateSaleStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSale.sol\":\"TokenSale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/TokenSale.sol\":{\"keccak256\":\"0x11d980848b728269691acf2eab8bc236d5be30f35a81bd40f16b706c8fa6d6da\",\"license\":\"None\",\"urls\":[\"bzz-raw://eea81d79140b74a2c3c0223b25ccdceae95d2b3f04ec2da1f5a50bf4d47a8929\",\"dweb:/ipfs/QmWfLxgtHozopMNh1Q4T4kMzgXZ6sHXJzzhKutREii6X3m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 736,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_tokenAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 738,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_saleStart",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 740,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_saleEnd",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 742,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_usdcInstance",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 746,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "record",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							723
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 724,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								723
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 116,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 125,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 182,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 182,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 182,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 182,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 182,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 182,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"IERC20": [
							182
						],
						"SafeERC20": [
							406
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 183,
							"src": "125:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 702,
							"src": "149:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 187,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 190,
									"libraryName": {
										"id": 188,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "675:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:2",
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "803:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 201,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "833:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 204,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "863:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 149,
																		"src": "863:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 207,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "888:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "892:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 202,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 200,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "813:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "813:86:2"
											}
										]
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "732:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 191,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "732:6:2"
													},
													"referencedDeclaration": 182,
													"src": "732:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "754:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "774:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:2"
									},
									"scope": 406,
									"src": "701:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1040:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1070:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 229,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "1100:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "1100:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 232,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1129:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "1135:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "1139:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1050:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "947:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "947:6:2"
													},
													"referencedDeclaration": 182,
													"src": "947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "969:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "991:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1011:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:2"
									},
									"scope": 406,
									"src": "912:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1519:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 251,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "1768:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 254,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 259,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$406",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$406",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 257,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 261,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 245,
																					"src": "1815:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 255,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 243,
																					"src": "1784:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$182",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 159,
																				"src": "1784:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 265,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "1939:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "1969:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 169,
																		"src": "1969:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "1993:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "2002:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1919:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1443:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "1443:6:2"
													},
													"referencedDeclaration": 182,
													"src": "1443:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1465:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:2"
									},
									"scope": 406,
									"src": "1413:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2138:194:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "2148:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 299,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$406",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$406",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 297,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 301,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 295,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2171:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$182",
																	"typeString": "contract IERC20"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 159,
															"src": "2171:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 303,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2213:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 310,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "2278:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 169,
																		"src": "2278:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 313,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "2302:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 314,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2311:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 306,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "2228:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:2"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2062:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "2062:6:2"
													},
													"referencedDeclaration": 182,
													"src": "2062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2084:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2109:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:2"
									},
									"scope": 406,
									"src": "2022:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "2454:370:2",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:2",
												"statements": [
													{
														"assignments": [
															330
														],
														"declarations": [
															{
																"constant": false,
																"id": 330,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "2488:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 339,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 335,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$406",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$406",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 333,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 337,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "2542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 331,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2511:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 159,
																"src": "2511:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 341,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "2572:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 342,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "2588:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 340,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 346,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:2"
													},
													{
														"assignments": [
															348
														],
														"declarations": [
															{
																"constant": false,
																"id": 348,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "2653:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 352,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "2676:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 350,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2691:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 354,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2730:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 357,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "2760:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$182",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 169,
																				"src": "2760:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 360,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "2784:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 361,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "2793:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 355,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 353,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "2710:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:2"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2378:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 320,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "2378:6:2"
													},
													"referencedDeclaration": 182,
													"src": "2378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:2"
									},
									"scope": 406,
									"src": "2338:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "3277:636:2",
										"statements": [
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "3626:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 376,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "3680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 380,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "3660:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 378,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 495,
														"src": "3652:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3735:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "3731:176:2",
												"trueBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "3758:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 394,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "3830:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 396,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 395,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 397,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 392,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 391,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "3236:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 369,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "3236:6:2"
													},
													"referencedDeclaration": 182,
													"src": "3236:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "3250:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:2"
									},
									"scope": 406,
									"src": "3207:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 407,
							"src": "645:3270:2",
							"usedErrors": []
						}
					],
					"src": "100:3816:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 409,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 417,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 416,
												"id": 422,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 701,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 435,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 433,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 701,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 469,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 468,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															475,
															495
														],
														"referencedDeclaration": 495,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 467,
												"id": 473,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 701,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 491,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															565
														],
														"referencedDeclaration": 565,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 486,
												"id": 493,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 701,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 510,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 507,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															565
														],
														"referencedDeclaration": 565,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 506,
												"id": 513,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 701,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 532,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 530,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 542,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 541,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													548,
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 549,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 551,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 553,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 560,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 561,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 558,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 563,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 701,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 575,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															617
														],
														"referencedDeclaration": 617,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 580,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 701,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 596,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 595,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													602,
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 602,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 601,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 603,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"arguments": [
														{
															"id": 607,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 605,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 611,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 612,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 613,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 610,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 593,
												"id": 615,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 701,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 627,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															634,
															669
														],
														"referencedDeclaration": 669,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 626,
												"id": 632,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 701,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 648,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 647,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 657,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 664,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 665,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 662,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 645,
												"id": 667,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 701,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "7721:532:3",
										"statements": [
											{
												"condition": {
													"id": 681,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "7792:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 685,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 695,
																"nodeType": "Block",
																"src": "8184:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 692,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 676,
																					"src": "8209:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 691,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 694,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:3"
																	}
																]
															},
															"id": 696,
															"nodeType": "IfStatement",
															"src": "7872:365:3",
															"trueBody": {
																"id": 690,
																"nodeType": "Block",
																"src": "7899:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 689,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "7731:516:3",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 682,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 680,
															"id": 683,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 701,
									"src": "7561:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 702,
							"src": "194:8061:3",
							"usedErrors": []
						}
					],
					"src": "101:8155:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							723
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 704,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 708,
												"id": 711,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 723,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 718,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 717,
												"id": 720,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 723,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 724,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"contracts/TokenSale.sol": {
				"ast": {
					"absolutePath": "contracts/TokenSale.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"Context": [
							723
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeERC20": [
							406
						],
						"TokenSale": [
							979
						]
					},
					"id": 980,
					"license": "None",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 105,
							"src": "60:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 407,
							"src": "114:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 183,
							"src": "181:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 729,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "263:7:5"
									},
									"id": 730,
									"nodeType": "InheritanceSpecifier",
									"src": "263:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979,
								104,
								723
							],
							"name": "TokenSale",
							"nameLocation": "250:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 734,
									"libraryName": {
										"id": 731,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 406,
										"src": "281:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "275:27:5",
									"typeName": {
										"id": 733,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 732,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 182,
											"src": "295:6:5"
										},
										"referencedDeclaration": 182,
										"src": "295:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$182",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 736,
									"mutability": "mutable",
									"name": "_tokenAddress",
									"nameLocation": "322:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "306:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 735,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 738,
									"mutability": "mutable",
									"name": "_saleStart",
									"nameLocation": "356:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "340:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 737,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "340:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 740,
									"mutability": "mutable",
									"name": "_saleEnd",
									"nameLocation": "387:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "371:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 739,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "371:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "61778592",
									"id": 742,
									"mutability": "mutable",
									"name": "_usdcInstance",
									"nameLocation": "415:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "400:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 741,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 746,
									"mutability": "mutable",
									"name": "record",
									"nameLocation": "465:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "437:34:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 745,
										"keyType": {
											"id": 743,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "445:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "437:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 744,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "456:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "584:166:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 760,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "610:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 759,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "591:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "591:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "591:26:5"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 763,
														"name": "_usdcInstance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "624:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 764,
														"name": "usdcAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "640:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "624:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "624:28:5"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 767,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "659:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 768,
														"name": "tokenAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "675:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "659:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "659:29:5"
											},
											{
												"expression": {
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 771,
														"name": "_saleStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "695:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 772,
														"name": "saleStart_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "708:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "695:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "695:23:5"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 775,
														"name": "_saleEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "725:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 776,
														"name": "saleEnd_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "736:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "725:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "725:19:5"
											}
										]
									},
									"id": 780,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "498:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "490:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "tokenAddress_",
												"nameLocation": "513:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "505:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "saleStart_",
												"nameLocation": "535:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "527:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "saleEnd_",
												"nameLocation": "554:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "546:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "usdcAddress_",
												"nameLocation": "571:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "563:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:95:5"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:5"
									},
									"scope": 979,
									"src": "478:272:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "817:32:5",
										"statements": [
											{
												"expression": {
													"id": 785,
													"name": "_saleStart",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 738,
													"src": "833:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 784,
												"id": 786,
												"nodeType": "Return",
												"src": "826:17:5"
											}
										]
									},
									"functionSelector": "ab0bcc41",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saleStart",
									"nameLocation": "767:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:5"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "808:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:9:5"
									},
									"scope": 979,
									"src": "758:91:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "907:33:5",
										"statements": [
											{
												"expression": {
													"id": 793,
													"name": "_tokenAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 736,
													"src": "921:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 792,
												"id": 794,
												"nodeType": "Return",
												"src": "914:20:5"
											}
										]
									},
									"functionSelector": "9d76ea58",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenAddress",
									"nameLocation": "864:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:2:5"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "899:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:9:5"
									},
									"scope": 979,
									"src": "855:85:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "994:29:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 801,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1010:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:7:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 800,
												"id": 803,
												"nodeType": "Return",
												"src": "1003:14:5"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "955:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "963:2:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "986:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:9:5"
									},
									"scope": 979,
									"src": "946:77:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "1091:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 816,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1137:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 813,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1112:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 812,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1105:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1105:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 139,
														"src": "1105:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 811,
												"id": 818,
												"nodeType": "Return",
												"src": "1098:43:5"
											}
										]
									},
									"functionSelector": "24076451",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bala",
									"nameLocation": "1036:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "1049:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1041:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:13:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1083:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:5"
									},
									"scope": 979,
									"src": "1027:120:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "1210:30:5",
										"statements": [
											{
												"expression": {
													"id": 825,
													"name": "_saleEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 740,
													"src": "1226:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 826,
												"nodeType": "Return",
												"src": "1219:15:5"
											}
										]
									},
									"functionSelector": "c10b9358",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saleEnd",
									"nameLocation": "1162:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:9:5"
									},
									"scope": 979,
									"src": "1153:87:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1319:36:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 835,
														"name": "record",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1333:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 837,
													"indexExpression": {
														"id": 836,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1340:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1333:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 834,
												"id": 838,
												"nodeType": "Return",
												"src": "1326:23:5"
											}
										]
									},
									"functionSelector": "617fba04",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecord",
									"nameLocation": "1255:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1273:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1265:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:18:5"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1311:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:9:5"
									},
									"scope": 979,
									"src": "1246:109:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "1402:264:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 846,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1419:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1419:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 848,
																"name": "_saleStart",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "1436:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1419:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206861736e2774207374617274656420796574",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																"typeString": "literal_string \"Sale hasn't started yet\""
															},
															"value": "Sale hasn't started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a676bad1ae185ce175658f2338db3f28f51cfdd29845ce7737a6e629c8c4b4e9",
																"typeString": "literal_string \"Sale hasn't started yet\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1411:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1411:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "1411:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 854,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1490:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1490:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 856,
																"name": "_saleEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "1507:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1490:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652068617320656e646564",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1516:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																"typeString": "literal_string \"Sale has ended\""
															},
															"value": "Sale has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41329b3c2355bdbfae8b85e9db2c4de509d6c1e3cfef70c8351db198ef52d96d",
																"typeString": "literal_string \"Sale has ended\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1482:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "1482:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 865,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1581:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1581:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1592:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "1607:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 862,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1549:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 861,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1542:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1542:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "1542:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "1542:73:5"
											},
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 871,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "1624:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 874,
														"indexExpression": {
															"expression": {
																"id": 872,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1631:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1631:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1624:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 875,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "1646:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1654:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1654:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1646:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1624:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "1624:36:5"
											}
										]
									},
									"functionSelector": "efef39a1",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchase",
									"nameLocation": "1370:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1387:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "1379:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:17:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:0:5"
									},
									"scope": 979,
									"src": "1361:305:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "1729:164:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 891,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1746:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1746:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 893,
																"name": "_saleEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "1762:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1746:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206861736e277420656e646564",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1771:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
																"typeString": "literal_string \"Sale hasn't ended\""
															},
															"value": "Sale hasn't ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf23a9599d9c4265c57f555835c08e072bd554a15b9fe63affe20f684c53f0bf",
																"typeString": "literal_string \"Sale hasn't ended\""
															}
														],
														"id": 890,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1738:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "1738:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "1835:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 907,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "1872:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 904,
																			"name": "_usdcInstance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 742,
																			"src": "1847:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 903,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "1840:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1840:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 139,
																"src": "1840:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1840:46:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 899,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1807:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 898,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1800:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1800:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 213,
														"src": "1800:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1800:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "1800:87:5"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 887,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1720:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1720:9:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "1683:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1700:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1692:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:13:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:5"
									},
									"scope": 979,
									"src": "1674:219:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "2202:302:5",
										"statements": [
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "returnAmt",
														"nameLocation": "2217:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 953,
														"src": "2209:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 921,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2209:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 926,
												"initialValue": {
													"baseExpression": {
														"id": 923,
														"name": "record",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2229:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 925,
													"indexExpression": {
														"id": 924,
														"name": "_returnAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "2236:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2229:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2209:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 932,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "2298:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 929,
																				"name": "_usdcInstance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "2273:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 928,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 182,
																			"src": "2266:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2266:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$182",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 139,
																	"src": "2266:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "returnAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "2314:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2324:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2328:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "2324:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "2314:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2266:64:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e20746f2072657475726e",
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2331:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
																"typeString": "literal_string \"Not enough token to return\""
															},
															"value": "Not enough token to return"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc96d8380e39ece286d35b9cec90379fdc86b44f5f1813d96b409b5504576d9e",
																"typeString": "literal_string \"Not enough token to return\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2258:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2258:102:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "2258:102:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "_returnAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2455:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "returnAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "2470:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 944,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "2427:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 943,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "2420:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2420:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 213,
														"src": "2420:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2420:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "2420:60:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2494:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 920,
												"id": 952,
												"nodeType": "Return",
												"src": "2487:11:5"
											}
										]
									},
									"functionSelector": "de2d583a",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 916,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2179:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2179:9:5"
										}
									],
									"name": "Return",
									"nameLocation": "2133:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "_returnAddress",
												"nameLocation": "2148:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2140:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:24:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2197:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:6:5"
									},
									"scope": 979,
									"src": "2124:380:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2585:48:5",
										"statements": [
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 961,
														"name": "_saleStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "2594:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 962,
														"name": "updatedSaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2607:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2594:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2594:33:5"
											}
										]
									},
									"functionSelector": "295e4edf",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 959,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 958,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2576:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2576:9:5"
										}
									],
									"name": "updateSaleStartTime",
									"nameLocation": "2519:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "updatedSaleStartTime",
												"nameLocation": "2547:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2539:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2538:30:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2585:0:5"
									},
									"scope": 979,
									"src": "2510:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "2708:44:5",
										"statements": [
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "_saleEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "2717:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 974,
														"name": "updatedSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2728:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "2717:29:5"
											}
										]
									},
									"functionSelector": "6f9c6149",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 971,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 970,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2699:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2699:9:5"
										}
									],
									"name": "updateSaleEndTime",
									"nameLocation": "2646:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "updatedSaleEndTime",
												"nameLocation": "2672:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2664:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:28:5"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:0:5"
									},
									"scope": 979,
									"src": "2637:115:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 980,
							"src": "241:2516:5",
							"usedErrors": []
						}
					],
					"src": "33:2724:5"
				},
				"id": 5
			}
		}
	}
}